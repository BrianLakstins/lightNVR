{"version":3,"mappings":"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","names":["createContext","DeleteConfirmationModal","props","isOpen","onClose","onConfirm","mode","count","title","message","jsx","e","jsxs","SnapshotPreviewModal","imageData","streamName","onDownload","modalRef","useRef","useEffect","handleKeyDown","modalContent","handleBackgroundClick","createPortal","VideoModal","videoUrl","downloadUrl","detectionOverlayEnabled","setDetectionOverlayEnabled","useState","timeWindow","setTimeWindow","detections","setDetections","recordingData","setRecordingData","detectionStatus","setDetectionStatus","currentSpeed","setCurrentSpeed","videoRef","canvasRef","recordingIdMatch","recordingId","response","data","startTime","endTime","detectionsResponse","fetchedDetections","error","drawDetections","useCallback","video","canvas","videoWidth","videoHeight","ctx","currentTime","currentTimestamp","visibleDetections","detection","x","y","width","height","labelText","labelWidth","handlePlay","handleSeeked","handleTimeUpdate","handleSpeedChange","speed","handleTimeWindowChange","newTimeWindow","setupModals","addModalStyles","showVideoModal","root","modalContainer","__vitePreload","render","h2","n","h","err","showStatusMessage","showSnapshotPreview","useSnapshotManager2","useSnapshotManager","downloadSnapshot","timestamp","fileName","link"],"ignoreList":[],"sources":["../../js/components/preact/UI.jsx"],"sourcesContent":["/**\n * UI utility components for LightNVR\n * JSX version of UI components\n */\n\nimport { h, createContext } from 'preact';\nimport { useState, useEffect, useRef, useCallback } from 'preact/hooks';\nimport { createPortal } from 'preact/compat';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { useSnapshotManager } from './SnapshotManager.jsx';\n\n// Create contexts for modals\nexport const ModalContext = createContext({\n  showVideoModal: () => {},\n  showSnapshotPreview: () => {}\n});\n\n/**\n * DeleteConfirmationModal component for Preact\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {Function} props.onConfirm - Function to call when delete is confirmed\n * @param {string} props.mode - Delete mode ('selected' or 'all')\n * @param {number} props.count - Number of items selected (for 'selected' mode)\n * @returns {JSX.Element} DeleteConfirmationModal component\n */\nexport function DeleteConfirmationModal(props) {\n  const { isOpen, onClose, onConfirm, mode, count } = props;\n\n  if (!isOpen) return null;\n\n  // Determine title and message based on mode\n  let title = 'Confirm Delete';\n  let message = 'Are you sure you want to delete this item?';\n\n  if (mode === 'selected') {\n    title = 'Delete Selected Recordings';\n    message = `Are you sure you want to delete ${count} selected recording${count !== 1 ? 's' : ''}?`;\n  } else if (mode === 'all') {\n    title = 'Delete All Filtered Recordings';\n    message = 'Are you sure you want to delete all recordings matching the current filters? This action cannot be undone.';\n  }\n\n  // Handle escape key\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n      onKeyDown={handleKeyDown}\n    >\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 max-w-md mx-auto\">\n        <div class=\"mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">{title}</h3>\n        </div>\n\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\">{message}</p>\n\n        <div class=\"flex justify-end space-x-3\">\n          <button\n            class=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n            onClick={onConfirm}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * SnapshotPreviewModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.imageData - Image data URL\n * @param {string} props.streamName - Stream name\n * @returns {JSX.Element} SnapshotPreviewModal component\n */\nexport function SnapshotPreviewModal({ isOpen, onClose, imageData, streamName, onDownload }) {\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    // Handle escape key\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Animate in\n    if (isOpen && modalRef.current) {\n      setTimeout(() => {\n        const modalContent = modalRef.current.querySelector('.modal-content');\n        if (modalContent) {\n          modalContent.classList.remove('scale-95', 'opacity-0');\n          modalContent.classList.add('scale-100', 'opacity-100');\n        }\n      }, 10);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"snapshot-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className=\"modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out scale-95 opacity-0\" style={{ width: '90%' }}>\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"snapshot-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {streamName ? `Snapshot: ${streamName}` : 'Snapshot'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            ✕\n          </button>\n        </div>\n        <div className=\"p-4 overflow-auto flex-grow\">\n          <img\n            id=\"snapshot-preview-image\"\n            className=\"max-w-full max-h-[70vh] mx-auto\"\n            src={imageData}\n            alt=\"Snapshot\"\n          />\n        </div>\n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-2\">\n          <button\n            id=\"snapshot-download-btn\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n            onClick={onDownload}\n          >\n            Download\n          </button>\n          <button\n            id=\"snapshot-close-btn\"\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * VideoModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.videoUrl - URL of the video to display\n * @param {string} props.title - Title for the video\n * @param {string} props.downloadUrl - Optional URL for downloading the video\n * @returns {JSX.Element} VideoModal component\n */\nexport function VideoModal({ isOpen, onClose, videoUrl, title, downloadUrl }) {\n  const [detectionOverlayEnabled, setDetectionOverlayEnabled] = useState(false);\n  const [timeWindow, setTimeWindow] = useState(2);\n  const [detections, setDetections] = useState([]);\n  const [recordingData, setRecordingData] = useState(null);\n  const [detectionStatus, setDetectionStatus] = useState('No detections loaded');\n  const [currentSpeed, setCurrentSpeed] = useState(1.0);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Handle escape key\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // Fetch recording data and detections\n  useEffect(() => {\n    if (!isOpen || !videoUrl) return;\n\n    // Extract recording ID from URL\n    const recordingIdMatch = videoUrl.match(/\\/play\\/(\\d+)/);\n    if (!recordingIdMatch || !recordingIdMatch[1]) return;\n\n    const recordingId = parseInt(recordingIdMatch[1], 10);\n\n    // Fetch recording data\n    const fetchRecordingData = async () => {\n      try {\n        const response = await fetch(`/api/recordings/${recordingId}`);\n        if (!response.ok) throw new Error('Failed to fetch recording data');\n\n        const data = await response.json();\n        setRecordingData(data);\n\n        // If we have recording data, fetch detections\n        if (data && data.stream && data.start_time && data.end_time) {\n          const startTime = Math.floor(new Date(data.start_time).getTime() / 1000);\n          const endTime = Math.floor(new Date(data.end_time).getTime() / 1000);\n\n          const detectionsResponse = await fetch(\n            `/api/detection/results/${data.stream}?start=${startTime}&end=${endTime}`\n          );\n\n          if (!detectionsResponse.ok) throw new Error('Failed to fetch detections');\n\n          const detectionsData = await detectionsResponse.json();\n          const fetchedDetections = detectionsData.detections || [];\n          setDetections(fetchedDetections);\n\n          if (fetchedDetections.length > 0) {\n            setDetectionStatus(`${fetchedDetections.length} detection${fetchedDetections.length !== 1 ? 's' : ''} available`);\n          } else {\n            setDetectionStatus('No detections found for this recording');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setDetectionStatus('Error loading detections');\n      }\n    };\n\n    fetchRecordingData();\n  }, [isOpen, videoUrl]);\n\n  // Draw detections on canvas\n  const drawDetections = useCallback(() => {\n    if (!detectionOverlayEnabled || !videoRef.current || !canvasRef.current || detections.length === 0) {\n      return;\n    }\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Get video dimensions\n    const videoWidth = video.videoWidth;\n    const videoHeight = video.videoHeight;\n\n    if (videoWidth === 0 || videoHeight === 0) {\n      // Video dimensions not available yet, try again later\n      requestAnimationFrame(drawDetections);\n      return;\n    }\n\n    // Set canvas dimensions to match video\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    // Get canvas context\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get current video time in seconds\n    const currentTime = video.currentTime;\n\n    // Calculate the timestamp for the current video position\n    if (!recordingData || !recordingData.start_time) {\n      return;\n    }\n\n    // Convert recording start time to seconds\n    const recordingStartTime = Math.floor(new Date(recordingData.start_time).getTime() / 1000);\n\n    // Calculate current timestamp in the video\n    const currentTimestamp = recordingStartTime + Math.floor(currentTime);\n\n    // Filter detections to only show those within the time window\n    const visibleDetections = detections.filter(detection => {\n      if (!detection.timestamp) return false;\n\n      // Check if detection is within the time window\n      return Math.abs(detection.timestamp - currentTimestamp) <= timeWindow;\n    });\n\n    // Update status with count of visible detections\n    if (visibleDetections.length > 0) {\n      setDetectionStatus(`Showing ${visibleDetections.length} detection${visibleDetections.length !== 1 ? 's' : ''} at current time`);\n    } else {\n      setDetectionStatus(`No detections at current time (${detections.length} total)`);\n    }\n\n    // Draw each visible detection\n    visibleDetections.forEach(detection => {\n      // Calculate coordinates based on relative positions\n      const x = detection.x * videoWidth;\n      const y = detection.y * videoHeight;\n      const width = detection.width * videoWidth;\n      const height = detection.height * videoHeight;\n\n      // Draw bounding box\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.8)';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, width, height);\n\n      // Draw label background\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      const labelText = `${detection.label} (${Math.round(detection.confidence * 100)}%)`;\n      const labelWidth = ctx.measureText(labelText).width + 10;\n      ctx.fillRect(x, y - 20, labelWidth, 20);\n\n      // Draw label text\n      ctx.fillStyle = 'white';\n      ctx.font = '12px Arial';\n      ctx.fillText(labelText, x + 5, y - 5);\n    });\n\n    // Request next frame if video is playing\n    if (!video.paused && !video.ended) {\n      requestAnimationFrame(drawDetections);\n    }\n  }, [detectionOverlayEnabled, detections, recordingData, timeWindow]);\n\n  // Set up video event listeners\n  useEffect(() => {\n    if (!isOpen || !videoRef.current) return;\n\n    const video = videoRef.current;\n\n    const handlePlay = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleSeeked = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleTimeUpdate = () => {\n      if (detectionOverlayEnabled) {\n        // Don't redraw on every timeupdate as it's too frequent\n        // Instead, redraw every 0.5 seconds\n        const currentTime = Math.floor(video.currentTime * 2) / 2;\n        if (video.lastDrawnTime !== currentTime) {\n          video.lastDrawnTime = currentTime;\n          drawDetections();\n        }\n      }\n    };\n\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('seeked', handleSeeked);\n    video.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('seeked', handleSeeked);\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [isOpen, detectionOverlayEnabled, drawDetections]);\n\n  // Update detection overlay when enabled/disabled\n  useEffect(() => {\n    if (detectionOverlayEnabled) {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'block';\n      }\n      drawDetections();\n    } else {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'none';\n      }\n    }\n  }, [detectionOverlayEnabled, drawDetections]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Handle speed change\n  const handleSpeedChange = (speed) => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = speed;\n      setCurrentSpeed(speed);\n    }\n  };\n\n  // Handle time window change\n  const handleTimeWindowChange = (e) => {\n    const newTimeWindow = parseInt(e.target.value, 10);\n    setTimeWindow(newTimeWindow);\n    if (detectionOverlayEnabled) {\n      drawDetections();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"video-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className=\"modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out scale-95 opacity-0 w-full md:w-[90%]\">\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"video-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {title || 'Video'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            ✕\n          </button>\n        </div>\n\n        <div className=\"p-4 flex-grow\">\n          <div className=\"relative\">\n            <video\n              ref={videoRef}\n              className=\"w-full h-auto max-w-full object-contain mx-auto\"\n              src={videoUrl}\n              controls\n              autoPlay\n            />\n            <canvas\n              ref={canvasRef}\n              className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div id=\"recordings-controls\" className=\"mx-4 mb-4 p-4 border border-green-500 rounded-lg bg-white dark:bg-gray-700 shadow-md relative z-10\">\n          <h3 className=\"text-lg font-bold text-center mb-4 text-gray-800 dark:text-white\">\n            PLAYBACK CONTROLS\n          </h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-2\">\n            {/* Speed controls section */}\n            <div className=\"border-b pb-4 md:border-b-0 md:border-r md:pr-4 md:pb-0\">\n              <h4 className=\"font-bold text-center mb-3 text-gray-700 dark:text-gray-300\">\n                Playback Speed\n              </h4>\n\n              <div className=\"flex flex-wrap justify-center gap-2\">\n                {[0.25, 0.5, 1.0, 1.5, 2.0, 4.0].map(speed => (\n                  <button\n                    key={speed}\n                    className={`speed-btn px-3 py-2 rounded-full ${\n                      speed === currentSpeed\n                        ? 'bg-green-500 text-white'\n                        : 'bg-gray-200 hover:bg-gray-300'\n                    } text-sm font-medium transition-all focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50`}\n                    data-speed={speed}\n                    onClick={() => handleSpeedChange(speed)}\n                  >\n                    {speed === 1.0 ? '1× (Normal)' : `${speed}×`}\n                  </button>\n                ))}\n              </div>\n\n              <div id=\"current-speed-indicator\" className=\"mt-3 text-center font-medium text-green-600 dark:text-green-400 text-sm\">\n                Current Speed: {currentSpeed}× {currentSpeed === 1.0 ? '(Normal)' : ''}\n              </div>\n            </div>\n\n            {/* Detection overlay section */}\n            <div className=\"pt-4 md:pt-0 md:pl-4\">\n              <h4 className=\"font-bold text-center mb-2 text-gray-700 dark:text-gray-300\">\n                Detection Overlays\n              </h4>\n\n              <div className=\"flex flex-col items-center gap-2\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"detection-overlay-checkbox\"\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                    checked={detectionOverlayEnabled}\n                    onChange={(e) => setDetectionOverlayEnabled(e.target.checked)}\n                    disabled={detections.length === 0}\n                  />\n                  <label\n                    htmlFor=\"detection-overlay-checkbox\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  >\n                    Show Detection Overlays\n                  </label>\n                </div>\n\n                <div className=\"flex flex-col w-full mt-2 mb-2\">\n                  <label\n                    htmlFor=\"detection-sensitivity-slider\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                  >\n                    Detection Sensitivity\n                  </label>\n\n                  <input\n                    type=\"range\"\n                    id=\"detection-sensitivity-slider\"\n                    className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                    min=\"1\"\n                    max=\"10\"\n                    step=\"1\"\n                    value={timeWindow}\n                    onChange={handleTimeWindowChange}\n                  />\n\n                  <div id=\"detection-sensitivity-value\" className=\"text-xs text-gray-600 dark:text-gray-400 text-center mb-1\">\n                    Time Window: {timeWindow} second{timeWindow !== 1 ? 's' : ''}\n                  </div>\n                </div>\n\n                <div id=\"detection-status-indicator\" className={`text-center text-sm ${\n                  detections.length > 0\n                    ? 'font-medium text-green-600 dark:text-green-400'\n                    : 'text-gray-600 dark:text-gray-400'\n                }`}>\n                  {detectionStatus}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Download button */}\n          {downloadUrl && (\n            <div className=\"flex justify-center mt-4 pt-2 border-t border-gray-200 dark:border-gray-700\">\n              <a\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors flex items-center text-sm\"\n                href={downloadUrl}\n                download={`video-${Date.now()}.mp4`}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                </svg>\n                Download Video\n              </a>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-2\"></div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * ModalProvider component\n * Provides modal context and renders modal components\n */\nexport function ModalProvider({ children }) {\n  const [snapshotModal, setSnapshotModal] = useState({\n    isOpen: false,\n    imageData: '',\n    streamName: '',\n  });\n\n  const [videoModal, setVideoModal] = useState({\n    isOpen: false,\n    videoUrl: '',\n    title: '',\n    downloadUrl: '',\n  });\n\n  // Show snapshot preview\n  const showSnapshotPreview = useCallback((imageData, streamName) => {\n    setSnapshotModal({\n      isOpen: true,\n      imageData,\n      streamName,\n    });\n  }, []);\n\n  // Show video modal\n  const showVideoModal = useCallback((videoUrl, title, downloadUrl) => {\n    setVideoModal({\n      isOpen: true,\n      videoUrl,\n      title,\n      downloadUrl,\n    });\n  }, []);\n\n  // Use the snapshot manager hook for download functionality\n  const { downloadSnapshot } = useSnapshotManager();\n\n  // Handle snapshot download\n  const handleSnapshotDownload = useCallback(() => {\n    try {\n      const { imageData, streamName } = snapshotModal;\n\n      if (!imageData) {\n        console.error('No image data available for download');\n        showStatusMessage('Download failed: No image data available', 'error', 5000);\n        return;\n      }\n\n      // Use the downloadSnapshot function from the hook if available\n      if (downloadSnapshot) {\n        downloadSnapshot();\n        return;\n      }\n\n      // Fallback to the old implementation\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n      const link = document.createElement('a');\n      link.href = imageData;\n      link.download = fileName;\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        document.body.removeChild(link);\n      }, 100);\n\n      showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n    } catch (error) {\n      console.error('Error in snapshot download process:', error);\n      showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n    }\n  }, [snapshotModal, downloadSnapshot]);\n\n  // Close snapshot modal\n  const closeSnapshotModal = useCallback(() => {\n    setSnapshotModal(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  // Close video modal\n  const closeVideoModal = useCallback(() => {\n    setVideoModal(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  // Create context value\n  const contextValue = {\n    showSnapshotPreview,\n    showVideoModal,\n  };\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      {children}\n\n      {/* Render modals */}\n      <SnapshotPreviewModal\n        isOpen={snapshotModal.isOpen}\n        onClose={closeSnapshotModal}\n        imageData={snapshotModal.imageData}\n        streamName={snapshotModal.streamName}\n        onDownload={handleSnapshotDownload}\n      />\n\n      <VideoModal\n        isOpen={videoModal.isOpen}\n        onClose={closeVideoModal}\n        videoUrl={videoModal.videoUrl}\n        title={videoModal.title}\n        downloadUrl={videoModal.downloadUrl}\n      />\n    </ModalContext.Provider>\n  );\n}\n\n// Export functions for backward compatibility\nexport function setupModals() {\n  console.warn('setupModals() is deprecated. Use <ModalProvider> component instead.');\n  // This function is kept for backward compatibility\n}\n\nexport function addModalStyles() {\n  console.warn('addModalStyles() is deprecated. Modal styles are now included in components.css');\n  // This function is kept for backward compatibility\n}\n\nexport function showVideoModal(videoUrl, title, downloadUrl) {\n  console.warn('Direct showVideoModal() is deprecated. Use ModalContext.showVideoModal instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showVideoModal) {\n    window.__modalContext.showVideoModal(videoUrl, title, downloadUrl);\n    return;\n  }\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-modal-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  import('preact').then(({ render, h }) => {\n    render(\n      h(VideoModal, {\n        isOpen: true,\n        onClose: () => {\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        videoUrl,\n        title,\n        downloadUrl\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering video modal:', err);\n    showStatusMessage('Error showing video modal: ' + err.message, 'error');\n  });\n}\n\nexport function showSnapshotPreview(imageData, streamName) {\n  console.warn('Direct showSnapshotPreview() is deprecated. Use ModalContext.showSnapshotPreview instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showSnapshotPreview) {\n    window.__modalContext.showSnapshotPreview(imageData, streamName);\n    return;\n  }\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-snapshot-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  import('preact').then(({ render, h }) => {\n    const handleDownload = () => {\n      try {\n        // Import the snapshot manager hook\n        import('./SnapshotManager.jsx').then(({ useSnapshotManager }) => {\n          const { downloadSnapshot } = useSnapshotManager();\n          if (downloadSnapshot) {\n            downloadSnapshot();\n          } else {\n            // Fallback to the old implementation\n            const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n            const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n            const link = document.createElement('a');\n            link.href = imageData;\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n\n            // Clean up\n            setTimeout(() => {\n              document.body.removeChild(link);\n            }, 100);\n\n            showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n          }\n        }).catch(error => {\n          console.error('Error importing SnapshotManager:', error);\n          // Fallback to the old implementation\n          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n          const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n          const link = document.createElement('a');\n          link.href = imageData;\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n\n          // Clean up\n          setTimeout(() => {\n            document.body.removeChild(link);\n          }, 100);\n\n          showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n        });\n      } catch (error) {\n        console.error('Error downloading snapshot:', error);\n        showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n      }\n    };\n\n    render(\n      h(SnapshotPreviewModal, {\n        isOpen: true,\n        onClose: () => {\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        imageData,\n        streamName,\n        onDownload: handleDownload\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering snapshot modal:', err);\n    showStatusMessage('Error showing snapshot preview: ' + err.message, 'error');\n  });\n}\n"],"file":"assets/UI-QFITwjX7.js"}