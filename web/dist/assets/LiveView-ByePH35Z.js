const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./preact-app-FWUGqQo_.js","./preact-app-EtKUVNvg.css"])))=>i.map(i=>d[i]);
var M=Object.freeze,N=Object.defineProperty;var E=(e,a)=>M(N(e,"raw",{value:M(a||e.slice())}));import{c as v,e as z,d as $,A as _,y as R,h as S,_ as W}from"./preact-app-FWUGqQo_.js";import{L as G}from"./LoadingIndicator-CiahmyRu.js";import{c as J,s as K,a as Q,t as X,e as Y}from"./DetectionOverlay-CWN1kWeE.js";function A(e,a,n){const l="video-".concat(e.name.replace(/\s+/g,"-")),o=document.getElementById(l),t=o?o.closest(".video-cell"):null;if(!o||!t)return;const c="canvas-".concat(e.name.replace(/\s+/g,"-"));let i=document.getElementById(c);i||(i=document.createElement("canvas"),i.id=c,i.className="detection-overlay",i.style.position="absolute",i.style.top="0",i.style.left="0",i.style.width="100%",i.style.height="100%",i.style.pointerEvents="none",t.appendChild(i)),console.log("Stream ".concat(e.name," detection settings:"),{detection_based_recording:e.detection_based_recording,detection_model:e.detection_model,detection_threshold:e.detection_threshold}),e.detection_based_recording&&e.detection_model?(console.log("Starting detection polling for stream ".concat(e.name)),K(e.name,i,o,n)):console.log("Detection not enabled for stream ".concat(e.name));const r=t.querySelector(".loading-indicator");r&&(r.style.display="flex");const p=Date.now(),u="/hls/".concat(encodeURIComponent(e.name),"/index.m3u8?_t=").concat(p);if(localStorage.getItem("auth"),console.log("Initializing video player for stream ".concat(e.name)),o.canPlayType("application/vnd.apple.mpegurl"))console.log("Using native HLS support for stream ".concat(e.name)),o.src=u,o.addEventListener("loadedmetadata",function(){console.log("Metadata loaded for stream ".concat(e.name)),r&&(r.style.display="none")}),o.addEventListener("error",g=>{console.error("Video error for stream ".concat(e.name,":"),o.error),x(e.name,o.error?o.error.message:"Unknown error")}),o.play().catch(g=>{console.warn("Auto-play prevented:",g),C(t,o)});else if(window.Hls&&window.Hls.isSupported()){const g=localStorage.getItem("auth"),s=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent),d=new window.Hls({maxBufferLength:s?30:20,maxMaxBufferLength:s?60:30,liveSyncDurationCount:s?4:3,liveMaxLatencyDurationCount:s?10:6,liveDurationInfinity:!1,lowLatencyMode:!1,enableWorker:!0,fragLoadingTimeOut:s?6e4:3e4,manifestLoadingTimeOut:s?6e4:3e4,levelLoadingTimeOut:s?6e4:3e4,backBufferLength:s?60:30,startLevel:s?0:-1,abrEwmaDefaultEstimate:s?1e6:5e5,abrBandWidthFactor:s?.5:.7,abrBandWidthUpFactor:s?.3:.5,xhrSetup:function(h,f){g&&h.setRequestHeader("Authorization","Basic "+g),h.withCredentials=!0}});d.loadSource(u),d.attachMedia(o),d.on(window.Hls.Events.MANIFEST_PARSED,()=>{console.log("Manifest parsed for stream ".concat(e.name)),/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)?(console.log("Mobile device detected for stream ".concat(e.name,", using muted autoplay")),o.muted=!0,setTimeout(()=>{r&&(r.style.display="none"),o.play().then(()=>{console.log("Autoplay succeeded for stream ".concat(e.name," on mobile"))}).catch(f=>{console.warn("Autoplay failed for stream ".concat(e.name," on mobile:"),f),C(t,o)})},500)):(r&&(r.style.display="none"),o.play().catch(f=>{console.warn("Auto-play prevented:",f),C(t,o)}))}),d.on(window.Hls.Events.ERROR,(h,f)=>{if(console.warn("HLS error:",f),f.fatal){console.error("Fatal HLS error:",f),d.destroy();const m=o.closest(".video-cell"),w=m.querySelector(".loading-indicator");if(w&&w.querySelector("span").textContent==="Starting stream...")console.log("Stream ".concat(e.name," failed to load after enabling, retrying in 2 seconds...")),w.querySelector("span").textContent="Retrying connection...",setTimeout(()=>{console.log("Retrying stream ".concat(e.name," after failure")),fetch("/api/streams/".concat(encodeURIComponent(e.name))).then(y=>y.json()).then(y=>{P(e.name,a,n),A(y,a,n)}).catch(y=>{console.error("Error fetching stream info for retry: ".concat(y)),x(e.name,"Failed to reconnect after enabling")})},2e3);else{if(console.log("Implementing standard retry for stream ".concat(e.name)),w){w.style.display="flex";const y=w.querySelector("span");y&&(y.textContent="Reconnecting to stream...")}setTimeout(()=>{try{const y=Date.now(),j="/hls/".concat(encodeURIComponent(e.name),"/index.m3u8?_t=").concat(y),b=new window.Hls({maxBufferLength:s?30:20,maxMaxBufferLength:s?60:30,liveSyncDurationCount:s?4:3,liveMaxLatencyDurationCount:s?10:6,liveDurationInfinity:!1,lowLatencyMode:!1,enableWorker:!0,fragLoadingTimeOut:s?6e4:3e4,manifestLoadingTimeOut:s?6e4:3e4,levelLoadingTimeOut:s?6e4:3e4,backBufferLength:s?60:30,startLevel:s?0:-1,abrEwmaDefaultEstimate:s?1e6:5e5,abrBandWidthFactor:s?.5:.7,abrBandWidthUpFactor:s?.3:.5,xhrSetup:function(T,k){g&&T.setRequestHeader("Authorization","Basic "+g),T.withCredentials=!0}});b.loadSource(j),b.attachMedia(o),m&&(m.hlsPlayer&&m.hlsPlayer.destroy(),m.hlsPlayer=b),a[e.name]={hls:b,refreshTimer:a[e.name]?a[e.name].refreshTimer:null},b.on(window.Hls.Events.MEDIA_ATTACHED,()=>{console.log("New HLS instance attached for stream ".concat(e.name)),w&&(w.style.display="none"),C(m,o)}),b.on(window.Hls.Events.ERROR,(T,k)=>{k.fatal&&(console.error("Fatal error in recovery HLS instance:",k),b.destroy(),x(e.name,"Failed to reconnect after multiple attempts"))})}catch(y){console.error("Error during HLS recovery:",y),x(e.name,"Failed to reconnect: "+y.message)}},3e3)}}else if(f.type===window.Hls.ErrorTypes.NETWORK_ERROR){if(console.warn("Network error, attempting to recover:",f),o.currentTime>0)try{d.recoverMediaError(),o.currentTime=o.duration-1}catch(m){console.error("Error during recovery seek:",m)}if(f.details===window.Hls.ErrorDetails.FRAG_LOAD_ERROR||f.details===window.Hls.ErrorDetails.FRAG_LOAD_TIMEOUT)try{const m=d.currentLevel;m>0&&(console.log("Switching from level ".concat(m," to level 0 due to fragment error")),d.currentLevel=0)}catch(m){console.error("Error during level switching:",m)}}else if(f.type===window.Hls.ErrorTypes.MEDIA_ERROR){console.warn("Media error, attempting to recover:",f);try{d.recoverMediaError()}catch(m){console.error("Error during media error recovery:",m)}}});const L=setInterval(()=>{if(t&&t.hlsPlayer){console.log("Refreshing HLS stream for ".concat(e.name));const h=Date.now(),f="/hls/".concat(encodeURIComponent(e.name),"/index.m3u8?_t=").concat(h);t.hlsPlayer.autoLevelCapping?console.log("Skipping refresh for ".concat(e.name," as it appears to be in recovery mode")):t.hlsPlayer.loadSource(f)}else clearInterval(L)},3e4);t.hlsPlayer=d,t.refreshTimer=L,a[e.name]={hls:d,refreshTimer:L}}else x(e.name,"HLS not supported by your browser")}function C(e,a){if(e.querySelector(".play-overlay"))return;const n=document.createElement("div");n.className="play-overlay";const l=document.createElement("div");if(l.className="play-button",l.innerHTML='\n    <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>\n    </svg>\n  ',/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)){const t=document.createElement("div");t.className="tap-message",t.textContent="Tap to play",t.style.color="white",t.style.marginTop="10px",t.style.fontSize="14px",l.appendChild(t)}n.appendChild(l),e.appendChild(n);const o=function(){n.style.pointerEvents="none";const t=e.querySelector(".loading-indicator");t&&(t.style.display="flex"),l.style.transform="scale(0.9)",a.play().then(()=>{n.remove(),t&&(t.style.display="none")}).catch(c=>{console.error("Play failed:",c),n.style.pointerEvents="auto",l.style.transform="",t&&(t.style.display="none"),v("Auto-play blocked by browser. Please try again or check your browser settings."),/iPhone|iPad|iPod/i.test(navigator.userAgent)&&(a.muted=!0,v("Video muted to allow playback on iOS. Tap again to play."))})};n.addEventListener("click",o),n.addEventListener("touchend",function(t){t.preventDefault(),o()})}function x(e,a){const n="video-".concat(e.replace(/\s+/g,"-")),l=document.getElementById(n),o=l?l.closest(".video-cell"):null;if(!o)return;const t=o.querySelector(".loading-indicator");t&&(t.style.display="none");let c=o.querySelector(".error-indicator");c||(c=document.createElement("div"),c.className="error-indicator",o.appendChild(c)),c.innerHTML='\n    <div class="error-icon">!</div>\n    <p>'.concat(a||"Stream connection failed",'</p>\n    <button class="retry-button mt-4 px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors">Retry</button>\n  ');const i=c.querySelector(".retry-button");i&&i.addEventListener("click",()=>{t&&(t.style.display="flex"),c.style.display="none",fetch("/api/streams/".concat(encodeURIComponent(e))).then(r=>r.json()).then(r=>{P(e,videoPlayers,detectionIntervals),A(r,videoPlayers,detectionIntervals)}).catch(r=>{console.error("Error fetching stream info:",r),c.style.display="flex";const p=c.querySelector("p");p&&(p.textContent="Could not reconnect: "+r.message),t&&(t.style.display="none")})})}function P(e,a,n){const l="video-".concat(e.replace(/\s+/g,"-")),o=document.getElementById(l),t=o?o.closest(".video-cell"):null;if(!t)return;t.hlsPlayer&&(t.hlsPlayer.destroy(),delete t.hlsPlayer),t.refreshTimer&&(clearInterval(t.refreshTimer),delete t.refreshTimer),o&&(o.pause(),o.removeAttribute("src"),o.load());const c=t.querySelector(".loading-indicator");c&&(c.style.display="none");const i=t.querySelector(".error-indicator");i&&i.remove();const r=t.querySelector(".play-overlay");if(r&&r.remove(),J(e,n),a[e]){const{hls:p,refreshTimer:u}=a[e];p&&p.destroy(),u&&clearInterval(u),delete a[e]}}function B(e,a,n){e.forEach(l=>{P(l.name,a,n)})}function Z(e){const a=document.querySelector('.snapshot-btn[data-id="'.concat(e,'"]'));if(!a){console.error("Stream element not found for ID:",e);return}const n=a.getAttribute("data-name");if(!n){console.error("Stream name not found for ID:",e);return}const l="video-".concat(n.replace(/\s+/g,"-")),o=document.getElementById(l);if(!o){console.error("Video element not found for stream:",n);return}const t=document.createElement("canvas");if(t.width=o.videoWidth,t.height=o.videoHeight,t.width===0||t.height===0){console.error("Invalid video dimensions:",t.width,t.height),v("Cannot take snapshot: Video not loaded or has invalid dimensions");return}t.getContext("2d").drawImage(o,0,0,t.width,t.height);try{window.__snapshotCanvas=t;const i=new Date().toISOString().replace(/[:.]/g,"-"),r="snapshot-".concat(n.replace(/\s+/g,"-"),"-").concat(i,".jpg");window.__snapshotFileName=r,z(t.toDataURL("image/jpeg",.95),"Snapshot: ".concat(n)),setTimeout(()=>D(),100),v("Snapshot taken successfully")}catch(i){console.error("Error creating snapshot:",i),v("Failed to create snapshot: "+i.message)}}function D(){const e=document.getElementById("snapshot-preview-overlay");if(!e){setTimeout(D,100);return}const a=e.querySelectorAll("button");let n=null;for(const o of a)if(o.textContent.includes("Download")){n=o;break}if(!n){setTimeout(D,100);return}const l=n.cloneNode(!0);n.parentNode.replaceChild(l,n),l.addEventListener("click",()=>{if(!window.__snapshotCanvas){console.error("No snapshot canvas available"),v("Download failed: No snapshot data available");return}ee(window.__snapshotCanvas,window.__snapshotFileName||"snapshot.jpg")}),console.log("Download button enhanced")}function ee(e,a){e.toBlob(function(n){if(!n){console.error("Failed to create blob from canvas"),v("Download failed: Unable to create image data");return}console.log("Created blob:",n.size,"bytes");const l=URL.createObjectURL(n);console.log("Created blob URL:",l);const o=document.createElement("a");o.href=l,o.download=a,o.style.position="absolute",o.style.top="0",o.style.left="0",o.style.opacity="0.01",document.body.appendChild(o),console.log("Added download link to document"),setTimeout(()=>{console.log("Clicking download link"),o.click(),setTimeout(()=>{document.body.contains(o)&&document.body.removeChild(o),URL.revokeObjectURL(l),console.log("Cleaned up download resources")},1e4)},100),v("Download started")},"image/jpeg",.95)}function oe(e,a,n,l,o,t){if(!e)return;const c=e.querySelector(".placeholder");if(e.innerHTML="",c&&a.length===0){e.appendChild(c);return}let i=a;n==="1"&&l&&(i=a.filter(r=>r.name===l)),i.forEach(r=>{const p=r.id||r.name,u=document.createElement("div");u.className="video-cell",u.innerHTML='\n      <video id="video-'.concat(r.name.replace(/\s+/g,"-"),'" autoplay muted></video>\n      <div class="stream-info">\n        <span>').concat(r.name,"</span>\n        <span>").concat(r.width,"x").concat(r.height," · ").concat(r.fps,'fps</span>\n        <div class="stream-controls">\n          <button class="snapshot-btn" data-id="').concat(p,'" data-name="').concat(r.name,'">\n            <span>📷</span> Snapshot\n          </button>\n          <button class="fullscreen-btn" data-id="').concat(p,'" data-name="').concat(r.name,'">\n            <span>⛶</span> Fullscreen\n          </button>\n        </div>\n      </div>\n      <div class="loading-indicator">\n        <div class="loading-spinner"></div>\n        <span>Connecting...</span>\n      </div>\n    '),e.appendChild(u),A(r,o,t);const g=u.querySelector(".snapshot-btn");g&&g.addEventListener("click",()=>{Z(p)});const s=u.querySelector(".fullscreen-btn");s&&s.addEventListener("click",()=>{Q(r.name)})})}async function te(e,a,n){try{const l=await fetch("/api/streams");if(!l.ok)throw new Error("Failed to load streams");const t=(await l.json()||[]).map(i=>fetch("/api/streams/".concat(encodeURIComponent(i.id||i.name))).then(r=>{if(!r.ok)throw new Error("Failed to load details for stream ".concat(i.name));return r.json()}).catch(r=>(console.error("Error loading details for stream ".concat(i.name,":"),r),i))),c=await Promise.all(t);return console.log("Loaded detailed streams for live view:",c),e(c||[]),c.length>0&&a(c[0].name),c}catch(l){return console.error("Error loading streams for live view:",l),v("Error loading streams: "+l.message),[]}}var H,F,O,U,q;function ne(){const[e,a]=$([]),[n,l]=$("4"),[o,t]=$(""),[c,i]=$(!1),[r,p]=$(!0),u=_(null),g=_({}),s=_({});return R(()=>{const d=L=>{if(L.key==="Escape"){console.log("Escape key pressed, current fullscreen state:",c);const h=document.getElementById("live-page");h&&h.classList.contains("fullscreen-mode")&&(console.log("Detected fullscreen mode via DOM, exiting fullscreen"),Y(null,i))}};document.addEventListener("keydown",d);const I=()=>{B(e,g.current,s.current)};return window.addEventListener("beforeunload",I),()=>{document.removeEventListener("keydown",d),window.removeEventListener("beforeunload",I),B(e,g.current,s.current)}},[]),R(()=>{u.current&&(p(!0),te(a,t,u.current).then(()=>{p(!1)}).catch(()=>{p(!1)}))},[u.current]),R(()=>{oe(u.current,e,n,o,g.current,s.current)},[n,o,e]),S(q||(q=E(['\n    <section id="live-page" class="page">\n      <div class="page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">\n        <div class="flex items-center space-x-2">\n          <h2 class="text-xl font-bold mr-4">Live View</h2>\n          <div class="flex space-x-2">\n            <button \n              id="webrtc-toggle-btn" \n              class="px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n              onClick=','\n            >\n              Live View (WebRTC)\n            </button>\n            <button \n              id="fullscreen-btn" \n              class="px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n              onClick=','\n            >\n              Fullscreen\n            </button>\n          </div>\n        </div>\n        <div class="controls flex items-center space-x-2">\n          <select \n            id="layout-selector" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600"\n            value=',"\n            onChange=",'\n          >\n            <option value="1">Single View</option>\n            <option value="4" selected>2x2 Grid</option>\n            <option value="9">3x3 Grid</option>\n            <option value="16">4x4 Grid</option>\n          </select>\n          \n          ','\n        </div>\n      </div>\n      \n      <div \n        id="video-grid" \n        class=',"\n        ref=","\n      >\n        ","\n        <!-- Video cells will be dynamically added by the updateVideoGrid function -->\n      </div>\n    </section>\n  "])),()=>window.location.href="/index.html",()=>X(c,i),n,d=>l(d.target.value),n==="1"&&S(F||(F=E(['\n            <select \n              id="stream-selector" \n              class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600"\n              value=',"\n              onChange=","\n            >\n              ","\n            </select>\n          "])),o,d=>t(d.target.value),e.map(d=>S(H||(H=E(["\n                <option key="," value=",">","</option>\n              "])),d.name,d.name,d.name))),"video-container layout-".concat(n),u,r?S(O||(O=E(['\n          <div class="flex justify-center items-center col-span-full row-span-full h-64 w-full">\n            <',' message="Loading streams..." size="lg" />\n          </div>\n        '])),G):e.length===0?S(U||(U=E(['\n          <div class="placeholder flex flex-col justify-center items-center col-span-full row-span-full bg-white dark:bg-gray-800 rounded-lg shadow-md text-center p-8">\n            <p class="mb-6 text-gray-600 dark:text-gray-300 text-lg">No streams configured</p>\n            <a href="streams.html" class="btn-primary px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors">Configure Streams</a>\n          </div>\n        ']))):null)}var V;function se(){const e=document.getElementById("main-content");e&&W(async()=>{const{render:a}=await import("./preact-app-FWUGqQo_.js").then(n=>n.p);return{render:a}},__vite__mapDeps([0,1]),import.meta.url).then(({render:a})=>{a(S(V||(V=E(["<"," />"])),ne),e)})}export{ne as LiveView,se as loadLiveView};
//# sourceMappingURL=LiveView-ByePH35Z.js.map
