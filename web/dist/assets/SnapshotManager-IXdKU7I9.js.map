{"version":3,"file":"SnapshotManager-IXdKU7I9.js","sources":["../../js/components/preact/SnapshotManager.jsx"],"sourcesContent":["/**\n * Snapshot functionality for LiveView\n * React component for managing snapshots\n */\nimport { h } from 'preact';\nimport { useState, useCallback, useEffect } from 'preact/hooks';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { showSnapshotPreview } from './UI.jsx';\n\n/**\n * Custom hook for snapshot functionality\n * @returns {Object} Snapshot functions and state\n */\nexport function useSnapshotManager() {\n  const [snapshotData, setSnapshotData] = useState({\n    canvas: null,\n    fileName: null\n  });\n\n  /**\n   * Take a snapshot of a stream\n   * @param {string} streamId - ID of the stream\n   * @param {Event} event - Optional click event\n   */\n  const takeSnapshot = useCallback((streamId, event) => {\n    console.log(`Taking snapshot of stream with ID: ${streamId}`);\n\n    // Find the stream by ID or name\n    const streamElement = document.querySelector(`.snapshot-btn[data-id=\"${streamId}\"]`);\n    let streamName;\n\n    if (streamElement) {\n      // Get the stream name from the data attribute\n      streamName = streamElement.getAttribute('data-name');\n    } else if (event) {\n      // If we can't find by data-id, try to find from the event target\n      const clickedButton = event.currentTarget || event.target;\n      const videoCell = clickedButton ? clickedButton.closest('.video-cell') : null;\n\n      if (videoCell) {\n        streamName = videoCell.dataset.streamName;\n      }\n    }\n\n    if (!streamName) {\n      console.error('Stream name not found for ID:', streamId);\n      showStatusMessage('Cannot take snapshot: Stream not identified', 'error');\n      return;\n    }\n\n    // Find the video element\n    const videoElementId = `video-${streamName.replace(/\\s+/g, '-')}`;\n    const videoElement = document.getElementById(videoElementId);\n    if (!videoElement) {\n      console.error('Video element not found for stream:', streamName);\n      return;\n    }\n\n    // Create a canvas element to capture the frame\n    const canvas = document.createElement('canvas');\n    canvas.width = videoElement.videoWidth;\n    canvas.height = videoElement.videoHeight;\n\n    // Check if we have valid dimensions\n    if (canvas.width === 0 || canvas.height === 0) {\n      console.error('Invalid video dimensions:', canvas.width, canvas.height);\n      showStatusMessage('Cannot take snapshot: Video not loaded or has invalid dimensions');\n      return;\n    }\n\n    // Draw the current frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n    try {\n      // Generate a filename\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot-${streamName.replace(/\\s+/g, '-')}-${timestamp}.jpg`;\n      \n      // Store the canvas and filename in state\n      setSnapshotData({\n        canvas,\n        fileName\n      });\n\n      // Show the standard preview\n      showSnapshotPreview(canvas.toDataURL('image/jpeg', 0.95), `Snapshot: ${streamName}`);\n\n      // Show success message\n      showStatusMessage('Snapshot taken successfully');\n    } catch (error) {\n      console.error('Error creating snapshot:', error);\n      showStatusMessage('Failed to create snapshot: ' + error.message);\n    }\n  }, []);\n\n  /**\n   * Download the snapshot as JPEG\n   */\n  const downloadSnapshot = useCallback(() => {\n    const { canvas, fileName } = snapshotData;\n    \n    if (!canvas) {\n      console.error('No snapshot canvas available');\n      showStatusMessage('Download failed: No snapshot data available');\n      return;\n    }\n\n    // Convert canvas to blob and download\n    canvas.toBlob(function(blob) {\n      if (!blob) {\n        console.error('Failed to create blob from canvas');\n        showStatusMessage('Download failed: Unable to create image data');\n        return;\n      }\n\n      console.log('Created blob:', blob.size, 'bytes');\n\n      // Create object URL from blob\n      const blobUrl = URL.createObjectURL(blob);\n      console.log('Created blob URL:', blobUrl);\n\n      // Create download link\n      const link = document.createElement('a');\n      link.href = blobUrl;\n      link.download = fileName || 'snapshot.jpg';\n\n      // Add the link to the document\n      document.body.appendChild(link);\n      console.log('Added download link to document');\n\n      // Trigger click\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        if (document.body.contains(link)) {\n          document.body.removeChild(link);\n        }\n        URL.revokeObjectURL(blobUrl);\n        console.log('Cleaned up download resources');\n      }, 1000);\n\n      showStatusMessage('Download started');\n    }, 'image/jpeg', 0.95); // High quality JPEG\n  }, [snapshotData]);\n\n  return {\n    takeSnapshot,\n    downloadSnapshot,\n    hasSnapshot: !!snapshotData.canvas\n  };\n}\n\n/**\n * SnapshotManager component\n * @returns {JSX.Element} SnapshotManager component\n */\nexport function SnapshotManager() {\n  const { takeSnapshot, downloadSnapshot } = useSnapshotManager();\n  \n  // Register the takeSnapshot function globally for backward compatibility\n  useEffect(() => {\n    window.takeSnapshot = takeSnapshot;\n    \n    return () => {\n      // Clean up global function when component unmounts\n      delete window.takeSnapshot;\n    };\n  }, [takeSnapshot]);\n\n  // This component doesn't render anything visible\n  return null;\n}\n\n/**\n * SnapshotButton component\n * @param {Object} props Component props\n * @param {string} props.streamId Stream ID\n * @param {string} props.streamName Stream name\n * @returns {JSX.Element} SnapshotButton component\n */\nexport function SnapshotButton({ streamId, streamName }) {\n  const { takeSnapshot } = useSnapshotManager();\n  \n  const handleClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    takeSnapshot(streamId, event);\n  };\n  \n  return (\n    <button \n      className=\"snapshot-btn\" \n      title=\"Take Snapshot\" \n      data-id={streamId} \n      data-name={streamName}\n      onClick={handleClick}\n    >\n      <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"24\" \n        height=\"24\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"white\" \n        stroke-width=\"2\" \n        stroke-linecap=\"round\" \n        stroke-linejoin=\"round\"\n      >\n        <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\n        <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\n      </svg>\n    </button>\n  );\n}\n\n/**\n * DownloadButton component\n * @param {Object} props Component props\n * @returns {JSX.Element} DownloadButton component\n */\nexport function DownloadButton() {\n  const { downloadSnapshot, hasSnapshot } = useSnapshotManager();\n  \n  if (!hasSnapshot) return null;\n  \n  return (\n    <button \n      className=\"download-btn px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n      onClick={downloadSnapshot}\n    >\n      Download\n    </button>\n  );\n}\n"],"names":["useSnapshotManager","snapshotData","setSnapshotData","useState","takeSnapshot","useCallback","streamId","event","streamElement","streamName","clickedButton","videoCell","showStatusMessage","videoElementId","videoElement","canvas","timestamp","fileName","showSnapshotPreview","error","downloadSnapshot","blob","blobUrl","link","SnapshotManager","useEffect","SnapshotButton","jsx","jsxs"],"mappings":"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"}