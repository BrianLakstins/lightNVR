{"version":3,"file":"SettingsView-legacy-BtxRyQDo.js","sources":["../../js/components/preact/SettingsView.js"],"sourcesContent":["/**\n * LightNVR Web Interface SettingsView Component\n * Preact component for the settings page\n */\n\nimport { h } from '../../preact.min.js';\nimport { html } from '../../html-helper.js';\nimport { useState, useEffect, useRef } from '../../preact.hooks.module.js';\nimport { showStatusMessage } from './UI.js';\nimport { ContentLoader } from './LoadingIndicator.js';\nimport { fetchJSON, enhancedFetch, createRequestController } from '../../fetch-utils.js';\n\n/**\n * SettingsView component\n * @returns {JSX.Element} SettingsView component\n */\nexport function SettingsView() {\n  const [settings, setSettings] = useState({\n    logLevel: '2',\n    storagePath: '/var/lib/lightnvr/recordings',\n    storagePathHls: '', // New field for HLS storage path\n    maxStorage: '0',\n    retention: '30',\n    autoDelete: true,\n    dbPath: '/var/lib/lightnvr/lightnvr.db',\n    webPort: '8080',\n    authEnabled: true,\n    username: 'admin',\n    password: 'admin',\n    bufferSize: '1024',\n    useSwap: true,\n    swapSize: '128',\n    detectionModelsPath: '',\n    defaultDetectionThreshold: 50,\n    defaultPreBuffer: 5,\n    defaultPostBuffer: 10\n  });\n  \n  // State for loading and data status\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasData, setHasData] = useState(false);\n\n  // Request controller for cancelling requests on unmount\n  const requestControllerRef = useRef(null);\n\n  // Load settings on mount\n  useEffect(() => {\n    // Create a new request controller\n    requestControllerRef.current = createRequestController();\n    \n    loadSettings();\n    \n    // Clean up and cancel pending requests on unmount\n    return () => {\n      if (requestControllerRef.current) {\n        requestControllerRef.current.abort();\n      }\n    };\n  }, []);\n  \n  // Load settings from API\n  const loadSettings = async () => {\n    try {\n      setIsLoading(true);\n      \n      const data = await fetchJSON('/api/settings', {\n        signal: requestControllerRef.current?.signal,\n        timeout: 15000, // 15 second timeout\n        retries: 2,     // Retry twice\n        retryDelay: 1000 // 1 second between retries\n      });\n      console.log('Settings loaded:', data);\n      \n      // Map backend property names to frontend property names\n      const mappedData = {\n        logLevel: data.log_level?.toString() || '',\n        storagePath: data.storage_path || '',\n        storagePathHls: data.storage_path_hls || '', // Map the HLS storage path\n        maxStorage: data.max_storage_size?.toString() || '',\n        retention: data.retention_days?.toString() || '',\n        autoDelete: data.auto_delete_oldest || false,\n        dbPath: data.db_path || '',\n        webPort: data.web_port?.toString() || '',\n        authEnabled: data.web_auth_enabled || false,\n        username: data.web_username || '',\n        password: data.web_password || '',\n        bufferSize: data.buffer_size?.toString() || '',\n        useSwap: data.use_swap || false,\n        swapSize: data.swap_size?.toString() || '',\n        detectionModelsPath: data.models_path || '',\n        defaultDetectionThreshold: data.default_detection_threshold || 50,\n        defaultPreBuffer: data.pre_detection_buffer?.toString() || '5',\n        defaultPostBuffer: data.post_detection_buffer?.toString() || '10'\n      };\n      \n      // Update state with loaded settings\n      setSettings(prev => ({\n        ...prev,\n        ...mappedData\n      }));\n      \n      setHasData(true);\n    } catch (error) {\n      console.error('Error loading settings:', error);\n      showStatusMessage('Error loading settings: ' + error.message);\n      setHasData(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Save settings\n  const saveSettings = async () => {\n    try {\n      // Map frontend property names to backend property names\n      const mappedSettings = {\n        log_level: parseInt(settings.logLevel, 10),\n        storage_path: settings.storagePath,\n        storage_path_hls: settings.storagePathHls, // Include the HLS storage path\n        max_storage_size: parseInt(settings.maxStorage, 10),\n        retention_days: parseInt(settings.retention, 10),\n        auto_delete_oldest: settings.autoDelete,\n        db_path: settings.dbPath,\n        web_port: parseInt(settings.webPort, 10),\n        web_auth_enabled: settings.authEnabled,\n        web_username: settings.username,\n        web_password: settings.password,\n        buffer_size: parseInt(settings.bufferSize, 10),\n        use_swap: settings.useSwap,\n        swap_size: parseInt(settings.swapSize, 10),\n        models_path: settings.detectionModelsPath,\n        default_detection_threshold: settings.defaultDetectionThreshold,\n        pre_detection_buffer: parseInt(settings.defaultPreBuffer, 10),\n        post_detection_buffer: parseInt(settings.defaultPostBuffer, 10)\n      };\n      \n      await enhancedFetch('/api/settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(mappedSettings),\n        signal: requestControllerRef.current?.signal,\n        timeout: 20000, // 20 second timeout for saving settings\n        retries: 1,     // Retry once\n        retryDelay: 2000 // 2 seconds between retries\n      });\n      \n      showStatusMessage('Settings saved successfully');\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      showStatusMessage('Error saving settings: ' + error.message);\n    }\n  };\n  \n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    setSettings(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  // Handle threshold slider change\n  const handleThresholdChange = (e) => {\n    const value = parseInt(e.target.value, 10);\n    setSettings(prev => ({\n      ...prev,\n      defaultDetectionThreshold: value\n    }));\n  };\n  \n  return html`\n    <section id=\"settings-page\" class=\"page\">\n      <div class=\"page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\">\n        <h2 class=\"text-xl font-bold\">Settings</h2>\n        <div class=\"controls\">\n          <button \n            id=\"save-settings-btn\" \n            class=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n            onClick=${saveSettings}\n          >\n            Save Settings\n          </button>\n        </div>\n      </div>\n      \n      <${ContentLoader}\n        isLoading=${isLoading}\n        hasData=${hasData}\n        loadingMessage=\"Loading settings...\"\n        emptyMessage=\"No settings available. Please try again later.\"\n      >\n        <div class=\"settings-container space-y-6\">\n          <div class=\"settings-group bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n            <h3 class=\"text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700\">General Settings</h3>\n            <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n              <label for=\"setting-log-level\" class=\"font-medium\">Log Level</label>\n              <select \n                id=\"setting-log-level\" \n                name=\"logLevel\"\n                class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                value=${settings.logLevel}\n                onChange=${handleInputChange}\n              >\n                <option value=\"0\">Error</option>\n                <option value=\"1\">Warning</option>\n                <option value=\"2\">Info</option>\n                <option value=\"3\">Debug</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"settings-group bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <h3 class=\"text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700\">Storage Settings</h3>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-storage-path\" class=\"font-medium\">Storage Path</label>\n            <input \n              type=\"text\" \n              id=\"setting-storage-path\" \n              name=\"storagePath\"\n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.storagePath}\n              onChange=${handleInputChange}\n            />\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-storage-path-hls\" class=\"font-medium\">HLS Storage Path</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"text\" \n                id=\"setting-storage-path-hls\" \n                name=\"storagePathHls\"\n                class=\"w-full p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                value=${settings.storagePathHls}\n                onChange=${handleInputChange}\n              />\n              <span class=\"hint text-sm text-gray-500 dark:text-gray-400\">Optional path for HLS segments. If not specified, Storage Path will be used.</span>\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-max-storage\" class=\"font-medium\">Maximum Storage Size (GB)</label>\n            <div class=\"col-span-2 flex items-center\">\n              <input \n                type=\"number\" \n                id=\"setting-max-storage\" \n                name=\"maxStorage\"\n                min=\"0\" \n                class=\"p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                value=${settings.maxStorage}\n                onChange=${handleInputChange}\n              />\n              <span class=\"hint ml-2 text-sm text-gray-500 dark:text-gray-400\">0 = unlimited</span>\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-retention\" class=\"font-medium\">Retention Period (days)</label>\n            <input \n              type=\"number\" \n              id=\"setting-retention\" \n              name=\"retention\"\n              min=\"1\" \n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.retention}\n              onChange=${handleInputChange}\n            />\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-auto-delete\" class=\"font-medium\">Auto Delete Oldest</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"checkbox\" \n                id=\"setting-auto-delete\" \n                name=\"autoDelete\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600\"\n                checked=${settings.autoDelete}\n                onChange=${handleInputChange}\n              />\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-db-path\" class=\"font-medium\">Database Path</label>\n            <input \n              type=\"text\" \n              id=\"setting-db-path\" \n              name=\"dbPath\"\n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.dbPath}\n              onChange=${handleInputChange}\n            />\n          </div>\n          </div>\n          \n          <div class=\"settings-group bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <h3 class=\"text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700\">Web Interface Settings</h3>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-web-port\" class=\"font-medium\">Web Port</label>\n            <input \n              type=\"number\" \n              id=\"setting-web-port\" \n              name=\"webPort\"\n              min=\"1\" \n              max=\"65535\" \n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.webPort}\n              onChange=${handleInputChange}\n            />\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-auth-enabled\" class=\"font-medium\">Enable Authentication</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"checkbox\" \n                id=\"setting-auth-enabled\" \n                name=\"authEnabled\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600\"\n                checked=${settings.authEnabled}\n                onChange=${handleInputChange}\n              />\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-username\" class=\"font-medium\">Username</label>\n            <input \n              type=\"text\" \n              id=\"setting-username\" \n              name=\"username\"\n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.username}\n              onChange=${handleInputChange}\n            />\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-password\" class=\"font-medium\">Password</label>\n            <input \n              type=\"password\" \n              id=\"setting-password\" \n              name=\"password\"\n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.password}\n              onChange=${handleInputChange}\n            />\n          </div>\n          </div>\n          \n          <div class=\"settings-group bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <h3 class=\"text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700\">Memory Optimization</h3>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-buffer-size\" class=\"font-medium\">Buffer Size (KB)</label>\n            <input \n              type=\"number\" \n              id=\"setting-buffer-size\" \n              name=\"bufferSize\"\n              min=\"128\" \n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.bufferSize}\n              onChange=${handleInputChange}\n            />\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-use-swap\" class=\"font-medium\">Use Swap File</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"checkbox\" \n                id=\"setting-use-swap\" \n                name=\"useSwap\"\n                class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600\"\n                checked=${settings.useSwap}\n                onChange=${handleInputChange}\n              />\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-swap-size\" class=\"font-medium\">Swap Size (MB)</label>\n            <input \n              type=\"number\" \n              id=\"setting-swap-size\" \n              name=\"swapSize\"\n              min=\"32\" \n              class=\"col-span-2 p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value=${settings.swapSize}\n              onChange=${handleInputChange}\n            />\n          </div>\n          </div>\n          \n          <div class=\"settings-group bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <h3 class=\"text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700\">Detection-Based Recording</h3>\n          <div class=\"setting mb-4\">\n            <p class=\"setting-description mb-2 text-gray-700 dark:text-gray-300\">\n              Configure detection-based recording for streams. When enabled, recordings will only be saved when objects are detected.\n            </p>\n            <p class=\"setting-description mb-2 text-gray-700 dark:text-gray-300\">\n              <strong>Motion Detection:</strong> Built-in motion detection is available without requiring any external models. \n              Select \"motion\" as the detection model in stream settings to use this feature.\n            </p>\n            <p class=\"setting-description mb-2 text-gray-700 dark:text-gray-300\">\n              <strong>Optimized Motion Detection:</strong> Memory and CPU optimized motion detection for embedded devices.\n              Select \"motion\" as the detection model in stream settings to use this feature.\n            </p>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-detection-models-path\" class=\"font-medium\">Detection Models Path</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"text\" \n                id=\"setting-detection-models-path\" \n                name=\"detectionModelsPath\"\n                placeholder=\"/var/lib/lightnvr/models\" \n                class=\"w-full p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                value=${settings.detectionModelsPath}\n                onChange=${handleInputChange}\n              />\n              <span class=\"hint text-sm text-gray-500 dark:text-gray-400\">Directory where detection models are stored</span>\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-default-detection-threshold\" class=\"font-medium\">Default Detection Threshold</label>\n            <div class=\"col-span-2\">\n              <div class=\"flex items-center\">\n                <input \n                  type=\"range\" \n                  id=\"setting-default-detection-threshold\" \n                  name=\"defaultDetectionThreshold\"\n                  min=\"0\" \n                  max=\"100\" \n                  step=\"1\" \n                  class=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                  value=${settings.defaultDetectionThreshold}\n                  onChange=${handleThresholdChange}\n                />\n                <span id=\"threshold-value\" class=\"ml-2 min-w-[3rem] text-center\">${settings.defaultDetectionThreshold}%</span>\n              </div>\n              <span class=\"hint text-sm text-gray-500 dark:text-gray-400\">Confidence threshold for detection (0-100%)</span>\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-default-pre-buffer\" class=\"font-medium\">Default Pre-detection Buffer (seconds)</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"number\" \n                id=\"setting-default-pre-buffer\" \n                name=\"defaultPreBuffer\"\n                min=\"0\" \n                max=\"60\" \n                class=\"p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                value=${settings.defaultPreBuffer}\n                onChange=${handleInputChange}\n              />\n              <span class=\"hint text-sm text-gray-500 dark:text-gray-400\">Seconds of video to keep before detection</span>\n            </div>\n          </div>\n          <div class=\"setting grid grid-cols-1 md:grid-cols-3 gap-4 items-center mb-4\">\n            <label for=\"setting-default-post-buffer\" class=\"font-medium\">Default Post-detection Buffer (seconds)</label>\n            <div class=\"col-span-2\">\n              <input \n                type=\"number\" \n                id=\"setting-default-post-buffer\" \n                name=\"defaultPostBuffer\"\n                min=\"0\" \n                max=\"300\" \n                class=\"p-2 border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                value=${settings.defaultPostBuffer}\n                onChange=${handleInputChange}\n              />\n              <span class=\"hint text-sm text-gray-500 dark:text-gray-400\">Seconds of video to keep after detection</span>\n            </div>\n          </div>\n          </div>\n        </div>\n      <//>\n    </section>\n  `;\n}\n\n/**\n * Load SettingsView component\n */\nexport function loadSettingsView() {\n  const mainContent = document.getElementById('main-content');\n  if (!mainContent) return;\n  \n  // Render the SettingsView component to the container\n  import('../../preact.min.js').then(({ render }) => {\n    render(html`<${SettingsView} />`, mainContent);\n  });\n}\n"],"names":["SettingsView","settings","setSettings","useState","logLevel","storagePath","storagePathHls","maxStorage","retention","autoDelete","dbPath","webPort","authEnabled","username","password","bufferSize","useSwap","swapSize","detectionModelsPath","defaultDetectionThreshold","defaultPreBuffer","defaultPostBuffer","isLoading","setIsLoading","hasData","setHasData","requestControllerRef","useRef","useEffect","current","createRequestController","loadSettings","abort","async","data","fetchJSON","signal","timeout","retries","retryDelay","console","log","mappedData","log_level","toString","storage_path","storage_path_hls","max_storage_size","retention_days","auto_delete_oldest","db_path","web_port","web_auth_enabled","web_username","web_password","buffer_size","use_swap","swap_size","models_path","default_detection_threshold","pre_detection_buffer","post_detection_buffer","prev","error","showStatusMessage","message","handleInputChange","e","name","value","type","checked","target","html","mappedSettings","parseInt","enhancedFetch","method","headers","body","JSON","stringify","ContentLoader","mainContent","document","getElementById","__vitePreload","render","module","import","then","n","p","meta","url"],"mappings":"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"}