{"version":3,"file":"users-legacy-Dz1GcbSk.js","sources":["../../js/components/preact/users/UserRoles.js","../../js/components/preact/users/UsersTable.jsx","../../js/components/preact/users/AddUserModal.jsx","../../js/components/preact/users/EditUserModal.jsx","../../js/components/preact/users/DeleteUserModal.jsx","../../js/components/preact/users/ApiKeyModal.jsx","../../js/components/preact/UsersView.jsx","../../js/pages/users-page.jsx"],"sourcesContent":["/**\n * User role definitions\n */\nexport const USER_ROLES = {\n  0: 'Admin',\n  1: 'User',\n  2: 'Viewer',\n  3: 'API'\n};\n","/**\n * Users Table Component\n */\n\nimport { h } from 'preact';\nimport { USER_ROLES } from './UserRoles.js';\n\n/**\n * Users Table Component\n * @param {Object} props - Component props\n * @param {Array} props.users - List of users to display\n * @param {Function} props.onEdit - Function to handle edit action\n * @param {Function} props.onDelete - Function to handle delete action\n * @param {Function} props.onApiKey - Function to handle API key action\n * @returns {JSX.Element} Users table\n */\nexport function UsersTable({ users, onEdit, onDelete, onApiKey }) {\n  // Create direct handlers for each button\n  const handleEdit = (user, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onEdit(user);\n  };\n\n  const handleDelete = (user, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onDelete(user);\n  };\n\n  const handleApiKey = (user, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onApiKey(user);\n  };\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"w-full border-collapse\">\n        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n          <tr>\n            <th className=\"py-3 px-6 text-left font-semibold\">ID</th>\n            <th className=\"py-3 px-6 text-left font-semibold\">Username</th>\n            <th className=\"py-3 px-6 text-left font-semibold\">Email</th>\n            <th className=\"py-3 px-6 text-left font-semibold\">Role</th>\n            <th className=\"py-3 px-6 text-left font-semibold\">Status</th>\n            <th className=\"py-3 px-6 text-left font-semibold\">Last Login</th>\n            <th className=\"py-3 px-6 text-left font-semibold\">Actions</th>\n          </tr>\n        </thead>\n        <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n          {users.map(user => (\n            <tr key={user.id} className=\"hover:bg-gray-100 dark:hover:bg-gray-600\">\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">{user.id}</td>\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">{user.username}</td>\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">{user.email || '-'}</td>\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">{USER_ROLES[user.role] || 'Unknown'}</td>\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">\n                <span className={`inline-block px-2 py-1 text-xs font-semibold rounded-full ${user.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                  {user.is_active ? 'Active' : 'Inactive'}\n                </span>\n              </td>\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">{user.last_login ? new Date(user.last_login * 1000).toLocaleString() : 'Never'}</td>\n              <td className=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex space-x-2\">\n                  <button\n                    className=\"p-1 text-blue-600 hover:text-blue-800 rounded hover:bg-blue-100 transition-colors\"\n                    onClick={(e) => handleEdit(user, e)}\n                    title=\"Edit User\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                  </button>\n                  <button\n                    className=\"p-1 text-red-600 hover:text-red-800 rounded hover:bg-red-100 transition-colors\"\n                    onClick={(e) => handleDelete(user, e)}\n                    title=\"Delete User\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                  <button\n                    className=\"p-1 text-gray-600 hover:text-gray-800 rounded hover:bg-gray-100 transition-colors\"\n                    onClick={(e) => handleApiKey(user, e)}\n                    title=\"Manage API Key\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n                    </svg>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/**\n * Add User Modal Component\n */\n\nimport { h } from 'preact';\nimport { USER_ROLES } from './UserRoles.js';\n\n/**\n * Add User Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.formData - Form data for adding a user\n * @param {Function} props.handleInputChange - Function to handle input changes\n * @param {Function} props.handleAddUser - Function to handle user addition\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} Add user modal\n */\nexport function AddUserModal({ formData, handleInputChange, handleAddUser, onClose }) {\n  // Direct submit handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation(); // Stop event from bubbling up\n    handleAddUser(e);\n  };\n\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick={onClose}>\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick={stopPropagation}>\n        <h2 className=\"text-xl font-bold mb-4\">Add New User</h2>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"role\">\n              Role\n            </label>\n            <select\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"role\"\n              name=\"role\"\n              value={formData.role}\n              onChange={handleInputChange}\n            >\n              {Object.entries(USER_ROLES).map(([value, label]) => (\n                <option key={value} value={value}>{label}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"mb-6\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                name=\"is_active\"\n                checked={formData.is_active}\n                onChange={handleInputChange}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm font-bold\">Active</span>\n            </label>\n          </div>\n\n          <div className=\"flex justify-end mt-6\">\n            <button\n              type=\"button\"\n              className=\"px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500 mr-2\"\n              onClick={onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Add User\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/**\n * Edit User Modal Component\n */\n\nimport { h } from 'preact';\nimport { USER_ROLES } from './UserRoles.js';\n\n/**\n * Edit User Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.currentUser - Current user being edited\n * @param {Object} props.formData - Form data for editing a user\n * @param {Function} props.handleInputChange - Function to handle input changes\n * @param {Function} props.handleEditUser - Function to handle user editing\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} Edit user modal\n */\nexport function EditUserModal({ currentUser, formData, handleInputChange, handleEditUser, onClose }) {\n  // Direct submit handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation(); // Stop event from bubbling up\n    handleEditUser(e);\n  };\n\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick={onClose}>\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick={stopPropagation}>\n        <h2 className=\"text-xl font-bold mb-4\">Edit User: {currentUser.username}</h2>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"password\">\n              Password (leave blank to keep current)\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-bold mb-2\" htmlFor=\"role\">\n              Role\n            </label>\n            <select\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"role\"\n              name=\"role\"\n              value={formData.role}\n              onChange={handleInputChange}\n            >\n              {Object.entries(USER_ROLES).map(([value, label]) => (\n                <option key={value} value={value}>{label}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"mb-6\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                name=\"is_active\"\n                checked={formData.is_active}\n                onChange={handleInputChange}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm font-bold\">Active</span>\n            </label>\n          </div>\n\n          <div className=\"flex justify-end mt-6\">\n            <button\n              type=\"button\"\n              className=\"px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500 mr-2\"\n              onClick={onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Update User\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/**\n * Delete User Modal Component\n */\n\nimport { h } from 'preact';\n\n/**\n * Delete User Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.currentUser - Current user being deleted\n * @param {Function} props.handleDeleteUser - Function to handle user deletion\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} Delete user modal\n */\nexport function DeleteUserModal({ currentUser, handleDeleteUser, onClose }) {\n  // Direct delete handler\n  const handleDeleteClick = (e) => {\n    e.stopPropagation(); // Stop event from bubbling up\n    handleDeleteUser();\n  };\n\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick={onClose}>\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick={stopPropagation}>\n        <h2 className=\"text-xl font-bold mb-4\">Delete User</h2>\n\n        <p className=\"mb-6\">\n          Are you sure you want to delete the user \"{currentUser.username}\"? This action cannot be undone.\n        </p>\n\n        <div className=\"flex justify-end\">\n          <button\n            className=\"px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500 mr-2\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n            onClick={handleDeleteClick}\n          >\n            Delete User\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * API Key Modal Component\n */\n\nimport { h } from 'preact';\n\n/**\n * API Key Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.currentUser - Current user for API key generation\n * @param {string} props.newApiKey - Newly generated API key\n * @param {Function} props.handleGenerateApiKey - Function to handle API key generation\n * @param {Function} props.copyApiKey - Function to copy API key to clipboard\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} API key modal\n */\nexport function ApiKeyModal({ currentUser, newApiKey, handleGenerateApiKey, copyApiKey, onClose }) {\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  // Log the API key for debugging\n  console.log('API Key Modal - newApiKey:', newApiKey);\n\n  // Create a custom close handler that prevents closing if an API key is displayed\n  const handleClose = (e) => {\n    // If we have an API key, prevent closing when clicking outside\n    if (newApiKey && newApiKey !== 'Generating...') {\n      // Only allow closing via the close button\n      return;\n    }\n    // Otherwise, proceed with normal close\n    onClose(e);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick={handleClose}>\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick={stopPropagation}>\n        <h2 className=\"text-xl font-bold mb-4\">API Key for {currentUser.username}</h2>\n\n        <div className=\"mb-6\">\n          {newApiKey ? (\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-bold mb-2\">\n                API Key\n              </label>\n              <div className=\"flex\">\n                <input\n                  className=\"shadow appearance-none border rounded-l w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  type=\"text\"\n                  value={newApiKey}\n                  readOnly\n                />\n                <button\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r\"\n                  onClick={copyApiKey}\n                >\n                  Copy\n                </button>\n              </div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n                This key will only be shown once. Save it securely.\n              </p>\n            </div>\n          ) : (\n            <>\n              <p className=\"mb-4\">\n                Generate a new API key for this user. This will invalidate any existing API key.\n              </p>\n              <button\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\"\n                onClick={handleGenerateApiKey}\n              >\n                Generate New API Key\n              </button>\n            </>\n          )}\n        </div>\n\n        <div className=\"flex justify-end\">\n          <button\n            className={newApiKey && newApiKey !== 'Generating...' ? 'px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700' : 'px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500'}\n            onClick={onClose}\n          >\n            {newApiKey && newApiKey !== 'Generating...' ? 'Done' : 'Close'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * LightNVR Web Interface Users View Component\n * Preact component for the user management page\n */\n\nimport { useState, useCallback } from 'preact/hooks';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { useQuery, useMutation, fetchJSON } from '../../query-client.js';\n\n// Import user components\nimport { USER_ROLES } from './users/UserRoles.js';\nimport { UsersTable } from './users/UsersTable.jsx';\nimport { AddUserModal } from './users/AddUserModal.jsx';\nimport { EditUserModal } from './users/EditUserModal.jsx';\nimport { DeleteUserModal } from './users/DeleteUserModal.jsx';\nimport { ApiKeyModal } from './users/ApiKeyModal.jsx';\n\n/**\n * UsersView component\n * @returns {JSX.Element} UsersView component\n */\nexport function UsersView() {\n  // State for modal visibility\n  const [activeModal, setActiveModal] = useState(null); // 'add', 'edit', 'delete', 'apiKey', or null\n\n  // State for selected user and API key\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [apiKey, setApiKey] = useState('');\n\n  // Form state for adding/editing users\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    email: '',\n    role: 1,\n    is_active: true\n  });\n\n  /**\n   * Get auth headers for requests\n   * @returns {Object} Headers object with Authorization if available\n   */\n  const getAuthHeaders = useCallback(() => {\n    const auth = localStorage.getItem('auth');\n    return auth ? { 'Authorization': 'Basic ' + auth } : {};\n  }, []);\n\n  // Fetch users using useQuery\n  const {\n    data: usersData,\n    isLoading: loading,\n    error,\n    refetch: refetchUsers\n  } = useQuery(\n    ['users'],\n    '/api/auth/users',\n    {\n      headers: getAuthHeaders(),\n      cache: 'no-store',\n      timeout: 15000, // 15 second timeout\n      retries: 2,     // Retry twice\n      retryDelay: 1000 // 1 second between retries\n    }\n  );\n\n  // Extract users array from response\n  const users = usersData?.users || [];\n\n  // Handler for the add user button\n  const handleAddUserClick = useCallback(() => {\n    // Reset form data for new user\n    setFormData({\n      username: '',\n      password: '',\n      email: '',\n      role: 1,\n      is_active: true\n    });\n    setActiveModal('add');\n  }, []);\n\n  /**\n   * Handle form input changes\n   * @param {Event} e - Input change event\n   */\n  const handleInputChange = useCallback((e) => {\n    const { name, value, type, checked } = e.target;\n\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : (name === 'role' ? parseInt(value, 10) : value)\n    }));\n  }, []);\n\n  // Add user mutation\n  const addUserMutation = useMutation({\n    mutationFn: async (userData) => {\n      return await fetchJSON('/api/auth/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...getAuthHeaders()\n        },\n        body: JSON.stringify(userData),\n        timeout: 15000, // 15 second timeout\n        retries: 1,     // Retry once\n        retryDelay: 1000 // 1 second between retries\n      });\n    },\n    onSuccess: () => {\n      // Close modal and show success message\n      setActiveModal(null);\n      showStatusMessage('User added successfully', 'success', 5000);\n\n      // Refresh users list\n      refetchUsers();\n    },\n    onError: (error) => {\n      console.error('Error adding user:', error);\n      showStatusMessage(`Error adding user: ${error.message}`, 'error', 8000);\n    }\n  });\n\n  // Edit user mutation\n  const editUserMutation = useMutation({\n    mutationFn: async ({ userId, userData }) => {\n      return await fetchJSON(`/api/auth/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...getAuthHeaders()\n        },\n        body: JSON.stringify(userData),\n        timeout: 15000, // 15 second timeout\n        retries: 1,     // Retry once\n        retryDelay: 1000 // 1 second between retries\n      });\n    },\n    onSuccess: () => {\n      // Close modal and show success message\n      setActiveModal(null);\n      showStatusMessage('User updated successfully', 'success', 5000);\n\n      // Refresh users list\n      refetchUsers();\n    },\n    onError: (error) => {\n      console.error('Error updating user:', error);\n      showStatusMessage(`Error updating user: ${error.message}`, 'error', 8000);\n    }\n  });\n\n  // Delete user mutation\n  const deleteUserMutation = useMutation({\n    mutationFn: async (userId) => {\n      return await fetchJSON(`/api/auth/users/${userId}`, {\n        method: 'DELETE',\n        headers: getAuthHeaders(),\n        timeout: 15000, // 15 second timeout\n        retries: 1,     // Retry once\n        retryDelay: 1000 // 1 second between retries\n      });\n    },\n    onSuccess: () => {\n      // Close modal and show success message\n      setActiveModal(null);\n      showStatusMessage('User deleted successfully', 'success', 5000);\n\n      // Refresh users list\n      refetchUsers();\n    },\n    onError: (error) => {\n      console.error('Error deleting user:', error);\n      showStatusMessage(`Error deleting user: ${error.message}`, 'error', 8000);\n    }\n  });\n\n  // Generate API key mutation\n  const generateApiKeyMutation = useMutation({\n    mutationFn: async (userId) => {\n      return await fetchJSON(`/api/auth/users/${userId}/api-key`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        timeout: 20000, // 20 second timeout for key generation\n        retries: 1,     // Retry once\n        retryDelay: 2000 // 2 seconds between retries\n      });\n    },\n    onMutate: () => {\n      // Show loading state\n      setApiKey('Generating...');\n    },\n    onSuccess: (data) => {\n      // Set the API key and ensure the modal stays open\n      setApiKey(data.api_key);\n      showStatusMessage('API key generated successfully', 'success');\n\n      // Refresh users list without affecting the modal\n      // We'll use a separate function to avoid closing the modal\n      setTimeout(() => {\n        refetchUsers();\n      }, 100);\n    },\n    onError: (error) => {\n      console.error('Error generating API key:', error);\n      setApiKey('');\n      showStatusMessage(`Error generating API key: ${error.message}`, 'error');\n    }\n  });\n\n  /**\n   * Handle form submission for adding a user\n   * @param {Event} e - Form submit event\n   */\n  const handleAddUser = useCallback((e) => {\n    if (e) e.preventDefault();\n\n    console.log('Adding user:', formData.username);\n    addUserMutation.mutate(formData);\n  }, [formData]);\n\n  /**\n   * Handle form submission for editing a user\n   * @param {Event} e - Form submit event\n   */\n  const handleEditUser = useCallback((e) => {\n    if (e) e.preventDefault();\n\n    console.log('Editing user:', selectedUser.id, selectedUser.username);\n    editUserMutation.mutate({\n      userId: selectedUser.id,\n      userData: formData\n    });\n  }, [selectedUser, formData]);\n\n  /**\n   * Handle user deletion\n   */\n  const handleDeleteUser = useCallback(() => {\n    console.log('Deleting user:', selectedUser.id, selectedUser.username);\n    deleteUserMutation.mutate(selectedUser.id);\n  }, [selectedUser]);\n\n  /**\n   * Handle generating a new API key for a user\n   */\n  const handleGenerateApiKey = useCallback(() => {\n    console.log('Generating API key for user:', selectedUser.id, selectedUser.username);\n    generateApiKeyMutation.mutate(selectedUser.id);\n  }, [selectedUser]);\n\n  /**\n   * Copy API key to clipboard\n   */\n  const copyApiKey = useCallback(() => {\n    navigator.clipboard.writeText(apiKey)\n      .then(() => {\n        // Use global toast function if available\n        if (window.showSuccessToast) {\n          window.showSuccessToast('API key copied to clipboard');\n        } else {\n          // Fallback to standard showStatusMessage\n          showStatusMessage('API key copied to clipboard', 'success');\n        }\n      })\n      .catch((err) => {\n        console.error('Error copying API key:', err);\n\n        // Use global toast function if available\n        if (window.showErrorToast) {\n          window.showErrorToast('Failed to copy API key');\n        } else {\n          // Fallback to standard showStatusMessage\n          showStatusMessage('Failed to copy API key', 'error');\n        }\n      });\n  }, [apiKey]);\n\n  /**\n   * Open the edit modal for a user\n   * @param {Object} user - User to edit\n   */\n  const openEditModal = useCallback((user) => {\n    setSelectedUser(user);\n    setFormData({\n      username: user.username,\n      password: '', // Don't include the password in the form\n      email: user.email || '',\n      role: user.role,\n      is_active: user.is_active\n    });\n    setActiveModal('edit');\n  }, []);\n\n  /**\n   * Open the delete modal for a user\n   * @param {Object} user - User to delete\n   */\n  const openDeleteModal = useCallback((user) => {\n    setSelectedUser(user);\n    setActiveModal('delete');\n  }, []);\n\n  /**\n   * Open the API key modal for a user\n   * @param {Object} user - User to generate API key for\n   */\n  const openApiKeyModal = useCallback((user) => {\n    setSelectedUser(user);\n    setApiKey('');\n    setActiveModal('apiKey');\n  }, []);\n\n  /**\n   * Close any open modal\n   */\n  const closeModal = useCallback(() => {\n    setActiveModal(null);\n  }, []);\n\n  // Render loading state\n  if (loading && users.length === 0) {\n    return (\n      <div className=\"flex justify-center items-center p-8\">\n        <div className=\"w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  }\n\n  // Render empty state\n  if (users.length === 0 && !loading) {\n    return (\n      <div>\n        <div className=\"mb-4 flex justify-between items-center\">\n          <h2 className=\"text-xl font-semibold\">User Management</h2>\n          <button\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n            onClick={handleAddUserClick}\n          >\n            Add User\n          </button>\n        </div>\n\n        <div className=\"bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative mb-4\">\n          <h4 className=\"font-bold mb-2\">No Users Found</h4>\n          <p>Click the \"Add User\" button to create your first user.</p>\n        </div>\n        {activeModal === 'add' && (\n          <AddUserModal\n            formData={formData}\n            handleInputChange={handleInputChange}\n            handleAddUser={handleAddUser}\n            onClose={closeModal}\n          />\n        )}\n      </div>\n    );\n  }\n\n  // Render users table with modals\n  return (\n    <div>\n      <div className=\"mb-4 flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold\">User Management</h2>\n        <button\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n          onClick={handleAddUserClick}\n        >\n          Add User\n        </button>\n      </div>\n\n      <UsersTable\n        users={users}\n        onEdit={openEditModal}\n        onDelete={openDeleteModal}\n        onApiKey={openApiKeyModal}\n      />\n\n      {activeModal === 'add' && (\n        <AddUserModal\n          formData={formData}\n          handleInputChange={handleInputChange}\n          handleAddUser={handleAddUser}\n          onClose={closeModal}\n        />\n      )}\n\n      {activeModal === 'edit' && (\n        <EditUserModal\n          currentUser={selectedUser}\n          formData={formData}\n          handleInputChange={handleInputChange}\n          handleEditUser={handleEditUser}\n          onClose={closeModal}\n        />\n      )}\n\n      {activeModal === 'delete' && (\n        <DeleteUserModal\n          currentUser={selectedUser}\n          handleDeleteUser={handleDeleteUser}\n          onClose={closeModal}\n        />\n      )}\n\n      {activeModal === 'apiKey' && (\n        <ApiKeyModal\n          currentUser={selectedUser}\n          newApiKey={apiKey}\n          handleGenerateApiKey={handleGenerateApiKey}\n          copyApiKey={copyApiKey}\n          onClose={closeModal}\n        />\n      )}\n    </div>\n  );\n}\n","/**\n * LightNVR Web Interface Users Page\n * Entry point for the users page\n */\n\nimport { render } from 'preact';\nimport { UsersView } from '../components/preact/UsersView.jsx';\nimport { QueryClientProvider, queryClient } from '../query-client.js';\nimport {Header} from \"../components/preact/Header.jsx\";\nimport {Footer} from \"../components/preact/Footer.jsx\";\nimport { ToastContainer } from \"../components/preact/ToastContainer.jsx\";\n\n// Render the UsersView component when the DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Get the container element\n  const container = document.getElementById('main-content');\n\n  if (container) {\n    render(\n      <QueryClientProvider client={queryClient}>\n        <Header />\n        <ToastContainer />\n        <UsersView />\n        <Footer />\n      </QueryClientProvider>,\n      container\n    );\n  }\n});\n"],"names":["USER_ROLES","UsersTable","users","onEdit","onDelete","onApiKey","className","children","jsxs","jsx","map","user","id","username","email","role","is_active","last_login","Date","toLocaleString","onClick","e","handleEdit","preventDefault","stopPropagation","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","handleDelete","handleApiKey","AddUserModal","formData","handleInputChange","handleAddUser","onClose","onSubmit","htmlFor","type","name","value","onChange","required","password","Object","entries","label","checked","EditUserModal","currentUser","handleEditUser","DeleteUserModal","handleDeleteUser","ApiKeyModal","newApiKey","handleGenerateApiKey","copyApiKey","console","log","readOnly","Fragment","UsersView","activeModal","setActiveModal","useState","selectedUser","setSelectedUser","apiKey","setApiKey","setFormData","getAuthHeaders","useCallback","auth","localStorage","getItem","Authorization","data","usersData","isLoading","loading","error","refetch","refetchUsers","useQuery","headers","cache","timeout","retries","retryDelay","handleAddUserClick","target","prevData","parseInt","addUserMutation","useMutation","mutationFn","async","fetchJSON","method","body","JSON","stringify","userData","onSuccess","showStatusMessage","onError","message","editUserMutation","userId","deleteUserMutation","generateApiKeyMutation","onMutate","api_key","setTimeout","mutate","navigator","clipboard","writeText","then","window","showSuccessToast","catch","err","showErrorToast","openEditModal","openDeleteModal","openApiKeyModal","closeModal","length","document","addEventListener","container","getElementById","render","QueryClientProvider","client","queryClient","Header","ToastContainer","Footer"],"mappings":"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"}