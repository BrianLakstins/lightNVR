{"version":3,"mappings":"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","names":["USER_ROLES","UsersTable","users","onEdit","onDelete","onApiKey","handleEdit","user","e","handleDelete","handleApiKey","html","_b","__template","_a","AddUserModal","formData","handleInputChange","handleAddUser","onClose","handleSubmit","stopPropagation","_d","value","label","_c","EditUserModal","currentUser","handleEditUser","_f","_e","DeleteUserModal","handleDeleteUser","handleDeleteClick","_g","ApiKeyModal","newApiKey","handleGenerateApiKey","copyApiKey","handleClose","_j","_h","_i","UsersView","activeModal","setActiveModal","useState","selectedUser","setSelectedUser","apiKey","setApiKey","setFormData","getAuthHeaders","useCallback","auth","usersData","loading","error","refetchUsers","useQuery","useEffect","addUserBtn","handleAddUserClick","name","type","checked","prevData","addUserMutation","useMutation","userData","fetchJSON","showStatusMessage","editUserMutation","userId","deleteUserMutation","generateApiKeyMutation","data","err","openEditModal","openDeleteModal","openApiKeyModal","closeModal","_k","_m","_l","_r","_n","_o","_p","_q","loadUsersView","container","__vitePreload","render","n","QueryClientProvider","queryClient","_s"],"ignoreList":[],"sources":["../../js/components/preact/users/UserRoles.js","../../js/components/preact/users/UsersTable.js","../../js/components/preact/users/AddUserModal.js","../../js/components/preact/users/EditUserModal.js","../../js/components/preact/users/DeleteUserModal.js","../../js/components/preact/users/ApiKeyModal.js","../../js/components/preact/UsersView.js"],"sourcesContent":["/**\n * User role definitions\n */\nexport const USER_ROLES = {\n  0: 'Admin',\n  1: 'User',\n  2: 'Viewer',\n  3: 'API'\n};\n","/**\n * Users Table Component\n */\n\n\nimport { html } from '../../../html-helper.js';\nimport { USER_ROLES } from './UserRoles.js';\n\n/**\n * Users Table Component\n * @param {Object} props - Component props\n * @param {Array} props.users - List of users to display\n * @param {Function} props.onEdit - Function to handle edit action\n * @param {Function} props.onDelete - Function to handle delete action\n * @param {Function} props.onApiKey - Function to handle API key action\n * @returns {JSX.Element} Users table\n */\nexport function UsersTable({ users, onEdit, onDelete, onApiKey }) {\n  // Create direct handlers for each button\n  const handleEdit = (user, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onEdit(user);\n  };\n  \n  const handleDelete = (user, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onDelete(user);\n  };\n  \n  const handleApiKey = (user, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onApiKey(user);\n  };\n  \n  return html`\n    <div class=\"overflow-x-auto\">\n      <table class=\"w-full border-collapse\">\n        <thead class=\"bg-gray-50 dark:bg-gray-700\">\n          <tr>\n            <th class=\"py-3 px-6 text-left font-semibold\">ID</th>\n            <th class=\"py-3 px-6 text-left font-semibold\">Username</th>\n            <th class=\"py-3 px-6 text-left font-semibold\">Email</th>\n            <th class=\"py-3 px-6 text-left font-semibold\">Role</th>\n            <th class=\"py-3 px-6 text-left font-semibold\">Status</th>\n            <th class=\"py-3 px-6 text-left font-semibold\">Last Login</th>\n            <th class=\"py-3 px-6 text-left font-semibold\">Actions</th>\n          </tr>\n        </thead>\n        <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n          ${users.map(user => html`\n            <tr key=${user.id} class=\"hover:bg-gray-100 dark:hover:bg-gray-600\">\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">${user.id}</td>\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">${user.username}</td>\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">${user.email || '-'}</td>\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">${USER_ROLES[user.role] || 'Unknown'}</td>\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">\n                <span class=${`inline-block px-2 py-1 text-xs font-semibold rounded-full ${user.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                  ${user.is_active ? 'Active' : 'Inactive'}\n                </span>\n              </td>\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">${user.last_login ? new Date(user.last_login * 1000).toLocaleString() : 'Never'}</td>\n              <td class=\"py-3 px-6 border-b border-gray-200 dark:border-gray-700\">\n                <div class=\"flex space-x-2\">\n                  <button \n                    class=\"p-1 text-blue-600 hover:text-blue-800 rounded hover:bg-blue-100 transition-colors\"\n                    onClick=${(e) => handleEdit(user, e)}\n                    title=\"Edit User\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                  </button>\n                  <button \n                    class=\"p-1 text-red-600 hover:text-red-800 rounded hover:bg-red-100 transition-colors\"\n                    onClick=${(e) => handleDelete(user, e)}\n                    title=\"Delete User\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                  <button \n                    class=\"p-1 text-gray-600 hover:text-gray-800 rounded hover:bg-gray-100 transition-colors\"\n                    onClick=${(e) => handleApiKey(user, e)}\n                    title=\"Manage API Key\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n                    </svg>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          `)}\n        </tbody>\n      </table>\n    </div>\n  `;\n}\n","/**\n * Add User Modal Component\n */\n\n\nimport { html } from '../../../html-helper.js';\nimport { USER_ROLES } from './UserRoles.js';\n\n/**\n * Add User Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.formData - Form data for adding a user\n * @param {Function} props.handleInputChange - Function to handle input changes\n * @param {Function} props.handleAddUser - Function to handle user addition\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} Add user modal\n */\nexport function AddUserModal({ formData, handleInputChange, handleAddUser, onClose }) {\n  // Direct submit handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation(); // Stop event from bubbling up\n    handleAddUser(e);\n  };\n\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  return html`\n    <div class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick=${onClose}>\n      <div class=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick=${stopPropagation}>\n        <h2 class=\"text-xl font-bold mb-4\">Add New User</h2>\n        \n        <form onSubmit=${handleSubmit}>\n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"username\">\n              Username\n            </label>\n            <input\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              value=${formData.username}\n              onChange=${handleInputChange}\n              required\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"password\">\n              Password\n            </label>\n            <input\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value=${formData.password}\n              onChange=${handleInputChange}\n              required\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"email\">\n              Email\n            </label>\n            <input\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value=${formData.email}\n              onChange=${handleInputChange}\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"role\">\n              Role\n            </label>\n            <select\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"role\"\n              name=\"role\"\n              value=${formData.role}\n              onChange=${handleInputChange}\n            >\n              ${Object.entries(USER_ROLES).map(([value, label]) => html`\n                <option value=${value}>${label}</option>\n              `)}\n            </select>\n          </div>\n          \n          <div class=\"mb-6\">\n            <label class=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                name=\"is_active\"\n                checked=${formData.is_active}\n                onChange=${handleInputChange}\n                class=\"mr-2\"\n              />\n              <span class=\"text-sm font-bold\">Active</span>\n            </label>\n          </div>\n          \n          <div class=\"flex justify-end mt-6\">\n            <button\n              type=\"button\"\n              class=\"px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500 mr-2\"\n              onClick=${onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              class=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Add User\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  `;\n}\n","/**\n * Edit User Modal Component\n */\n\nimport { html } from '../../../html-helper.js';\nimport { USER_ROLES } from './UserRoles.js';\n\n/**\n * Edit User Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.currentUser - Current user being edited\n * @param {Object} props.formData - Form data for editing a user\n * @param {Function} props.handleInputChange - Function to handle input changes\n * @param {Function} props.handleEditUser - Function to handle user editing\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} Edit user modal\n */\nexport function EditUserModal({ currentUser, formData, handleInputChange, handleEditUser, onClose }) {\n  // Direct submit handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation(); // Stop event from bubbling up\n    handleEditUser(e);\n  };\n\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  return html`\n    <div class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick=${onClose}>\n      <div class=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick=${stopPropagation}>\n        <h2 class=\"text-xl font-bold mb-4\">Edit User: ${currentUser.username}</h2>\n        \n        <form onSubmit=${handleSubmit}>\n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"username\">\n              Username\n            </label>\n            <input\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              value=${formData.username}\n              onChange=${handleInputChange}\n              required\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"password\">\n              Password (leave blank to keep current)\n            </label>\n            <input\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value=${formData.password}\n              onChange=${handleInputChange}\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"email\">\n              Email\n            </label>\n            <input\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value=${formData.email}\n              onChange=${handleInputChange}\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <label class=\"block text-sm font-bold mb-2\" for=\"role\">\n              Role\n            </label>\n            <select\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"role\"\n              name=\"role\"\n              value=${formData.role}\n              onChange=${handleInputChange}\n            >\n              ${Object.entries(USER_ROLES).map(([value, label]) => html`\n                <option value=${value}>${label}</option>\n              `)}\n            </select>\n          </div>\n          \n          <div class=\"mb-6\">\n            <label class=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                name=\"is_active\"\n                checked=${formData.is_active}\n                onChange=${handleInputChange}\n                class=\"mr-2\"\n              />\n              <span class=\"text-sm font-bold\">Active</span>\n            </label>\n          </div>\n          \n          <div class=\"flex justify-end mt-6\">\n            <button\n              type=\"button\"\n              class=\"px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500 mr-2\"\n              onClick=${onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              class=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Update User\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  `;\n}\n","/**\n * Delete User Modal Component\n */\n\n\nimport { html } from '../../../html-helper.js';\n\n/**\n * Delete User Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.currentUser - Current user being deleted\n * @param {Function} props.handleDeleteUser - Function to handle user deletion\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} Delete user modal\n */\nexport function DeleteUserModal({ currentUser, handleDeleteUser, onClose }) {\n  // Direct delete handler\n  const handleDeleteClick = (e) => {\n    e.stopPropagation(); // Stop event from bubbling up\n    handleDeleteUser();\n  };\n\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  return html`\n    <div class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick=${onClose}>\n      <div class=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick=${stopPropagation}>\n        <h2 class=\"text-xl font-bold mb-4\">Delete User</h2>\n        \n        <p class=\"mb-6\">\n          Are you sure you want to delete the user \"${currentUser.username}\"? This action cannot be undone.\n        </p>\n        \n        <div class=\"flex justify-end\">\n          <button\n            class=\"px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500 mr-2\"\n            onClick=${onClose}\n          >\n            Cancel\n          </button>\n          <button\n            class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n            onClick=${handleDeleteClick}\n          >\n            Delete User\n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * API Key Modal Component\n */\n\n\nimport { html } from '../../../html-helper.js';\n\n/**\n * API Key Modal Component\n * @param {Object} props - Component props\n * @param {Object} props.currentUser - Current user for API key generation\n * @param {string} props.newApiKey - Newly generated API key\n * @param {Function} props.handleGenerateApiKey - Function to handle API key generation\n * @param {Function} props.copyApiKey - Function to copy API key to clipboard\n * @param {Function} props.onClose - Function to close the modal\n * @returns {JSX.Element} API key modal\n */\nexport function ApiKeyModal({ currentUser, newApiKey, handleGenerateApiKey, copyApiKey, onClose }) {\n  // Stop click propagation on modal content\n  const stopPropagation = (e) => {\n    e.stopPropagation();\n  };\n\n  // Log the API key for debugging\n  console.log('API Key Modal - newApiKey:', newApiKey);\n\n  // Create a custom close handler that prevents closing if an API key is displayed\n  const handleClose = (e) => {\n    // If we have an API key, prevent closing when clicking outside\n    if (newApiKey && newApiKey !== 'Generating...') {\n      // Only allow closing via the close button\n      return;\n    }\n    // Otherwise, proceed with normal close\n    onClose(e);\n  };\n\n  return html`\n    <div class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick=${handleClose}>\n      <div class=\"bg-white rounded-lg p-6 max-w-md w-full dark:bg-gray-800 dark:text-white\" onClick=${stopPropagation}>\n        <h2 class=\"text-xl font-bold mb-4\">API Key for ${currentUser.username}</h2>\n\n        <div class=\"mb-6\">\n          ${newApiKey ? html`\n            <div class=\"mb-4\">\n              <label class=\"block text-sm font-bold mb-2\">\n                API Key\n              </label>\n              <div class=\"flex\">\n                <input\n                  class=\"shadow appearance-none border rounded-l w-full py-2 px-3 text-gray-700 dark:text-white dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  type=\"text\"\n                  value=${newApiKey}\n                  readonly\n                />\n                <button\n                  class=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-r\"\n                  onClick=${copyApiKey}\n                >\n                  Copy\n                </button>\n              </div>\n              <p class=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n                This key will only be shown once. Save it securely.\n              </p>\n            </div>\n          ` : html`\n            <p class=\"mb-4\">\n              Generate a new API key for this user. This will invalidate any existing API key.\n            </p>\n            <button\n              class=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\"\n              onClick=${handleGenerateApiKey}\n            >\n              Generate New API Key\n            </button>\n          `}\n        </div>\n\n        <div class=\"flex justify-end\">\n          <button\n            class=\"${newApiKey && newApiKey !== 'Generating...' ? 'px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700' : 'px-4 py-2 bg-gray-300 text-gray-800 dark:bg-gray-600 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-500'}\"\n            onClick=${onClose}\n          >\n            ${newApiKey && newApiKey !== 'Generating...' ? 'Done' : 'Close'}\n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * LightNVR Web Interface Users View Component\n * Preact component for the user management page\n */\n\n\nimport { useState, useEffect, useRef, useCallback } from 'preact/hooks';\nimport { html } from '../../html-helper.js';\nimport { showStatusMessage } from './UI.js';\nimport { useQuery, useMutation, fetchJSON } from '../../query-client.js';\n\n// Import user components\nimport { USER_ROLES } from './users/UserRoles.js';\nimport { UsersTable } from './users/UsersTable.js';\nimport { AddUserModal } from './users/AddUserModal.js';\nimport { EditUserModal } from './users/EditUserModal.js';\nimport { DeleteUserModal } from './users/DeleteUserModal.js';\nimport { ApiKeyModal } from './users/ApiKeyModal.js';\n\n/**\n * UsersView component\n * @returns {JSX.Element} UsersView component\n */\nexport function UsersView() {\n  // State for modal visibility\n  const [activeModal, setActiveModal] = useState(null); // 'add', 'edit', 'delete', 'apiKey', or null\n\n  // State for selected user and API key\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [apiKey, setApiKey] = useState('');\n\n  // Form state for adding/editing users\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    email: '',\n    role: 1,\n    is_active: true\n  });\n\n  /**\n   * Get auth headers for requests\n   * @returns {Object} Headers object with Authorization if available\n   */\n  const getAuthHeaders = useCallback(() => {\n    const auth = localStorage.getItem('auth');\n    return auth ? { 'Authorization': 'Basic ' + auth } : {};\n  }, []);\n\n  // Fetch users using useQuery\n  const {\n    data: usersData,\n    isLoading: loading,\n    error,\n    refetch: refetchUsers\n  } = useQuery(\n    ['users'],\n    '/api/auth/users',\n    {\n      headers: getAuthHeaders(),\n      cache: 'no-store',\n      timeout: 15000, // 15 second timeout\n      retries: 2,     // Retry twice\n      retryDelay: 1000 // 1 second between retries\n    }\n  );\n\n  // Extract users array from response\n  const users = usersData?.users || [];\n\n  // Add event listener for the add user button\n  useEffect(() => {\n    const addUserBtn = document.getElementById('add-user-btn');\n    if (addUserBtn) {\n      const handleAddUserClick = () => {\n        // Reset form data for new user\n        setFormData({\n          username: '',\n          password: '',\n          email: '',\n          role: 1,\n          is_active: true\n        });\n        setActiveModal('add');\n      };\n\n      addUserBtn.addEventListener('click', handleAddUserClick);\n\n      return () => {\n        if (addUserBtn) {\n          addUserBtn.removeEventListener('click', handleAddUserClick);\n        }\n      };\n    }\n  }, []);\n\n  /**\n   * Handle form input changes\n   * @param {Event} e - Input change event\n   */\n  const handleInputChange = useCallback((e) => {\n    const { name, value, type, checked } = e.target;\n\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : (name === 'role' ? parseInt(value, 10) : value)\n    }));\n  }, []);\n\n  // Add user mutation\n  const addUserMutation = useMutation({\n    mutationFn: async (userData) => {\n      return await fetchJSON('/api/auth/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...getAuthHeaders()\n        },\n        body: JSON.stringify(userData),\n        timeout: 15000, // 15 second timeout\n        retries: 1,     // Retry once\n        retryDelay: 1000 // 1 second between retries\n      });\n    },\n    onSuccess: () => {\n      // Close modal and show success message\n      setActiveModal(null);\n      showStatusMessage('User added successfully', 'success', 5000);\n\n      // Refresh users list\n      refetchUsers();\n    },\n    onError: (error) => {\n      console.error('Error adding user:', error);\n      showStatusMessage(`Error adding user: ${error.message}`, 'error', 8000);\n    }\n  });\n\n  // Edit user mutation\n  const editUserMutation = useMutation({\n    mutationFn: async ({ userId, userData }) => {\n      return await fetchJSON(`/api/auth/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...getAuthHeaders()\n        },\n        body: JSON.stringify(userData),\n        timeout: 15000, // 15 second timeout\n        retries: 1,     // Retry once\n        retryDelay: 1000 // 1 second between retries\n      });\n    },\n    onSuccess: () => {\n      // Close modal and show success message\n      setActiveModal(null);\n      showStatusMessage('User updated successfully', 'success', 5000);\n\n      // Refresh users list\n      refetchUsers();\n    },\n    onError: (error) => {\n      console.error('Error updating user:', error);\n      showStatusMessage(`Error updating user: ${error.message}`, 'error', 8000);\n    }\n  });\n\n  // Delete user mutation\n  const deleteUserMutation = useMutation({\n    mutationFn: async (userId) => {\n      return await fetchJSON(`/api/auth/users/${userId}`, {\n        method: 'DELETE',\n        headers: getAuthHeaders(),\n        timeout: 15000, // 15 second timeout\n        retries: 1,     // Retry once\n        retryDelay: 1000 // 1 second between retries\n      });\n    },\n    onSuccess: () => {\n      // Close modal and show success message\n      setActiveModal(null);\n      showStatusMessage('User deleted successfully', 'success', 5000);\n\n      // Refresh users list\n      refetchUsers();\n    },\n    onError: (error) => {\n      console.error('Error deleting user:', error);\n      showStatusMessage(`Error deleting user: ${error.message}`, 'error', 8000);\n    }\n  });\n\n  // Generate API key mutation\n  const generateApiKeyMutation = useMutation({\n    mutationFn: async (userId) => {\n      return await fetchJSON(`/api/auth/users/${userId}/api-key`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        timeout: 20000, // 20 second timeout for key generation\n        retries: 1,     // Retry once\n        retryDelay: 2000 // 2 seconds between retries\n      });\n    },\n    onMutate: () => {\n      // Show loading state\n      setApiKey('Generating...');\n    },\n    onSuccess: (data) => {\n      // Set the API key and ensure the modal stays open\n      setApiKey(data.api_key);\n      showStatusMessage('API key generated successfully', 'success');\n\n      // Refresh users list without affecting the modal\n      // We'll use a separate function to avoid closing the modal\n      setTimeout(() => {\n        refetchUsers();\n      }, 100);\n    },\n    onError: (error) => {\n      console.error('Error generating API key:', error);\n      setApiKey('');\n      showStatusMessage(`Error generating API key: ${error.message}`, 'error');\n    }\n  });\n\n  /**\n   * Handle form submission for adding a user\n   * @param {Event} e - Form submit event\n   */\n  const handleAddUser = useCallback((e) => {\n    if (e) e.preventDefault();\n\n    console.log('Adding user:', formData.username);\n    addUserMutation.mutate(formData);\n  }, [formData]);\n\n  /**\n   * Handle form submission for editing a user\n   * @param {Event} e - Form submit event\n   */\n  const handleEditUser = useCallback((e) => {\n    if (e) e.preventDefault();\n\n    console.log('Editing user:', selectedUser.id, selectedUser.username);\n    editUserMutation.mutate({\n      userId: selectedUser.id,\n      userData: formData\n    });\n  }, [selectedUser, formData]);\n\n  /**\n   * Handle user deletion\n   */\n  const handleDeleteUser = useCallback(() => {\n    console.log('Deleting user:', selectedUser.id, selectedUser.username);\n    deleteUserMutation.mutate(selectedUser.id);\n  }, [selectedUser]);\n\n  /**\n   * Handle generating a new API key for a user\n   */\n  const handleGenerateApiKey = useCallback(() => {\n    console.log('Generating API key for user:', selectedUser.id, selectedUser.username);\n    generateApiKeyMutation.mutate(selectedUser.id);\n  }, [selectedUser]);\n\n  /**\n   * Copy API key to clipboard\n   */\n  const copyApiKey = useCallback(() => {\n    navigator.clipboard.writeText(apiKey)\n      .then(() => {\n        // Use global toast function if available\n        if (window.showSuccessToast) {\n          window.showSuccessToast('API key copied to clipboard');\n        } else {\n          // Fallback to standard showStatusMessage\n          showStatusMessage('API key copied to clipboard', 'success');\n        }\n      })\n      .catch((err) => {\n        console.error('Error copying API key:', err);\n\n        // Use global toast function if available\n        if (window.showErrorToast) {\n          window.showErrorToast('Failed to copy API key');\n        } else {\n          // Fallback to standard showStatusMessage\n          showStatusMessage('Failed to copy API key', 'error');\n        }\n      });\n  }, [apiKey]);\n\n  /**\n   * Open the edit modal for a user\n   * @param {Object} user - User to edit\n   */\n  const openEditModal = useCallback((user) => {\n    setSelectedUser(user);\n    setFormData({\n      username: user.username,\n      password: '', // Don't include the password in the form\n      email: user.email || '',\n      role: user.role,\n      is_active: user.is_active\n    });\n    setActiveModal('edit');\n  }, []);\n\n  /**\n   * Open the delete modal for a user\n   * @param {Object} user - User to delete\n   */\n  const openDeleteModal = useCallback((user) => {\n    setSelectedUser(user);\n    setActiveModal('delete');\n  }, []);\n\n  /**\n   * Open the API key modal for a user\n   * @param {Object} user - User to generate API key for\n   */\n  const openApiKeyModal = useCallback((user) => {\n    setSelectedUser(user);\n    setApiKey('');\n    setActiveModal('apiKey');\n  }, []);\n\n  /**\n   * Close any open modal\n   */\n  const closeModal = useCallback(() => {\n    setActiveModal(null);\n  }, []);\n\n  // Render loading state\n  if (loading && users.length === 0) {\n    return html`\n      <div class=\"flex justify-center items-center p-8\">\n        <div class=\"w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    `;\n  }\n\n  // Render empty state\n  if (users.length === 0 && !loading) {\n    return html`\n      <div class=\"bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative mb-4\">\n        <h4 class=\"font-bold mb-2\">No Users Found</h4>\n        <p>Click the \"Add User\" button to create your first user.</p>\n      </div>\n      ${activeModal === 'add' && html`<${AddUserModal}\n        formData=${formData}\n        handleInputChange=${handleInputChange}\n        handleAddUser=${handleAddUser}\n        onClose=${closeModal}\n      />`}\n    `;\n  }\n\n  // Render users table with modals\n  return html`\n    <div>\n      <${UsersTable}\n        users=${users}\n        onEdit=${openEditModal}\n        onDelete=${openDeleteModal}\n        onApiKey=${openApiKeyModal}\n      />\n\n      ${activeModal === 'add' && html`<${AddUserModal}\n        formData=${formData}\n        handleInputChange=${handleInputChange}\n        handleAddUser=${handleAddUser}\n        onClose=${closeModal}\n      />`}\n\n      ${activeModal === 'edit' && html`<${EditUserModal}\n        currentUser=${selectedUser}\n        formData=${formData}\n        handleInputChange=${handleInputChange}\n        handleEditUser=${handleEditUser}\n        onClose=${closeModal}\n      />`}\n\n      ${activeModal === 'delete' && html`<${DeleteUserModal}\n        currentUser=${selectedUser}\n        handleDeleteUser=${handleDeleteUser}\n        onClose=${closeModal}\n      />`}\n\n      ${activeModal === 'apiKey' && html`<${ApiKeyModal}\n        currentUser=${selectedUser}\n        newApiKey=${apiKey}\n        handleGenerateApiKey=${handleGenerateApiKey}\n        copyApiKey=${copyApiKey}\n        onClose=${closeModal}\n      />`}\n    </div>\n  `;\n}\n\n/**\n * Load the UsersView component\n */\nexport function loadUsersView() {\n  const container = document.getElementById('users-container');\n  if (!container) return;\n\n  import('preact').then(({ render }) => {\n    import('../../query-client.js').then(({ QueryClientProvider, queryClient }) => {\n      render(\n        html`<${QueryClientProvider} client=${queryClient}><${UsersView} /></${QueryClientProvider}>`,\n        container\n      );\n    });\n  });\n}"],"file":"assets/UsersView-Cdalj9vH.js"}