var J=Object.freeze,be=Object.defineProperty;var H=(r,y)=>J(be(r,"raw",{value:J(y||r.slice())}));import{d as P,y as z,h as D,s as j,A as V,u as W,E as Te,Q as xe,q as we}from"./preact-app-Bpgvxg6n.js";import{L as $e}from"./LoadingIndicator-Bv87-oTb.js";var Q,Y,G;function ke(){const[r,y]=P(!1),[x,h]=P(1);z(()=>{const l=e.subscribe(f=>{y(f.isPlaying),h(f.zoomLevel)});return()=>l()},[]);const g=()=>{console.log("TimelineControls: togglePlayback called"),console.log("TimelineControls: Current state before toggle:",{isPlaying:r,currentTime:e.currentTime,currentSegmentIndex:e.currentSegmentIndex,segmentsCount:e.timelineSegments?e.timelineSegments.length:0}),r?u():_()},u=()=>{e.setState({isPlaying:!1});const l=document.querySelector("#video-player video");l&&l.pause()},_=()=>{if(!e.timelineSegments||e.timelineSegments.length===0){j("No recordings to play","warning");return}console.log("TimelineControls: resumePlayback called"),console.log("TimelineControls: Current state:",{segments:e.timelineSegments.length,currentSegmentIndex:e.currentSegmentIndex,currentTime:e.currentTime,selectedDate:e.selectedDate});let l=null,f=-1,b=0;if(e.currentTime!==null){console.log("TimelineControls: Using current time to find segment:",e.currentTime);for(let v=0;v<e.timelineSegments.length;v++){const E=e.timelineSegments[v];if(e.currentTime>=E.start_timestamp&&e.currentTime<=E.end_timestamp){l=E,f=v,b=e.currentTime-E.start_timestamp,console.log("TimelineControls: Found segment ".concat(v," containing current time, relative time: ").concat(b,"s"));break}}if(!l){let v=0,E=1/0;for(let t=0;t<e.timelineSegments.length;t++){const i=e.timelineSegments[t],o=(i.start_timestamp+i.end_timestamp)/2,n=Math.abs(e.currentTime-o);n<E&&(E=n,v=t)}l=e.timelineSegments[v],f=v,e.currentTime<l.start_timestamp,b=0,console.log("TimelineControls: Using closest segment ".concat(v,", relative time: ").concat(b,"s"))}}else e.currentSegmentIndex>=0&&e.currentSegmentIndex<e.timelineSegments.length?(f=e.currentSegmentIndex,l=e.timelineSegments[f],b=0,console.log("TimelineControls: Using current segment index ".concat(f))):(f=0,l=e.timelineSegments[0],b=0,console.log("TimelineControls: Falling back to first segment"));console.log("TimelineControls: Playing segment ".concat(f," (ID: ").concat(l.id,") at time ").concat(b,"s")),e.currentSegmentIndex=f,e.currentTime=l.start_timestamp+b,e.isPlaying=!0,e.directVideoControl=!0,e.setState({}),setTimeout(()=>{console.log("TimelineControls: Resetting directVideoControl flag"),e.directVideoControl=!1,e.setState({})},3e3);const c=document.querySelector("#video-player video");if(c){c.pause();const v=()=>{console.log("TimelineControls: Video metadata loaded, setting time to ".concat(b,"s"));try{console.log("TimelineControls: Video metadata",{duration:c.duration,width:c.videoWidth,height:c.videoHeight,segment:l.id,segmentDuration:l.end_timestamp-l.start_timestamp});const E=Math.max(0,Math.min(b,c.duration||0));c.currentTime=E,setTimeout(()=>{e.isPlaying&&(console.log("TimelineControls: Starting video playback"),c.play().then(()=>{console.log("TimelineControls: Video playback started successfully");const t=(o=1)=>{o>5||setTimeout(()=>{c.paused&&e.isPlaying&&(console.log("TimelineControls: Video paused unexpectedly (attempt ".concat(o,"), trying to resume")),c.play().catch(n=>{console.error("Error resuming video (attempt ".concat(o,"):"),n)}),t(o+1))},500*o)};t();const i=l.end_timestamp-l.start_timestamp;if(console.log("TimelineControls: Segment duration: ".concat(i,"s, video duration: ").concat(c.duration,"s")),c.duration<i-1){console.log("TimelineControls: Video duration is shorter than segment duration, will monitor playback");const o=setInterval(()=>{if(!e.isPlaying||!c){clearInterval(o);return}c.currentTime>c.duration-.5&&b+c.currentTime<i&&(console.log("TimelineControls: Reached end of video but not end of segment, restarting video"),c.currentTime=0,c.play().catch(n=>{console.error("Error restarting video:",n)}))},500)}}).catch(t=>{console.error("Error playing video:",t),j("Error playing video: "+t.message,"error")}))},100)}catch(E){console.error("TimelineControls: Error in handleMetadataLoaded:",E)}finally{c.removeEventListener("loadedmetadata",v)}};c.addEventListener("loadedmetadata",v),console.log("TimelineControls: Loading video from segment ".concat(l.id)),c.src="/api/recordings/play/".concat(l.id,"?t=").concat(Date.now()),c.load()}else console.error("TimelineControls: No video element found"),j("Error: Video player not found","error")},I=()=>{if(x<8){const l=x*2;e.setState({zoomLevel:l}),j("Zoomed in: ".concat(24/l," hours view"),"info")}},d=()=>{if(x>1){const l=x/2;e.setState({zoomLevel:l}),j("Zoomed out: ".concat(24/l," hours view"),"info")}};return D(G||(G=H(['\n    <div class="timeline-controls flex justify-between items-center mb-2">\n      <div class="flex items-center">\n        <button\n          id="play-button"\n          class="w-10 h-10 rounded-full bg-green-600 hover:bg-green-700 text-white flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-offset-1 transition-colors shadow-sm mr-2"\n          onClick=',"\n          title=",'\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            ','\n          </svg>\n        </button>\n        <span class="text-xs text-gray-600 dark:text-gray-300">Play from current position</span>\n      </div>\n\n      <div class="flex items-center gap-1">\n        <span class="text-xs text-gray-600 dark:text-gray-300 mr-1">Zoom:</span>\n        <button\n          id="zoom-out-button"\n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom Out (Show more time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n        <button\n          id="zoom-in-button"\n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom In (Show less time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  '])),g,r?"Pause":"Play from current position",r?D(Q||(Q=H(['\n                <!-- Pause icon - two vertical bars -->\n                <rect x="6" y="6" width="4" height="12" rx="1" fill="white" />\n                <rect x="14" y="6" width="4" height="12" rx="1" fill="white" />\n              ']))):D(Y||(Y=H(['\n                <!-- Play icon - triangle -->\n                <path d="M8 5.14v14l11-7-11-7z" fill="white" />\n              ']))),d,x<=1,I,x>=8)}var K,ee,te,ne,oe,ie;function Ce(){const[r,y]=P(0),[x,h]=P(24),[g,u]=P(1);z(()=>{const I=e.subscribe(d=>{console.log("TimelineRuler: State update received",{zoomLevel:d.zoomLevel,segmentsCount:d.timelineSegments?d.timelineSegments.length:0,currentTime:d.currentTime});const l=24/d.zoomLevel;let f=12;if(d.currentTime!==null){const c=new Date(d.currentTime*1e3);f=c.getHours()+c.getMinutes()/60+c.getSeconds()/3600}else if(d.timelineSegments&&d.timelineSegments.length>0){let c=24,v=0;d.timelineSegments.forEach(E=>{const t=new Date(E.start_timestamp*1e3),i=new Date(E.end_timestamp*1e3),o=t.getHours()+t.getMinutes()/60+t.getSeconds()/3600,n=i.getHours()+i.getMinutes()/60+i.getSeconds()/3600;c=Math.min(c,o),v=Math.max(v,n)}),f=(c+v)/2,console.log("TimelineRuler: Calculated center from segments",{earliestHour:c,latestHour:v,centerHour:f})}let b=Math.max(0,f-l/2),C=Math.min(24,b+l);C===24&&l<24?(b=Math.max(0,24-l),C=24):b===0&&l<24&&(C=Math.min(24,l)),y(b),h(C),u(d.zoomLevel),console.log("TimelineRuler: Calculated time range",{newStartHour:b,newEndHour:C,hoursPerView:l,centerHour:f}),(e.timelineStartHour!==b||e.timelineEndHour!==C)&&(console.log("TimelineRuler: Updating global state with new time range"),e.setState({timelineStartHour:b,timelineEndHour:C}))});return()=>I()},[]);const _=()=>{const I=[];for(let d=Math.floor(r);d<=Math.ceil(x);d++)if(d>=0&&d<=24){const l=(d-r)/(x-r)*100;if(I.push(D(K||(K=H(['\n          <div\n            key="tick-','"\n            class="absolute top-0 w-px h-5 bg-gray-500 dark:bg-gray-400"\n            style="left: ','%;"\n          ></div>\n        '])),d,l)),I.push(D(ee||(ee=H(['\n          <div\n            key="label-','"\n            class="absolute top-0 text-xs text-gray-600 dark:text-gray-300 transform -translate-x-1/2"\n            style="left: ','%;"\n          >\n            ',":00\n          </div>\n        "])),d,l,d)),d<24&&g>=2){const f=(d+.5-r)/(x-r)*100;if(I.push(D(te||(te=H(['\n            <div\n              key="tick-','-30"\n              class="absolute top-2 w-px h-3 bg-gray-400 dark:bg-gray-500"\n              style="left: ','%;"\n            ></div>\n          '])),d,f)),g>=4){const b=(d+.25-r)/(x-r)*100,C=(d+.75-r)/(x-r)*100;I.push(D(ne||(ne=H(['\n              <div\n                key="tick-','-15"\n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500"\n                style="left: ','%;"\n              ></div>\n            '])),d,b)),I.push(D(oe||(oe=H(['\n              <div\n                key="tick-','-45"\n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500"\n                style="left: ','%;"\n              ></div>\n            '])),d,C))}}}return I};return D(ie||(ie=H(['\n    <div class="timeline-ruler relative w-full h-8 bg-gray-300 dark:bg-gray-800 border-b border-gray-400 dark:border-gray-600">\n      ','\n      <div class="absolute bottom-0 left-0 text-xs text-gray-500 px-1">\n        Zoom: ',"x ("," hours)\n      </div>\n    </div>\n  "])),_(),g,Math.round(24/g))}var re,se,le,ae;function Pe({segments:r}){const[y,x]=P(r||[]),[h,g]=P(0),[u,_]=P(24),[I,d]=P(-1);z(()=>{console.log("TimelineSegments: Received segments from props: ".concat(r?r.length:0)),r&&r.length>0&&x(r)},[r]);const l=V(null),f=V(!1),b=V(0),C=V([]);z(()=>{const t=e.subscribe(i=>{console.log("TimelineSegments: State update received, segments: ".concat(i.timelineSegments?i.timelineSegments.length:0)),i.timelineSegments&&(!C.current||i.timelineSegments.length!==C.current.length||JSON.stringify(i.timelineSegments)!==JSON.stringify(C.current)||i.forceReload)&&(console.log("TimelineSegments: Updating segments (".concat(i.timelineSegments.length,")")),x(i.timelineSegments),C.current=[...i.timelineSegments],b.current=Date.now());const o=i.timelineStartHour!==void 0?i.timelineStartHour:0,n=i.timelineEndHour!==void 0?i.timelineEndHour:24;console.log("TimelineSegments: Time range update - startHour: ".concat(o,", endHour: ").concat(n)),g(o),_(n),d(i.currentSegmentIndex||-1)});return e.timelineSegments&&e.timelineSegments.length>0&&(console.log("TimelineSegments: Initial load of segments (".concat(e.timelineSegments.length,")")),x(e.timelineSegments),C.current=[...e.timelineSegments],d(e.currentSegmentIndex||0),e.timelineStartHour!==void 0&&g(e.timelineStartHour),e.timelineEndHour!==void 0&&_(e.timelineEndHour),b.current=Date.now()),()=>t()},[]),z(()=>{const t=l.current;if(!t)return;const i=m=>{(m.target===t||m.target.classList.contains("timeline-clickable-area"))&&(f.current=!0,c(m),document.addEventListener("mousemove",o),document.addEventListener("mouseup",n))},o=m=>{f.current&&c(m)},n=()=>{f.current=!1,document.removeEventListener("mousemove",o),document.removeEventListener("mouseup",n)};return t.addEventListener("mousedown",i),()=>{t.removeEventListener("mousedown",i),document.removeEventListener("mousemove",o),document.removeEventListener("mouseup",n)}},[h,u,y]);const c=t=>{const i=l.current;if(!i)return;const o=i.getBoundingClientRect(),n=t.clientX-o.left,m=o.width,s=n/m,T=h+s*(u-h),a=new Date(e.selectedDate);a.setHours(Math.floor(T)),a.setMinutes(Math.floor(T%1*60)),a.setSeconds(Math.floor(T%1*60%1*60));const $=a.getTime()/1e3;e.setState({currentTime:$,prevCurrentTime:e.currentTime,isPlaying:!1});let M=!1;for(let L=0;L<y.length;L++){const p=y[L],S=p.local_start_timestamp||p.start_timestamp,k=p.local_end_timestamp||p.end_timestamp;if($>=S&&$<=k){if(console.log("TimelineSegments: Found segment ".concat(L," containing timestamp")),e.setState({currentSegmentIndex:L}),t.target.classList.contains("timeline-segment")){const w=$-S;v(L,w)}M=!0;break}}M||e.setState({currentSegmentIndex:-1})},v=(t,i=null)=>{if(console.log("TimelineSegments: playSegment(".concat(t,", ").concat(i,")")),t<0||t>=y.length){console.warn("TimelineSegments: Invalid segment index: ".concat(t));return}const o=y[t],n=o.local_start_timestamp||o.start_timestamp,m=i!==null?n+i:n;e.setState({isPlaying:!1,currentSegmentIndex:-1}),document.body.offsetHeight,setTimeout(()=>{e.setState({currentSegmentIndex:t,currentTime:m,isPlaying:!0,forceReload:!0}),setTimeout(()=>{const s=document.querySelector("#video-player video");s&&(s.pause(),s.removeAttribute("src"),s.load(),s.src="/api/recordings/play/".concat(o.id,"?t=").concat(Date.now()),s.onloadedmetadata=()=>{const T=i!==null?i:0;s.currentTime=T,s.play().catch(a=>console.error("Error playing video:",a))})},50)},50)},E=()=>{if(console.log("TimelineSegments: renderSegments called"),console.log("TimelineSegments: segments:",y),console.log("TimelineSegments: startHour:",h,"endHour:",u),!y||y.length===0)return console.log("TimelineSegments: No segments to render"),D(re||(re=H(['<div class="text-center text-red-500 font-bold">No segments to display</div>'])));console.log("TimelineSegments: Rendering segments:",y.length);const t=[],i=new Map;console.log("TimelineSegments: Starting to process segments");let o=0,n=0;y.forEach((a,$)=>{const M=a.start_timestamp,L=a.end_timestamp,p=new Date(M*1e3),S=new Date(L*1e3),k=p.getHours()+p.getMinutes()/60+p.getSeconds()/3600,w=S.getHours()+S.getMinutes()/60+S.getSeconds()/3600;if(w<h||k>u){n++,$<5&&console.log("TimelineSegments: Skipping segment ".concat($,", startHour=").concat(k,", endHour=").concat(w,", visible range=").concat(h,"-").concat(u));return}o++;const R=Math.floor(k),N=Math.min(Math.ceil(w),24);for(let U=R;U<N;U++)U>=h&&U<=u&&(i.has(U)||i.set(U,[]),i.get(U).push($))});const m=[];let s=null;[...y].sort((a,$)=>a.start_timestamp-$.start_timestamp).forEach((a,$)=>{if(!s)s={...a,originalIndices:[$]};else{const M=a.start_timestamp,L=s.end_timestamp;M-L<=1?(s.end_timestamp=a.end_timestamp,s.originalIndices.push($),a.has_detection&&(s.has_detection=!0)):(m.push(s),s={...a,originalIndices:[$]})}}),s&&m.push(s),m.forEach((a,$)=>{const M=a.start_timestamp,L=a.end_timestamp,p=new Date(M*1e3),S=new Date(L*1e3),k=p.getHours()+p.getMinutes()/60+p.getSeconds()/3600,w=S.getHours()+S.getMinutes()/60+S.getSeconds()/3600;if(w<h||k>u)return;const R=Math.max(k,h),N=Math.min(w,u),U=(R-h)/(u-h)*100,O=(N-R)/(u-h)*100,B=Math.round(L-M),F="".concat(B,"s"),q=p.toLocaleTimeString(),Z=S.toLocaleTimeString();t.push(D(se||(se=H(['\n        <div\n          key="segment-','"\n          class="timeline-segment absolute rounded-sm transition-all duration-200 ','"\n          style="left: ',"%; width: ","%; height: ",'%; top: 50%; transform: translateY(-50%);"\n          title="'," - "," (",')"\n        ></div>\n      '])),$,a.has_detection?"bg-red-500":"bg-blue-500",U,O,80,q,Z,F))});for(let a=Math.floor(h);a<Math.ceil(u);a++)if(!i.has(a)){const $=(a-h)/(u-h)*100,M=100/(u-h);t.push(D(le||(le=H(['\n          <div\n            key="clickable-','"\n            class="timeline-clickable-area absolute h-full cursor-pointer"\n            style="left: ',"%; width: ",'%;"\n            data-hour=',"\n          ></div>\n        "])),a,$,M,a))}return console.log("TimelineSegments: Rendering complete. Total: ".concat(y.length,", Visible: ").concat(o,", Skipped: ").concat(n,", Final rendered: ").concat(t.length)),t};return D(ae||(ae=H(['\n    <div\n      class="timeline-segments relative w-full h-16 pt-2"\n      ref=',"\n    >\n      ","\n    </div>\n  "])),l,E())}var ce;function He(){const[r,y]=P(0),[x,h]=P(!1),[g,u]=P(0),[_,I]=P(24),[d,l]=P(null),[f,b]=P(!1),C=V(null);V(null);const c=V(0),E=V(((o,n)=>{let m;return function(...s){m&&clearTimeout(m),m=setTimeout(()=>{o.apply(this,s)},n)}})((o,n,m)=>{t(o,n,m)},100)).current;z(()=>{const o=e.subscribe(n=>{console.log("TimelineCursor: State update received",{currentTime:n.currentTime,startHour:n.timelineStartHour,endHour:n.timelineEndHour,segmentsCount:n.timelineSegments?n.timelineSegments.length:0,isDragging:f,userControllingCursor:n.userControllingCursor}),u(n.timelineStartHour||0),I(n.timelineEndHour||24),!f&&!n.userControllingCursor&&(l(n.currentTime),i(n.currentTime),E(n.currentTime,n.timelineStartHour||0,n.timelineEndHour||24))});return()=>o()},[f,E]),z(()=>{const o=C.current;if(!o)return;const n=T=>{T.preventDefault(),T.stopPropagation(),console.log("TimelineCursor: Mouse down event"),c.current=T.clientX,b(!0),e.userControllingCursor=!0,e.setState({}),document.addEventListener("mousemove",m),document.addEventListener("mouseup",s)},m=T=>{if(!f)return;const a=o.parentElement;if(!a)return;const $=a.getBoundingClientRect(),M=Math.max(0,Math.min(T.clientX-$.left,$.width)),L=$.width,p=M/L*100;y(p);const S=_-g,k=g+p/100*S,w=new Date;e.selectedDate&&w.setTime(new Date(e.selectedDate).getTime()),w.setHours(Math.floor(k)),w.setMinutes(Math.floor(k%1*60)),w.setSeconds(Math.floor(k%1*60%1*60)),w.setMilliseconds(0);const R=w.getTime()/1e3;l(R),i(R)},s=T=>{if(!f)return;const a=o.parentElement;if(!a)return;const $=a.getBoundingClientRect(),M=Math.max(0,Math.min(T.clientX-$.left,$.width)),L=$.width,p=M/L*100;console.log("TimelineCursor: Mouse up at position",{positionPercent:p,clickX:M,containerWidth:L});const S=_-g,k=g+p/100*S;console.log("TimelineCursor: Calculated hour",{hour:k,startHour:g,endHour:_,hourRange:S});const w=new Date;e.selectedDate&&w.setTime(new Date(e.selectedDate).getTime()),w.setHours(Math.floor(k)),w.setMinutes(Math.floor(k%1*60)),w.setSeconds(Math.floor(k%1*60%1*60)),w.setMilliseconds(0);const R=w.getTime()/1e3;console.log("TimelineCursor: Converted to timestamp",{timestamp:R,dateTime:w.toLocaleString(),selectedDate:e.selectedDate}),console.log("TimelineCursor: Mouse up event"),b(!1),document.removeEventListener("mousemove",m),document.removeEventListener("mouseup",s),setTimeout(()=>{console.log("TimelineCursor: Releasing cursor control"),e.userControllingCursor=!1,e.setState({})},100),e.currentTime=R,e.prevCurrentTime=e.currentTime,e.isPlaying=!1,e.setState({});const N=e.timelineSegments||[];console.log("TimelineCursor: Searching for segment containing timestamp",{timestamp:R,segmentsCount:N.length});let U=!1,O=-1,B=1/0;for(let F=0;F<N.length;F++){const q=N[F],Z=q.local_start_timestamp||q.start_timestamp,X=q.local_end_timestamp||q.end_timestamp;if(F<3&&console.log("TimelineCursor: Segment ".concat(F),{startTimestamp:Z,endTimestamp:X,startTime:new Date(Z*1e3).toLocaleTimeString(),endTime:new Date(X*1e3).toLocaleTimeString()}),R>=Z&&R<=X){console.log("TimelineCursor: Found exact match at segment ".concat(F)),e.currentSegmentIndex=F,e.setState({}),U=!0;break}const ve=(Z+X)/2,A=Math.abs(R-ve);A<B&&(B=A,O=F)}U||(O>=0?(console.log("TimelineCursor: No exact match, using closest segment ".concat(O)),e.currentSegmentIndex=O,e.setState({})):(console.log("TimelineCursor: No segments found at all"),e.currentSegmentIndex=-1,e.setState({})))};return o.addEventListener("mousedown",n),()=>{o.removeEventListener("mousedown",n),document.removeEventListener("mousemove",m),document.removeEventListener("mouseup",s)}},[C.current,g,_,f]);const t=(o,n,m)=>{if(console.log("TimelineCursor: updateCursorPosition called",{time:o,startHr:n,endHr:m}),o===null){console.log("TimelineCursor: No current time, hiding cursor"),h(!1);return}const s=new Date(o*1e3),T=s.getHours()+s.getMinutes()/60+s.getSeconds()/3600;if(console.log("TimelineCursor: Calculated hour",{hour:T,timeString:s.toLocaleTimeString()}),T<n||T>m){console.log("TimelineCursor: Time outside visible range, hiding cursor"),h(!1);return}const a=(T-n)/(m-n)*100;console.log("TimelineCursor: Calculated position",{position:a,hour:T,startHr:n,endHr:m}),y(a),h(!0)},i=o=>{if(o===null)return;const n=document.getElementById("time-display");if(!n)return;const m=new Date(o*1e3),s=m.getHours().toString().padStart(2,"0"),T=m.getMinutes().toString().padStart(2,"0"),a=m.getSeconds().toString().padStart(2,"0");n.textContent="".concat(s,":").concat(T,":").concat(a)};return z(()=>{console.log("TimelineCursor: Initializing cursor position"),console.log("TimelineCursor: Initial state",{currentTime:e.currentTime,startHour:e.timelineStartHour,endHour:e.timelineEndHour,segments:e.timelineSegments?e.timelineSegments.length:0});const o=()=>{if(console.log("TimelineCursor: Checking timelineState directly",{currentTime:e.currentTime,segmentsLength:e.timelineSegments?e.timelineSegments.length:0,currentSegmentIndex:e.currentSegmentIndex}),e.currentTime)return console.log("TimelineCursor: Setting initial cursor position with current time"),h(!0),t(e.currentTime,e.timelineStartHour||0,e.timelineEndHour||24),!0;if(e.timelineSegments&&e.timelineSegments.length>0){console.log("TimelineCursor: Using first segment start time for cursor");const s=e.timelineSegments[0].start_timestamp;return console.log("TimelineCursor: Directly setting timelineState properties"),e.currentTime=s,e.currentSegmentIndex=0,e.setState({}),h(!0),t(s,e.timelineStartHour||0,e.timelineEndHour||24),!0}return!1};o()||(console.log("TimelineCursor: Initial initialization failed, will retry after delay"),[100,300,500,1e3].forEach((s,T)=>{setTimeout(()=>{x||(console.log("TimelineCursor: Retry initialization attempt ".concat(T+1)),o())},s)}))},[]),D(ce||(ce=H(["\n    <div\n      ref=",'\n      class="timeline-cursor absolute top-0 h-full z-50 transition-all duration-100 cursor-ew-resize"\n      style="left: ',"%; display: ",'; pointer-events: auto; width: 7px; margin-left: -3.5px;"\n    >\n      <!-- Invisible wider clickable area -->\n      <div class="absolute top-0 bottom-0 left-0 w-full"></div>\n\n      <!-- Skinnier needle with no middle chunk -->\n      <div class="absolute top-0 bottom-0 w-0.5 bg-orange-500 left-1/2 transform -translate-x-1/2 pointer-events-none"></div>\n\n      <!-- Top handle (black) -->\n      <div class="absolute top-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 -translate-y-1/2 shadow-md pointer-events-none"></div>\n\n      <!-- Bottom handle (black) -->\n      <div class="absolute bottom-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 translate-y-1/2 shadow-md pointer-events-none"></div>\n    </div>\n  '])),C,r,x?"block":"none")}var me,de;function Ie(){const[r,y]=P(1),x=[.25,.5,1,1.5,2,4];z(()=>{const g=e.subscribe(u=>{y(u.playbackSpeed)});return()=>g()},[]);const h=g=>{const u=document.querySelector("#video-player video");u&&(u.playbackRate=g),e.setState({playbackSpeed:g}),j("Playback speed: ".concat(g,"x"),"info")};return D(de||(de=H(['\n    <div class="mt-2 mb-4 p-2 border border-green-500 rounded-lg bg-white dark:bg-gray-800 shadow-sm">\n      <div class="flex flex-col items-center">\n        <div class="text-sm font-semibold mb-2 text-gray-700 dark:text-gray-300">Playback Speed</div>\n        \n        <div class="flex flex-wrap justify-center gap-1">\n          ','\n        </div>\n        \n        <div class="mt-1 text-xs font-medium text-green-600 dark:text-green-400">\n          Current: ',"× ","\n        </div>\n      </div>\n    </div>\n  "])),x.map(g=>D(me||(me=H(["\n            <button \n              key=","\n              class=","\n              data-speed=","\n              onClick=","\n            >\n              ","\n            </button>\n          "])),"speed-".concat(g),"speed-btn px-2 py-1 text-sm rounded-full ".concat(g===r?"bg-green-500 text-white":"bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"," \n                font-medium transition-all focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-opacity-50"),g,()=>h(g),g===1?"1× (Normal)":"".concat(g,"×"))),r,r===1?"(Normal)":"")}var ge;function De(){const[r,y]=P(-1),[x,h]=P(!1),[g,u]=P([]),[_,I]=P(1),d=V(null),l=V(null),f=V(null);z(()=>{const t=e.subscribe(i=>{y(i.currentSegmentIndex),h(i.isPlaying),u(i.timelineSegments||[]),I(i.playbackSpeed),b(i)});return()=>t()},[]);const b=t=>{const i=d.current;if(!i||!t.timelineSegments||t.timelineSegments.length===0||t.currentSegmentIndex<0||t.currentSegmentIndex>=t.timelineSegments.length)return;const o=t.timelineSegments[t.currentSegmentIndex];if(!o)return;const n=f.current!==o.id,m=n,s=t.currentTime!==null&&t.currentTime>=o.start_timestamp?t.currentTime-o.start_timestamp:0,T=t.prevCurrentTime!==null&&Math.abs(t.currentTime-t.prevCurrentTime)>1;n&&(console.log("Segment changed from ".concat(f.current," to ").concat(o.id)),f.current=o.id),m?(console.log("Loading new segment ".concat(o.id," (segmentChanged: ").concat(n,")")),C(o,s,t.isPlaying)):T?(console.log("Seeking to ".concat(s,"s within current segment")),i.currentTime=s):t.isPlaying&&i.paused?i.play().catch(a=>{console.error("Error playing video:",a)}):!t.isPlaying&&!i.paused&&i.pause(),i.playbackRate!==t.playbackSpeed&&(i.playbackRate=t.playbackSpeed)},C=(t,i=0,o=!1)=>{const n=d.current;if(!n)return;console.log("Loading segment ".concat(t.id," at time ").concat(i,"s, autoplay: ").concat(o)),n.pause();const m="/api/recordings/play/".concat(t.id,"?t=").concat(Date.now()),s=()=>{console.log("Video metadata loaded"),n.currentTime=i,n.playbackRate=_,o&&n.play().catch(T=>{console.error("Error playing video:",T),j("Error playing video: "+T.message,"error")}),n.removeEventListener("loadedmetadata",s)};n.addEventListener("loadedmetadata",s),n.src=m,n.load()},c=()=>{if(console.log("Video ended"),r<g.length-1){const t=r+1;console.log("Playing next segment ".concat(t)),e.setState({currentSegmentIndex:t,currentTime:g[t].start_timestamp,isPlaying:!0,forceReload:!0})}else console.log("End of all segments"),e.setState({isPlaying:!1})},v=()=>{const t=d.current;if(!t||r<0||!g||g.length===0||r>=g.length)return;const i=g[r];if(!i)return;const o=i.start_timestamp+t.currentTime;E(o),e.setState({currentTime:o,prevCurrentTime:l.current}),l.current=o},E=t=>{if(t===null)return;const i=document.getElementById("time-display");if(!i)return;const o=new Date(t*1e3),n=o.getHours().toString().padStart(2,"0"),m=o.getMinutes().toString().padStart(2,"0"),s=o.getSeconds().toString().padStart(2,"0");i.textContent="".concat(n,":").concat(m,":").concat(s)};return D(ge||(ge=H(['\n    <div class="timeline-player-container mb-2" id="video-player">\n      <div class="relative w-full bg-black rounded-lg shadow-md" style="aspect-ratio: 16/9;">\n        <video\n            ref=','\n            class="w-full h-full object-contain"\n            controls\n            autoplay=',"\n            muted=","\n            playsInline\n            onended=","\n            ontimeupdate=",'\n        ></video>\n        \n        <!-- Add a message for invalid segments -->\n        <div \n          class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-70 text-white text-center p-4 ','"\n        >\n          <div>\n            <p class="mb-2">No valid segment selected.</p>\n            <p class="text-sm">Click on a segment in the timeline or use the play button to start playback.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Playback speed controls -->\n    <'," />\n  "])),d,!1,!1,c,v,r>=0&&g.length>0?"hidden":"",Ie)}const e={streams:[],timelineSegments:[],selectedStream:null,selectedDate:null,isPlaying:!1,currentSegmentIndex:-1,zoomLevel:1,timelineStartHour:0,timelineEndHour:24,currentTime:null,prevCurrentTime:null,playbackSpeed:1,showOnlySegments:!0,forceReload:!1,userControllingCursor:!1,listeners:new Set,lastUpdateTime:0,pendingUpdates:{},setState(r){const y=Date.now();if(console.log("timelineState: setState called with",r),console.log("timelineState: current state before update",{currentTime:this.currentTime,currentSegmentIndex:this.currentSegmentIndex,segmentsLength:this.timelineSegments.length}),r.currentTime!==void 0&&!r.currentSegmentIndex&&!r.isPlaying&&y-this.lastUpdateTime<250){console.log("timelineState: Skipping frequent time update");return}Object.assign(this,r),r.forceReload&&(this.forceReload=!1),this.lastUpdateTime=y,console.log("timelineState: state after update",{currentTime:this.currentTime,currentSegmentIndex:this.currentSegmentIndex,segmentsLength:this.timelineSegments.length}),this.notifyListeners()},subscribe(r){return this.listeners.add(r),()=>this.listeners.delete(r)},notifyListeners(){this.listeners.forEach(r=>r(this))},flushPendingUpdates(){Object.keys(this.pendingUpdates).length>0&&(Object.assign(this,this.pendingUpdates),this.pendingUpdates={},this.lastUpdateTime=Date.now(),this.notifyListeners())}};function Ee(r){const y=r.getFullYear(),x=String(r.getMonth()+1).padStart(2,"0"),h=String(r.getDate()).padStart(2,"0");return"".concat(y,"-").concat(x,"-").concat(h)}function Le(){const r=new URLSearchParams(window.location.search);return{stream:r.get("stream")||"",date:r.get("date")||Ee(new Date)}}function Me(r,y){if(!r)return;const x=new URL(window.location.href);x.searchParams.set("stream",r),x.searchParams.set("date",y),window.history.replaceState({},"",x)}var ue,fe,pe,he,Se;function Re(){const r=Le(),[y,x]=P(!1),[h,g]=P([]),[u,_]=P(r.stream),[I,d]=P(r.date),[l,f]=P([]),b=V(null),C=V(!1),c=V(null);z(()=>(c.current=setInterval(()=>{e.flushPendingUpdates()},200),()=>{c.current&&clearInterval(c.current)}),[]);const{data:v,isLoading:E,error:t}=W("streams","/api/streams",{timeout:15e3,retries:2,retryDelay:1e3});z(()=>{if(v&&Array.isArray(v)&&v.length>0&&!C.current){if(console.log("TimelinePage: Streams loaded, initializing data"),C.current=!0,g(v),e.setState({streams:v}),v.some(S=>S.name===u)&&u)console.log("TimelinePage: Using stream from URL: ".concat(u));else if(v.length>0){const S=v[0].name;console.log("TimelinePage: Using first stream: ".concat(S)),_(S)}}},[v]),z(()=>{t&&(console.error("TimelinePage: Error loading streams:",t),j("Error loading streams: "+t.message,"error"))},[t]);const i=p=>{const S=new Date(p);S.setHours(0,0,0,0);const k=new Date(p);return k.setHours(23,59,59,999),{startTime:S.toISOString(),endTime:k.toISOString()}};z(()=>{u&&(Me(u,I),e.setState({selectedStream:u,selectedDate:I}))},[u,I]);const{startTime:o,endTime:n}=i(I),{data:m,isLoading:s,error:T,refetch:a}=W(["timeline-segments",u,I],u?"/api/timeline/segments?stream=".concat(encodeURIComponent(u),"&start=").concat(encodeURIComponent(o),"&end=").concat(encodeURIComponent(n)):null,{timeout:3e4,retries:2,retryDelay:1e3},{enabled:!!u,onSuccess:p=>{console.log("TimelinePage: Timeline data received:",p);const S=p.segments||[];if(console.log("TimelinePage: Received ".concat(S.length," segments")),S.length===0){console.log("TimelinePage: No segments found"),f([]),e.setState({timelineSegments:[],currentSegmentIndex:-1,currentTime:null,isPlaying:!1}),j("No recordings found for the selected date","warning");return}const k=JSON.parse(JSON.stringify(S));k.slice(0,3).forEach((N,U)=>{const O=new Date(N.start_timestamp*1e3),B=new Date(N.end_timestamp*1e3);console.log("TimelinePage: Segment ".concat(U," - Start: ").concat(O.toLocaleTimeString(),", End: ").concat(B.toLocaleTimeString()))}),console.log("TimelinePage: Setting segments"),f(k),document.body.offsetHeight;const w=k[0].start_timestamp;console.log("TimelinePage: Setting initial segment and time",{firstSegmentId:k[0].id,startTime:new Date(w*1e3).toLocaleTimeString()}),console.log("TimelinePage: Directly setting timelineState properties"),e.timelineSegments=k,e.currentSegmentIndex=0,e.currentTime=w,e.prevCurrentTime=w,e.isPlaying=!1,e.forceReload=!0,e.zoomLevel=1,e.selectedDate=I,e.setState({}),console.log("TimelinePage: Updated timelineState with segments"),setTimeout(()=>{console.log("TimelinePage: State after update (delayed check):",{segmentsLength:e.timelineSegments.length,currentSegmentIndex:e.currentSegmentIndex,currentTime:e.currentTime}),(!e.currentTime||e.currentSegmentIndex===-1)&&(console.log("TimelinePage: State not properly updated, forcing update"),e.setState({currentSegmentIndex:0,currentTime:w,prevCurrentTime:w}))},100);const R=document.querySelector("#video-player video");R&&(R.src="/api/recordings/play/".concat(k[0].id,"?t=").concat(Date.now()),R.load()),j("Loaded ".concat(k.length," recording segments"),"success")},onError:p=>{console.error("TimelinePage: Error loading timeline data:",p),j("Error loading timeline data: "+p.message,"error"),f([])}}),$=p=>{const S=p.target.value;console.log("TimelinePage: Stream changed to ".concat(S)),_(S)},M=p=>{const S=p.target.value;console.log("TimelinePage: Date changed to ".concat(S)),d(S)},L=()=>s?D(ue||(ue=H(["<",' message="Loading timeline data..." />'])),$e):l.length===0?D(fe||(fe=H(['\n        <div class="flex flex-col items-center justify-center py-12 text-center">\n          <svg class="w-16 h-16 text-gray-400 dark:text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>\n          </svg>\n          <p class="text-gray-600 dark:text-gray-400 text-lg">No recordings found for the selected date and stream</p>\n        </div>\n      ']))):D(pe||(pe=H(["\n      <!-- Video player -->\n      <"," />\n\n      <!-- Playback controls -->\n      <",' />\n\n        <!-- Timeline -->\n        <div\n            id="timeline-container"\n            class="relative w-full h-24 bg-gray-200 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg mb-6 overflow-hidden"\n            ref=',"\n        >\n          <"," />\n          <"," segments="," />\n          <",' />\n\n          <!-- Instructions for cursor -->\n          <div class="absolute bottom-1 right-2 text-xs text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 bg-opacity-75 dark:bg-opacity-75 px-2 py-1 rounded">\n            Drag the orange dial to navigate\n          </div>\n        </div>\n    '])),De,ke,b,Ce,Pe,l,He);return D(Se||(Se=H(['\n    <div class="timeline-page">\n      <div class="flex items-center mb-4">\n        <h1 class="text-2xl font-bold">Timeline Playback</h1>\n        <div class="ml-4 flex">\n          <a href="recordings.html" class="px-3 py-1 bg-gray-300 text-gray-700 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-400 dark:hover:bg-gray-600 rounded-l-md">Table View</a>\n          <a href="timeline.html" class="px-3 py-1 bg-blue-500 text-white rounded-r-md">Timeline View</a>\n        </div>\n      </div>\n\n      <!-- Stream selector and date picker -->\n      <div class="flex flex-wrap gap-4 mb-2">\n        <div class="stream-selector flex-grow">\n          <div class="flex justify-between items-center mb-2">\n            <label for="stream-selector">Stream</label>\n            <button\n              class="text-xs bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 px-2 py-1 rounded"\n              onClick=','\n            >\n              Reload Data\n            </button>\n          </div>\n          <select\n              id="stream-selector"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          >\n            <option value="" disabled>Select a stream ('," available)</option>\n            ",'\n          </select>\n        </div>\n\n        <div class="date-selector flex-grow">\n          <label for="timeline-date" class="block mb-2">Date</label>\n          <input\n              type="date"\n              id="timeline-date"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          />\n        </div>\n      </div>\n\n      <!-- Auto-load message -->\n      <div class="mb-4 text-sm text-gray-500 dark:text-gray-400 italic">\n        ','\n      </div>\n\n      <!-- Current time display -->\n      <div class="flex justify-between items-center mb-2">\n        <div id="time-display" class="timeline-time-display bg-gray-200 dark:bg-gray-700 px-3 py-1 rounded font-mono text-base">00:00:00</div>\n      </div>\n\n      <!-- Debug info -->\n      <div class="mb-2 text-xs text-gray-500">\n        Debug - isLoading: ',",\n        Streams: ",",\n        Segments: ","\n      </div>\n\n      <!-- Content -->\n      ",'\n\n      <!-- Instructions -->\n      <div class="mt-6 p-4 bg-gray-200 dark:bg-gray-800 rounded">\n        <h3 class="text-lg font-semibold mb-2">How to use the timeline:</h3>\n        <ul class="list-disc pl-5">\n          <li>Select a stream and date to load recordings</li>\n          <li>Click on the timeline to position the cursor at a specific time</li>\n          <li>Drag the orange cursor to navigate precisely</li>\n          <li>Click on a segment (blue bar) to play that recording</li>\n          <li>Use the play button to start playback from the current cursor position</li>\n          <li>Use the zoom buttons to adjust the timeline scale</li>\n        </ul>\n      </div>\n    </div>\n  '])),()=>a(),u||"",$,h.length,h.map(p=>D(he||(he=H(["\n              <option key="," value=",">","</option>\n            "])),p.name,p.name,p.name)),I,M,s?"Loading...":"Recordings auto-load when stream or date changes",s?"true":"false",h.length,l.length,L())}var ye;function Ve(){const r=document.getElementById("main-content");r&&(r.innerHTML="",Te(D(ye||(ye=H(["<"," client=",">\n      <"," />\n    <//>"])),xe,we,Re),r))}export{Ve as loadTimelineView};
//# sourceMappingURL=TimelineView-CgnHyyh3.js.map
