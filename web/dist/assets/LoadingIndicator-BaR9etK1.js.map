{"version":3,"file":"LoadingIndicator-BaR9etK1.js","sources":["../../js/components/preact/LoadingIndicator.js"],"sourcesContent":["/**\n * LightNVR Loading Indicator Component\n * Displays a loading spinner and optional message\n */\n\n\nimport { html } from '../../html-helper.js';\n\n/**\n * LoadingIndicator component\n * @param {Object} props - Component props\n * @param {string} props.message - Optional message to display\n * @param {string} props.size - Size of the spinner (sm, md, lg)\n * @param {boolean} props.fullPage - Whether to display as a full page overlay\n * @returns {JSX.Element} LoadingIndicator component\n */\nexport function LoadingIndicator({ message = 'Loading...', size = 'md', fullPage = false }) {\n  // Determine spinner size classes\n  const sizeClasses = {\n    sm: 'w-6 h-6',\n    md: 'w-10 h-10',\n    lg: 'w-16 h-16'\n  };\n  \n  const spinnerSize = sizeClasses[size] || sizeClasses.md;\n  \n  // If fullPage is true, display as a full page overlay\n  if (fullPage) {\n    return html`\n      <div class=\"fixed inset-0 bg-white bg-opacity-75 dark:bg-gray-900 dark:bg-opacity-75 flex items-center justify-center z-50\">\n        <div class=\"text-center\">\n          <div class=\"inline-block animate-spin rounded-full border-4 border-gray-300 dark:border-gray-600 border-t-blue-600 dark:border-t-blue-500 ${spinnerSize}\"></div>\n          ${message && html`<p class=\"mt-4 text-gray-700 dark:text-gray-300 text-lg\">${message}</p>`}\n        </div>\n      </div>\n    `;\n  }\n  \n  // Default display as an inline element\n  return html`\n    <div class=\"flex flex-col items-center justify-center py-8\">\n      <div class=\"inline-block animate-spin rounded-full border-4 border-gray-300 dark:border-gray-600 border-t-blue-600 dark:border-t-blue-500 ${spinnerSize}\"></div>\n      ${message && html`<p class=\"mt-4 text-gray-700 dark:text-gray-300\">${message}</p>`}\n    </div>\n  `;\n}\n\n/**\n * ContentLoader component - displays a loading indicator or content based on loading state\n * @param {Object} props - Component props\n * @param {boolean} props.isLoading - Whether content is loading\n * @param {boolean} props.hasData - Whether there is data to display\n * @param {JSX.Element} props.children - Content to display when not loading\n * @param {string} props.loadingMessage - Message to display while loading\n * @param {JSX.Element} props.emptyMessage - Message to display when there is no data\n * @returns {JSX.Element} ContentLoader component\n */\nexport function ContentLoader({ \n  isLoading, \n  hasData, \n  children, \n  loadingMessage = 'Loading data...', \n  emptyMessage = 'No data available' \n}) {\n  if (isLoading) {\n    return html`<${LoadingIndicator} message=${loadingMessage} />`;\n  }\n  \n  if (!hasData) {\n    return html`\n      <div class=\"flex flex-col items-center justify-center py-12 text-center\">\n        <svg class=\"w-16 h-16 text-gray-400 dark:text-gray-600 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-gray-600 dark:text-gray-400 text-lg\">${emptyMessage}</p>\n      </div>\n    `;\n  }\n  \n  return children;\n}\n"],"names":["LoadingIndicator","message","size","fullPage","sizeClasses","spinnerSize","html","_b","__template","_a","_d","_c","ContentLoader","isLoading","hasData","children","loadingMessage","emptyMessage","_e","_f"],"mappings":"wJAgBO,SAASA,EAAiB,CAAE,QAAAC,EAAU,aAAc,KAAAC,EAAO,KAAM,SAAAC,EAAW,IAAS,CAE1F,MAAMC,EAAc,CAClB,GAAI,UACJ,GAAI,YACJ,GAAI,WACL,EAEKC,EAAcD,EAAYF,CAAI,GAAKE,EAAY,GAGrD,OAAID,EACKG,EAAAC,MAAIC,EAAA,iUAGkJ,uBAC7D,0CADkDH,EAC1IJ,GAAWK,EAAAG,MAAID,EAAA,6DAAmE,UAAPP,IAO9EK,EAAAI,MAAIF,EAAA,wNAEgJ,mBACrE,sBAD0DH,EAC1IJ,GAAWK,EAAAK,MAAIH,EAAA,qDAA2D,UAAPP,GAG3E,SAYO,SAASW,EAAc,CAC5B,UAAAC,EACA,QAAAC,EACA,SAAAC,EACA,eAAAC,EAAiB,kBACjB,aAAAC,EAAe,mBACjB,EAAG,CACD,OAAIJ,EACKP,EAAAY,MAAIV,EAAA,KAAoB,YAA0B,SAA1CR,EAA4BgB,GAGxCF,EAWEC,EAVET,EAAAa,MAAIX,EAAA,mfAK2D,8BAAZS,EAM9D"}