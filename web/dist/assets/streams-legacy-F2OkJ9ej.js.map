{"version":3,"file":"streams-legacy-F2OkJ9ej.js","sources":["../../js/components/preact/StreamDeleteModal.js","../../js/components/preact/StreamsView.jsx","../../js/pages/streams-page.jsx"],"sourcesContent":["/**\n * LightNVR Web Interface Stream Delete Modal Component\n * Preact component for the stream delete modal\n */\n\nimport { html } from '../../html-helper.js';\nimport { useState } from 'preact/hooks';\n\n/**\n * StreamDeleteModal component\n * @param {Object} props Component props\n * @param {string} props.streamId ID of the stream to delete\n * @param {string} props.streamName Name of the stream to display\n * @param {Function} props.onClose Function to call when the modal is closed\n * @param {Function} props.onDisable Function to call when the disable button is clicked\n * @param {Function} props.onDelete Function to call when the delete button is clicked\n * @returns {JSX.Element} StreamDeleteModal component\n */\nexport function StreamDeleteModal({ streamId, streamName, onClose, onDisable, onDelete }) {\n  const [isConfirmDelete, setIsConfirmDelete] = useState(false);\n  \n  // Show delete confirmation step\n  const showDeleteConfirmation = () => {\n    setIsConfirmDelete(true);\n  };\n  \n  // Handle disable stream\n  const handleDisable = () => {\n    onDisable(streamId);\n    onClose();\n  };\n  \n  // Handle delete stream\n  const handleDelete = () => {\n    onDelete(streamId);\n    onClose();\n  };\n  \n  return html`\n    <div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300\">\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full\">\n        <div class=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 class=\"text-lg font-medium\">${isConfirmDelete ? 'Confirm Permanent Deletion' : 'Stream Actions'}</h3>\n          <span class=\"text-2xl cursor-pointer\" onClick=${onClose}>Ã—</span>\n        </div>\n        \n        <div class=\"p-6\">\n          ${!isConfirmDelete ? html`\n            <div class=\"mb-6\">\n              <h4 class=\"text-lg font-medium mb-2\">What would you like to do with \"${streamName}\"?</h4>\n              <p class=\"text-gray-600 dark:text-gray-400 mb-4\">\n                Please choose one of the following options:\n              </p>\n              \n              <div class=\"space-y-4\">\n                <div class=\"p-4 border border-yellow-200 bg-yellow-50 dark:bg-yellow-900/20 dark:border-yellow-900/30 rounded-lg\">\n                  <h5 class=\"font-medium text-yellow-800 dark:text-yellow-500 mb-2\">Disable Stream (Soft Delete)</h5>\n                  <p class=\"text-gray-600 dark:text-gray-400 mb-2\">\n                    This option will disable the stream but keep its configuration in the database. You can re-enable it later.\n                  </p>\n                  <ul class=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-400 mb-3\">\n                    <li>Stream will stop processing</li>\n                    <li>Live streaming will be disabled</li>\n                    <li>Recording will be disabled</li>\n                    <li>Audio recording will be disabled</li>\n                    <li>Detection-based recording will be disabled</li>\n                    <li>Configuration is preserved</li>\n                    <li>Existing recordings are kept</li>\n                    <li>Can be re-enabled later</li>\n                  </ul>\n                  <button \n                    class=\"w-full px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                    onClick=${handleDisable}\n                  >\n                    Disable Stream\n                  </button>\n                </div>\n                \n                <div class=\"p-4 border border-red-200 bg-red-50 dark:bg-red-900/20 dark:border-red-900/30 rounded-lg\">\n                  <h5 class=\"font-medium text-red-800 dark:text-red-500 mb-2\">Delete Stream (Permanent)</h5>\n                  <p class=\"text-gray-600 dark:text-gray-400 mb-2\">\n                    This option will permanently delete the stream configuration from the database. This action cannot be undone.\n                  </p>\n                  <ul class=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-400 mb-3\">\n                    <li>Stream will be completely removed</li>\n                    <li>Configuration is deleted</li>\n                    <li>Recordings remain accessible</li>\n                    <li>Cannot be recovered</li>\n                  </ul>\n                  <button \n                    class=\"w-full px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                    onClick=${showDeleteConfirmation}\n                  >\n                    Delete Stream\n                  </button>\n                </div>\n              </div>\n            </div>\n          ` : html`\n            <div class=\"mb-6\">\n              <div class=\"flex items-center justify-center mb-4 text-red-600 dark:text-red-500\">\n                <svg class=\"w-12 h-12\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\"></path>\n                </svg>\n              </div>\n              <h4 class=\"text-lg font-medium mb-2 text-center\">Are you sure you want to permanently delete \"${streamName}\"?</h4>\n              <p class=\"text-gray-600 dark:text-gray-400 mb-4 text-center\">\n                This action cannot be undone. The stream configuration will be permanently removed from the database.\n              </p>\n            </div>\n            \n            <div class=\"flex justify-center space-x-3\">\n              <button \n                class=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                onClick=${() => setIsConfirmDelete(false)}\n              >\n                Cancel\n              </button>\n              <button \n                class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                onClick=${handleDelete}\n              >\n                Yes, Delete Permanently\n              </button>\n            </div>\n          `}\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * LightNVR Web Interface StreamsView Component\n * React component for the streams page\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { showStatusMessage } from './UI.js';\nimport { ContentLoader } from './LoadingIndicator.js';\nimport { StreamDeleteModal } from './StreamDeleteModal.js';\nimport {\n  useQuery,\n  useMutation,\n  useQueryClient,\n  usePostMutation,\n  usePutMutation,\n  useDeleteMutation,\n  fetchJSON\n} from '../../query-client.js';\n\n/**\n * StreamsView component\n * @returns {JSX.Element} StreamsView component\n */\nexport function StreamsView() {\n  const queryClient = useQueryClient();\n\n  // State for streams data\n  const [modalVisible, setModalVisible] = useState(false);\n  const [onvifModalVisible, setOnvifModalVisible] = useState(false);\n  const [showCustomNameInput, setShowCustomNameInput] = useState(false);\n  const [isAddingStream, setIsAddingStream] = useState(false);\n  const [discoveredDevices, setDiscoveredDevices] = useState([]);\n  const [deviceProfiles, setDeviceProfiles] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [selectedProfile, setSelectedProfile] = useState(null);\n  const [customStreamName, setCustomStreamName] = useState('');\n  const [onvifCredentials, setOnvifCredentials] = useState({ username: '', password: '' });\n  const [isDiscovering, setIsDiscovering] = useState(false);\n  const [isLoadingProfiles, setIsLoadingProfiles] = useState(false);\n\n  // Fetch streams data\n  const {\n    data: streamsResponse = [],\n    isLoading,\n    error\n  } = useQuery(['streams'], '/api/streams', {\n    timeout: 10000,\n    retries: 2,\n    retryDelay: 1000\n  });\n\n  // Fetch detection models\n  const {\n    data: detectionModelsData\n  } = useQuery(['detectionModels'], '/api/detection/models', {\n    timeout: 5000,\n    retries: 1,\n    retryDelay: 1000\n  });\n\n  // Process the response to handle both array and object formats\n  const streams = Array.isArray(streamsResponse) ? streamsResponse : (streamsResponse.streams || []);\n\n  // Log streams data for debugging\n  console.log('API Response:', streamsResponse);\n\n  // Log streams data for debugging\n  console.log('Streams data:', streams);\n  console.log('hasData:', streams && streams.length > 0);\n\n  // Default stream state\n  const [currentStream, setCurrentStream] = useState({\n    name: '',\n    url: '',\n    enabled: true,\n    streamingEnabled: true,\n    width: 1280,\n    height: 720,\n    fps: 15,\n    codec: 'h264',\n    protocol: '0',\n    priority: '5',\n    segment: 30,\n    record: true,\n    recordAudio: true,\n    detectionEnabled: false,\n    detectionModel: '',\n    detectionThreshold: 50,\n    detectionInterval: 10,\n    preBuffer: 10,\n    postBuffer: 30\n  });\n  const [isEditing, setIsEditing] = useState(false);\n\n  // State for delete modal\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n  const [streamToDelete, setStreamToDelete] = useState(null);\n\n  // Compute hasData from streams\n  const hasData = streams && streams.length > 0;\n\n  // Extract detection models from query result\n  const detectionModels = detectionModelsData?.models || [];\n\n  // Mutations for saving stream (create or update)\n  const createStreamMutation = usePostMutation(\n    '/api/streams',\n    {\n      timeout: 15000,\n      retries: 1,\n      retryDelay: 1000\n    },\n    {\n      onSuccess: () => {\n        showStatusMessage('Stream added successfully');\n        closeModal();\n        // Invalidate and refetch streams data\n        queryClient.invalidateQueries({ queryKey: ['streams'] });\n      },\n      onError: (error) => {\n        showStatusMessage(`Error adding stream: ${error.message}`, 5000, 'error');\n      }\n    }\n  );\n\n  const updateStreamMutation = useMutation({\n    mutationFn: async (data) => {\n      const { streamName, ...streamData } = data;\n      const url = `/api/streams/${encodeURIComponent(streamName)}`;\n      return await fetchJSON(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(streamData),\n        timeout: 15000,\n        retries: 1,\n        retryDelay: 1000\n      });\n    },\n    onSuccess: () => {\n      showStatusMessage('Stream updated successfully');\n      closeModal();\n      // Invalidate and refetch streams data\n      queryClient.invalidateQueries({ queryKey: ['streams'] });\n    },\n    onError: (error) => {\n      showStatusMessage(`Error updating stream: ${error.message}`, 5000, 'error');\n    }\n  });\n\n  // Helper function to use the appropriate mutation based on editing state\n  const saveStreamMutation = {\n    mutate: (streamData, options) => {\n      if (isEditing) {\n        // For PUT requests, we need to include the streamName parameter\n        updateStreamMutation.mutate({\n          ...streamData,\n          streamName: streamData.name\n        }, options);\n      } else {\n        createStreamMutation.mutate(streamData, options);\n      }\n    }\n  };\n\n  // Mutation for testing stream connection\n  const testStreamMutation = usePostMutation(\n    '/api/streams/test',\n    {\n      timeout: 20000,\n      retries: 1,\n      retryDelay: 2000\n    },\n    {\n      onMutate: () => {\n        showStatusMessage('Testing stream connection...');\n      },\n      onSuccess: (data) => {\n        if (data.success) {\n          showStatusMessage('Stream connection successful!', 3000, 'success');\n        } else {\n          showStatusMessage(`Stream connection failed: ${data.message}`, 5000, 'error');\n        }\n      },\n      onError: (error) => {\n        showStatusMessage(`Error testing stream: ${error.message}`, 5000, 'error');\n      }\n    }\n  );\n\n  // Mutation for deleting stream\n  const deleteStreamMutation = useMutation({\n    mutationFn: async (params) => {\n      const { streamId } = params;\n      const url = `/api/streams/${encodeURIComponent(streamId)}?permanent=true`;\n      return await fetchJSON(url, {\n        method: 'DELETE',\n        timeout: 15000,\n        retries: 1,\n        retryDelay: 1000\n      });\n    },\n    onSuccess: () => {\n      showStatusMessage('Stream successfully deleted.');\n      closeDeleteModal();\n      // Invalidate and refetch streams data\n      queryClient.invalidateQueries({ queryKey: ['streams'] });\n    },\n    onError: (error) => {\n      showStatusMessage(`Error deleting stream: ${error.message}`, 5000, 'error');\n    }\n  });\n\n  const disableStreamMutation = useMutation({\n    mutationFn: async (params) => {\n      const { streamId } = params;\n      const url = `/api/streams/${encodeURIComponent(streamId)}`;\n      return await fetchJSON(url, {\n        method: 'DELETE',\n        timeout: 15000,\n        retries: 1,\n        retryDelay: 1000\n      });\n    },\n    onSuccess: () => {\n      showStatusMessage('Stream successfully disabled.');\n      closeDeleteModal();\n      // Invalidate and refetch streams data\n      queryClient.invalidateQueries({ queryKey: ['streams'] });\n    },\n    onError: (error) => {\n      showStatusMessage(`Error disabling stream: ${error.message}`, 5000, 'error');\n    }\n  });\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Prepare stream data for API\n    const streamData = {\n      name: currentStream.name,\n      url: currentStream.url,\n      enabled: currentStream.enabled,\n      streaming_enabled: currentStream.streamingEnabled,\n      width: parseInt(currentStream.width, 10),\n      height: parseInt(currentStream.height, 10),\n      fps: parseInt(currentStream.fps, 10),\n      codec: currentStream.codec,\n      protocol: parseInt(currentStream.protocol, 10),\n      priority: parseInt(currentStream.priority, 10),\n      segment_duration: parseInt(currentStream.segment, 10),\n      record: currentStream.record,\n      detection_based_recording: currentStream.detectionEnabled,\n      detection_model: currentStream.detectionModel,\n      detection_threshold: parseInt(currentStream.detectionThreshold, 10),\n      detection_interval: parseInt(currentStream.detectionInterval, 10),\n      pre_detection_buffer: parseInt(currentStream.preBuffer, 10),\n      post_detection_buffer: parseInt(currentStream.postBuffer, 10),\n      record_audio: currentStream.recordAudio\n    };\n\n    // When editing, set is_deleted to false to allow undeleting soft-deleted streams\n    if (isEditing) {\n      streamData.is_deleted = false;\n    }\n\n    // Use mutation to save stream\n    saveStreamMutation.mutate(streamData);\n  };\n\n  // Save stream (wrapper for handleSubmit to use in onClick)\n  const saveStream = (e) => {\n    handleSubmit(e);\n  };\n\n  // Test stream connection\n  const testStreamConnection = () => {\n    testStreamMutation.mutate({\n      url: currentStream.url,\n      protocol: parseInt(currentStream.protocol, 10)\n    });\n  };\n\n  // Open delete modal\n  const openDeleteModal = (stream) => {\n    setStreamToDelete(stream);\n    setDeleteModalVisible(true);\n  };\n\n  // Close delete modal\n  const closeDeleteModal = () => {\n    setDeleteModalVisible(false);\n    setStreamToDelete(null);\n  };\n\n  // Open add stream modal\n  const openAddStreamModal = () => {\n    setCurrentStream({\n      name: '',\n      url: '',\n      enabled: true,\n      streamingEnabled: true,\n      width: 1280,\n      height: 720,\n      fps: 15,\n      codec: 'h264',\n      protocol: '0',\n      priority: '5',\n      segment: 30,\n      record: true,\n      recordAudio: true,\n      detectionEnabled: false,\n      detectionModel: '',\n      detectionThreshold: 50,\n      detectionInterval: 10,\n      preBuffer: 10,\n      postBuffer: 30\n    });\n    setIsEditing(false);\n    setModalVisible(true);\n  };\n\n  // Open edit stream modal\n  const openEditStreamModal = async (streamId) => {\n    try {\n      // Use queryClient to fetch stream details\n      const stream = await queryClient.fetchQuery({\n        queryKey: ['stream', streamId],\n        queryFn: async () => {\n          const response = await fetch(`/api/streams/${encodeURIComponent(streamId)}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n          }\n          return response.json();\n        },\n        staleTime: 10000 // 10 seconds\n      });\n\n      setCurrentStream({\n        ...stream,\n        // Convert numeric values to strings for form inputs\n        width: stream.width || 1280,\n        height: stream.height || 720,\n        fps: stream.fps || 15,\n        protocol: stream.protocol?.toString() || '0',\n        priority: stream.priority?.toString() || '5',\n        segment: stream.segment_duration || 30,\n        detectionThreshold: stream.detection_threshold || 50,\n        detectionInterval: stream.detection_interval || 10,\n        preBuffer: stream.pre_detection_buffer || 10,\n        postBuffer: stream.post_detection_buffer || 30,\n        // Map API fields to form fields\n        streamingEnabled: stream.streaming_enabled !== undefined ? stream.streaming_enabled : true,\n        isOnvif: stream.is_onvif !== undefined ? stream.is_onvif : false,\n        detectionEnabled: stream.detection_based_recording || false,\n        detectionModel: stream.detection_model || '',\n        recordAudio: stream.record_audio !== undefined ? stream.record_audio : true\n      });\n      setIsEditing(true);\n      setModalVisible(true);\n    } catch (error) {\n      console.error('Error loading stream details:', error);\n      showStatusMessage('Error loading stream details: ' + error.message);\n    }\n  };\n\n  // Close modal\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n\n  // Open ONVIF discovery modal\n  const openOnvifModal = () => {\n    setDiscoveredDevices([]);\n    setDeviceProfiles([]);\n    setSelectedDevice(null);\n    setSelectedProfile(null);\n    setCustomStreamName('');\n    setOnvifModalVisible(true);\n  };\n\n  // Close ONVIF modal\n  const closeOnvifModal = () => {\n    setOnvifModalVisible(false);\n  };\n\n  // Handle form input change\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setCurrentStream(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  // Disable stream (soft delete)\n  const disableStream = (streamId) => {\n    disableStreamMutation.mutate({\n      streamId,\n    });\n  };\n\n  // Delete stream (permanent)\n  const deleteStream = (streamId) => {\n    deleteStreamMutation.mutate({\n      streamId,\n    });\n  };\n\n  // Handle ONVIF credential input change\n  const handleCredentialChange = (e) => {\n    const { name, value } = e.target;\n    setOnvifCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle threshold change\n  const handleThresholdChange = (e) => {\n    const value = e.target.value;\n    setCurrentStream(prev => ({\n      ...prev,\n      detectionThreshold: value\n    }));\n  };\n\n  // Load detection models\n  const loadDetectionModels = () => {\n    queryClient.invalidateQueries({ queryKey: ['detectionModels'] });\n  };\n\n  // ONVIF discovery mutation\n  const onvifDiscoveryMutation = usePostMutation(\n    '/api/onvif/discovery/discover',\n    {\n      timeout: 120000,\n      retries: 0\n    },\n    {\n      onMutate: () => {\n        setIsDiscovering(true);\n      },\n      onSuccess: (data) => {\n        setDiscoveredDevices(data.devices || []);\n        setIsDiscovering(false);\n      },\n      onError: (error) => {\n        showStatusMessage(`Error discovering ONVIF devices: ${error.message}`, 5000, 'error');\n        setIsDiscovering(false);\n      }\n    }\n  );\n\n  // Get device profiles mutation\n  const getDeviceProfilesMutation = useMutation({\n    mutationFn: ({ device, credentials }) => {\n      setIsLoadingProfiles(true);\n\n      // Make a simple GET request\n      return fetch('/api/onvif/device/profiles', {\n        method: 'GET',\n        headers: {\n          'X-Device-URL': `http://${device.ip_address}/onvif/device_service`,\n          'X-Username': credentials.username,\n          'X-Password': credentials.password\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error ${response.status}`);\n        }\n        return response.json();\n      });\n    },\n    onSuccess: (data) => {\n      setDeviceProfiles(data.profiles || []);\n      setIsLoadingProfiles(false);\n    },\n    onError: (error) => {\n      showStatusMessage(`Error loading device profiles: ${error.message}`, 5000, 'error');\n      setIsLoadingProfiles(false);\n    }\n  });\n\n  // Test ONVIF connection mutation\n  const testOnvifConnectionMutation = usePostMutation(\n    '/api/onvif/device/test',\n    {\n      timeout: 15000,\n      retries: 0\n    },\n    {\n      onMutate: () => {\n        setIsLoadingProfiles(true);\n      },\n      onSuccess: (data, variables) => {\n        if (data.success) {\n          showStatusMessage('Connection successful!', 3000, 'success');\n          // The device object is no longer passed directly in variables\n          // We need to use the selectedDevice state instead\n          if (selectedDevice) {\n            getDeviceProfiles(selectedDevice);\n          }\n        } else {\n          showStatusMessage(`Connection failed: ${data.message}`, 5000, 'error');\n          setIsLoadingProfiles(false);\n        }\n      },\n      onError: (error) => {\n        showStatusMessage(`Error testing connection: ${error.message}`, 5000, 'error');\n        setIsLoadingProfiles(false);\n      }\n    }\n  );\n\n\n\n  // Submit ONVIF device\n  const submitOnvifDevice = () => {\n    if (!selectedDevice || !selectedProfile || !customStreamName.trim()) {\n      showStatusMessage('Missing required information', 5000, 'error');\n      return;\n    }\n\n    setIsAddingStream(true);\n\n    // Prepare stream data\n    const streamData = {\n      name: customStreamName.trim(),\n      url: selectedProfile.stream_uri, // Use stream_uri instead of url\n      enabled: true,\n      streaming_enabled: true,\n      width: selectedProfile.width,\n      height: selectedProfile.height,\n      fps: selectedProfile.fps || 15,\n      codec: selectedProfile.encoding === 'H264' ? 'h264' : 'h265',\n      protocol: '0', // TCP\n      priority: '5', // Medium\n      segment_duration: 30,\n      record: true,\n      record_audio: true,\n      is_onvif: true\n    };\n\n    // Log the stream data for debugging\n    console.log('Adding ONVIF stream with data:', streamData);\n\n    // Use mutation to save stream\n    saveStreamMutation.mutate(streamData, {\n      onSuccess: () => {\n        setIsAddingStream(false);\n        setShowCustomNameInput(false);\n        setOnvifModalVisible(false);\n      },\n      onError: () => {\n        setIsAddingStream(false);\n      },\n      isEditing: false,\n    });\n  };\n\n  // Start ONVIF discovery\n  const startOnvifDiscovery = () => {\n    onvifDiscoveryMutation.mutate({});\n  };\n\n  // Get ONVIF device profiles\n  const getDeviceProfiles = (device) => {\n    setSelectedDevice(device);\n    setDeviceProfiles([]);\n    getDeviceProfilesMutation.mutate({\n      device,\n      credentials: onvifCredentials\n    });\n  };\n\n  // Handle custom stream name change\n  const handleStreamNameChange = (e) => {\n    setCustomStreamName(e.target.value);\n  };\n\n  // Add ONVIF device as stream with selected profile\n  const addOnvifDeviceAsStream = (profile) => {\n    setSelectedProfile(profile);\n    setCustomStreamName(`${selectedDevice.name || 'ONVIF'}_${profile.name || 'Stream'}`);\n    setShowCustomNameInput(true);\n  };\n\n  // Test ONVIF connection\n  const testOnvifConnection = (device) => {\n    // Store the selected device first\n    setSelectedDevice(device);\n\n    // Then make the API call\n    testOnvifConnectionMutation.mutate({\n      url: `http://${device.ip_address}/onvif/device_service`,\n      username: onvifCredentials.username,\n      password: onvifCredentials.password\n    });\n  };\n\n  return (\n    <section id=\"streams-page\" className=\"page\">\n      <div className=\"page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\">\n        <h2 className=\"text-xl font-bold\">Streams</h2>\n        <div className=\"controls flex space-x-2\">\n          <button\n              id=\"discover-onvif-btn\"\n              className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n              onClick={() => setOnvifModalVisible(true)}\n          >\n            Discover ONVIF Cameras\n          </button>\n          <button\n              id=\"add-stream-btn\"\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n              onClick={openAddStreamModal}\n          >\n            Add Stream\n          </button>\n        </div>\n      </div>\n\n      <ContentLoader\n          isLoading={isLoading}\n          hasData={hasData}\n          loadingMessage=\"Loading streams...\"\n          emptyMessage=\"No streams configured yet. Click 'Add Stream' to create one.\"\n      >\n        <div className=\"streams-container bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table id=\"streams-table\" className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Name</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">URL</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Resolution</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">FPS</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Recording</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Actions</th>\n              </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700\">\n              {streams.map(stream => (\n                <tr key={stream.name} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <span className={`status-indicator w-2 h-2 rounded-full mr-2 ${stream.enabled ? 'bg-green-500' : 'bg-red-500'}`}></span>\n                      {stream.name}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{stream.url}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{stream.width}x{stream.height}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{stream.fps}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {stream.record ? 'Enabled' : 'Disabled'}\n                    {stream.detection_based_recording ? ' (Detection)' : ''}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex space-x-2\">\n                      <button\n                          className=\"p-1 rounded-full text-blue-600 hover:bg-blue-100 dark:text-blue-400 dark:hover:bg-blue-900 focus:outline-none\"\n                          onClick={() => openEditStreamModal(stream.name)}\n                          title=\"Edit\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\"></path>\n                        </svg>\n                      </button>\n                      <button\n                          className=\"p-1 rounded-full text-red-600 hover:bg-red-100 dark:text-red-400 dark:hover:bg-red-900 focus:outline-none\"\n                          onClick={() => openDeleteModal(stream)}\n                          title=\"Delete\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\"></path>\n                        </svg>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </ContentLoader>\n\n      {deleteModalVisible && streamToDelete && (\n        <StreamDeleteModal\n            streamId={streamToDelete.name}\n            streamName={streamToDelete.name}\n            onClose={closeDeleteModal}\n            onDisable={disableStream}\n            onDelete={deleteStream}\n        />\n      )}\n\n      {modalVisible && (\n        <div id=\"stream-modal\" className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-medium\">{isEditing ? 'Edit Stream' : 'Add Stream'}</h3>\n              <span className=\"text-2xl cursor-pointer\" onClick={closeModal}>Ã—</span>\n            </div>\n            <div className=\"p-4\">\n              <form id=\"stream-form\" className=\"space-y-4\">\n                <div className=\"form-group\">\n                  <label for=\"stream-name\" className=\"block text-sm font-medium mb-1\">Name</label>\n                  <input\n                      type=\"text\"\n                      id=\"stream-name\"\n                      name=\"name\"\n                      className={`w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white ${isEditing ? 'bg-gray-100 dark:bg-gray-800' : ''}`}\n                      value={currentStream.name}\n                      onChange={handleInputChange}\n                      disabled={isEditing}\n                      required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"stream-url\" className=\"block text-sm font-medium mb-1\">URL</label>\n                  <input\n                      type=\"text\"\n                      id=\"stream-url\"\n                      name=\"url\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                      placeholder=\"rtsp://example.com/stream\"\n                      value={currentStream.url}\n                      onChange={handleInputChange}\n                      required\n                  />\n                </div>\n                <div className=\"form-group flex items-center\">\n                  <input\n                      type=\"checkbox\"\n                      id=\"stream-enabled\"\n                      name=\"enabled\"\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      checked={currentStream.enabled}\n                      onChange={handleInputChange}\n                  />\n                  <label for=\"stream-enabled\" className=\"ml-2 block text-sm\">Stream Active</label>\n                  <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-400\">Enable/disable all stream processing</span>\n                </div>\n                <div className=\"form-group flex items-center\">\n                  <input\n                      type=\"checkbox\"\n                      id=\"stream-streaming-enabled\"\n                      name=\"streamingEnabled\"\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      checked={currentStream.streamingEnabled}\n                      onChange={handleInputChange}\n                  />\n                  <label for=\"stream-streaming-enabled\" className=\"ml-2 block text-sm\">Live View Enabled</label>\n                  <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-400\">Enable/disable live viewing in browser</span>\n                </div>\n                <div className=\"form-group flex items-center\">\n                  <input\n                      type=\"checkbox\"\n                      id=\"stream-is-onvif\"\n                      name=\"isOnvif\"\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      checked={currentStream.isOnvif}\n                      onChange={handleInputChange}\n                  />\n                  <label for=\"stream-is-onvif\" className=\"ml-2 block text-sm\">ONVIF Camera</label>\n                  <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-400\">Mark this stream as an ONVIF camera for special handling</span>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"form-group\">\n                    <label for=\"stream-width\" className=\"block text-sm font-medium mb-1\">Width</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-width\"\n                        name=\"width\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"320\"\n                        max=\"1920\"\n                        value={currentStream.width}\n                        onChange={handleInputChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"stream-height\" className=\"block text-sm font-medium mb-1\">Height</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-height\"\n                        name=\"height\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"240\"\n                        max=\"1080\"\n                        value={currentStream.height}\n                        onChange={handleInputChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"form-group\">\n                    <label for=\"stream-fps\" className=\"block text-sm font-medium mb-1\">FPS</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-fps\"\n                        name=\"fps\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"1\"\n                        max=\"30\"\n                        value={currentStream.fps}\n                        onChange={handleInputChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"stream-codec\" className=\"block text-sm font-medium mb-1\">Codec</label>\n                    <select\n                        id=\"stream-codec\"\n                        name=\"codec\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        value={currentStream.codec}\n                        onChange={handleInputChange}\n                    >\n                      <option value=\"h264\">H.264</option>\n                      <option value=\"h265\">H.265</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"stream-protocol\" className=\"block text-sm font-medium mb-1\">Protocol</label>\n                    <select\n                        id=\"stream-protocol\"\n                        name=\"protocol\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        value={currentStream.protocol}\n                        onChange={handleInputChange}\n                    >\n                      <option value=\"0\">TCP</option>\n                      <option value=\"1\">UDP</option>\n                    </select>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Connection protocol (ONVIF cameras use either TCP or UDP)</span>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"form-group\">\n                    <label for=\"stream-priority\" className=\"block text-sm font-medium mb-1\">Priority</label>\n                    <select\n                        id=\"stream-priority\"\n                        name=\"priority\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        value={currentStream.priority}\n                        onChange={handleInputChange}\n                    >\n                      <option value=\"1\">Low (1)</option>\n                      <option value=\"5\">Medium (5)</option>\n                      <option value=\"10\">High (10)</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"stream-segment\" className=\"block text-sm font-medium mb-1\">Segment Duration (seconds)</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-segment\"\n                        name=\"segment\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"60\"\n                        max=\"3600\"\n                        value={currentStream.segment}\n                        onChange={handleInputChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group flex items-center\">\n                  <input\n                      type=\"checkbox\"\n                      id=\"stream-record\"\n                      name=\"record\"\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      checked={currentStream.record}\n                      onChange={handleInputChange}\n                  />\n                  <label for=\"stream-record\" className=\"ml-2 block text-sm\">Record</label>\n                </div>\n                <div className=\"form-group flex items-center\">\n                  <input\n                      type=\"checkbox\"\n                      id=\"stream-record-audio\"\n                      name=\"recordAudio\"\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      checked={currentStream.recordAudio}\n                      onChange={handleInputChange}\n                  />\n                  <label for=\"stream-record-audio\" className=\"ml-2 block text-sm\">Record Audio</label>\n                  <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-400\">Include audio in recordings if available in the stream</span>\n                </div>\n\n                {/* Detection-based recording options */}\n                <div className=\"mt-6 mb-2 pb-1 border-b border-gray-200 dark:border-gray-700\">\n                  <h4 className=\"text-md font-medium\">Detection-Based Recording</h4>\n                </div>\n                <div className=\"form-group flex items-center\">\n                  <input\n                      type=\"checkbox\"\n                      id=\"stream-detection-enabled\"\n                      name=\"detectionEnabled\"\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      checked={currentStream.detectionEnabled}\n                      onChange={handleInputChange}\n                  />\n                  <label for=\"stream-detection-enabled\" className=\"ml-2 block text-sm\">Enable Detection-Based Recording</label>\n                  <span className=\"ml-2 text-xs text-gray-500 dark:text-gray-400\">Only record when objects are detected</span>\n                </div>\n                <div className=\"form-group\" style={currentStream.detectionEnabled ? '' : 'display: none'}>\n                  <label for=\"stream-detection-model\" className=\"block text-sm font-medium mb-1\">Detection Model</label>\n                  <div className=\"flex space-x-2\">\n                    <select\n                        id=\"stream-detection-model\"\n                        name=\"detectionModel\"\n                        className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        value={currentStream.detectionModel}\n                        onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select a model</option>\n                      {detectionModels.map(model => (\n                        <option key={model.id} value={model.id}>{model.name}</option>\n                      ))}\n                    </select>\n                    <button\n                        id=\"refresh-models-btn\"\n                        className=\"p-2 rounded-md bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none\"\n                        title=\"Refresh Models\"\n                        onClick={loadDetectionModels}\n                        type=\"button\"\n                    >\n                      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clip-rule=\"evenodd\"></path>\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"form-group\" style={currentStream.detectionEnabled ? '' : 'display: none'}>\n                  <label for=\"stream-detection-threshold\" className=\"block text-sm font-medium mb-1\">Detection Threshold</label>\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                        type=\"range\"\n                        id=\"stream-detection-threshold\"\n                        name=\"detectionThreshold\"\n                        className=\"flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                        min=\"0\"\n                        max=\"100\"\n                        step=\"1\"\n                        value={currentStream.detectionThreshold}\n                        onInput={handleThresholdChange}\n                    />\n                    <span id=\"stream-threshold-value\" className=\"font-medium text-blue-600 dark:text-blue-400 min-w-[3rem] text-center\">\n                      {currentStream.detectionThreshold}%\n                    </span>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\" style={currentStream.detectionEnabled ? '' : 'display: none'}>\n                  <div className=\"form-group\">\n                    <label for=\"stream-detection-interval\" className=\"block text-sm font-medium mb-1\">Detection Interval (frames)</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-detection-interval\"\n                        name=\"detectionInterval\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"1\"\n                        max=\"100\"\n                        value={currentStream.detectionInterval}\n                        onChange={handleInputChange}\n                    />\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Detect on every Nth frame</span>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"stream-pre-buffer\" className=\"block text-sm font-medium mb-1\">Pre-detection Buffer (seconds)</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-pre-buffer\"\n                        name=\"preBuffer\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"0\"\n                        max=\"60\"\n                        value={currentStream.preBuffer}\n                        onChange={handleInputChange}\n                    />\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Seconds to keep before detection</span>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"stream-post-buffer\" className=\"block text-sm font-medium mb-1\">Post-detection Buffer (seconds)</label>\n                    <input\n                        type=\"number\"\n                        id=\"stream-post-buffer\"\n                        name=\"postBuffer\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        min=\"0\"\n                        max=\"300\"\n                        value={currentStream.postBuffer}\n                        onChange={handleInputChange}\n                    />\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">Seconds to keep after detection</span>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"flex justify-between p-4 border-t border-gray-200 dark:border-gray-700\">\n              <button\n                  id=\"stream-test-btn\"\n                  className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n                  onClick={testStreamConnection}\n                  type=\"button\"\n              >\n                Test Connection\n              </button>\n              <div className=\"space-x-2\">\n                <button\n                    id=\"stream-save-btn\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                    onClick={saveStream}\n                    type=\"button\"\n                >\n                  Save\n                </button>\n                <button\n                    id=\"stream-cancel-btn\"\n                    className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\n                    onClick={closeModal}\n                    type=\"button\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {onvifModalVisible && (\n        <div id=\"onvif-modal\" className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-medium\">ONVIF Camera Discovery</h3>\n              <span className=\"text-2xl cursor-pointer\" onClick={() => setOnvifModalVisible(false)}>Ã—</span>\n            </div>\n            <div className=\"p-4\">\n              <div className=\"mb-4 flex justify-between items-center\">\n                <h4 className=\"text-md font-medium\">Discovered Devices</h4>\n                <button\n                    id=\"discover-btn\"\n                    className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors focus:outline-none\"\n                    onClick={startOnvifDiscovery}\n                    disabled={isDiscovering}\n                    type=\"button\"\n                >\n                  {isDiscovering ? (\n                    <span className=\"flex items-center\">\n                      Discovering\n                      <span className=\"ml-1 flex space-x-1\">\n                        <span className=\"animate-pulse delay-0 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                        <span className=\"animate-pulse delay-150 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                        <span className=\"animate-pulse delay-300 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                      </span>\n                    </span>\n                  ) : 'Start Discovery'}\n                </button>\n              </div>\n\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">IP Address</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Manufacturer</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Model</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Actions</th>\n                  </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700\">\n                  {discoveredDevices.length === 0 ? (\n                    <tr>\n                      <td colSpan=\"4\" className=\"px-6 py-4 text-center text-gray-500 dark:text-gray-400\">\n                        {isDiscovering ? (\n                          <div className=\"flex items-center justify-center\">\n                            <span>Discovering devices</span>\n                            <span className=\"ml-1 flex space-x-1\">\n                                <span className=\"animate-pulse delay-0 h-1.5 w-1.5 bg-gray-500 dark:bg-gray-400 rounded-full\"></span>\n                                <span className=\"animate-pulse delay-150 h-1.5 w-1.5 bg-gray-500 dark:bg-gray-400 rounded-full\"></span>\n                                <span className=\"animate-pulse delay-300 h-1.5 w-1.5 bg-gray-500 dark:bg-gray-400 rounded-full\"></span>\n                              </span>\n                          </div>\n                        ) : 'No devices discovered yet. Click \"Start Discovery\" to scan your network.'}\n                      </td>\n                    </tr>\n                  ) : discoveredDevices.map(device => (\n                    <tr key={device.ip_address} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{device.ip_address}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{device.manufacturer || 'Unknown'}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">{device.model || 'Unknown'}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <button\n                            className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none\"\n                            onClick={() => testOnvifConnection(device)}\n                            disabled={isLoadingProfiles && selectedDevice && selectedDevice.ip_address === device.ip_address}\n                            type=\"button\"\n                        >\n                          {isLoadingProfiles && selectedDevice && selectedDevice.ip_address === device.ip_address ? (\n                            <span className=\"flex items-center\">\n                                Loading\n                                <span className=\"ml-1 flex space-x-1\">\n                                  <span className=\"animate-pulse delay-0 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                                  <span className=\"animate-pulse delay-150 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                                  <span className=\"animate-pulse delay-300 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                                </span>\n                              </span>\n                          ) : 'Connect'}\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                  </tbody>\n                </table>\n              </div>\n\n              <div className=\"mt-6 mb-4\">\n                <h4 className=\"text-md font-medium mb-2\">Authentication</h4>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-3\">\n                  Enter credentials to connect to the selected ONVIF device. Credentials are not needed for discovery, only for connecting to devices.\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"form-group\">\n                    <label for=\"onvif-username\" className=\"block text-sm font-medium mb-1\">Username</label>\n                    <input\n                        type=\"text\"\n                        id=\"onvif-username\"\n                        name=\"username\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        placeholder=\"admin\"\n                        value={onvifCredentials.username}\n                        onChange={handleCredentialChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"onvif-password\" className=\"block text-sm font-medium mb-1\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"onvif-password\"\n                        name=\"password\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                        placeholder=\"password\"\n                        value={onvifCredentials.password}\n                        onChange={handleCredentialChange}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {selectedDevice && deviceProfiles.length > 0 && (\n                <div className=\"mt-6\">\n                  <h4 className=\"text-md font-medium mb-2\">Available Profiles for {selectedDevice.ip_address}</h4>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                      <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Name</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Resolution</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Encoding</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">FPS</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700\">\n                      {deviceProfiles.map(profile => (\n                        <tr key={profile.token} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">{profile.name}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">{profile.width}x{profile.height}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">{profile.encoding}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">{profile.fps}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <button\n                                className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors focus:outline-none\"\n                                onClick={() => addOnvifDeviceAsStream(profile)}\n                                type=\"button\"\n                            >\n                              Add as Stream\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n            )}\n            </div>\n            <div className=\"flex justify-end p-4 border-t border-gray-200 dark:border-gray-700\">\n              <button\n                  id=\"onvif-close-btn\"\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\n                  onClick={() => setOnvifModalVisible(false)}\n                  type=\"button\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showCustomNameInput && (\n        <div id=\"custom-name-modal\" className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full\">\n            <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-medium\">Stream Name</h3>\n              <span className=\"text-2xl cursor-pointer\" onClick={() => setShowCustomNameInput(false)}>Ã—</span>\n            </div>\n            <div className=\"p-4\">\n              <div className=\"mb-4\">\n                <label for=\"custom-stream-name\" className=\"block text-sm font-medium mb-1\">Enter a name for this stream:</label>\n                <input\n                    type=\"text\"\n                    id=\"custom-stream-name\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    value={customStreamName}\n                    onChange={(e) => setCustomStreamName(e.target.value)}\n                />\n                <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                  This name will be used to identify the stream in the system.\n                </p>\n              </div>\n            </div>\n            <div className=\"flex justify-end p-4 border-t border-gray-200 dark:border-gray-700 space-x-2\">\n              <button\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\n                  onClick={() => setShowCustomNameInput(false)}\n                  type=\"button\"\n              >\n                Cancel\n              </button>\n              <button\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\n                  onClick={submitOnvifDevice}\n                  type=\"button\"\n                  disabled={!customStreamName.trim() || isAddingStream}\n              >\n                {isAddingStream ? (\n                  <span className=\"flex items-center\">\n                    Adding\n                    <span className=\"ml-1 flex space-x-1\">\n                      <span className=\"animate-pulse delay-0 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                      <span className=\"animate-pulse delay-150 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                      <span className=\"animate-pulse delay-300 h-1.5 w-1.5 bg-white rounded-full\"></span>\n                    </span>\n                  </span>\n                ) : 'Add Stream'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n}\n","/**\n * LightNVR Web Interface Streams Page\n * Entry point for the streams page\n */\n\nimport { render } from 'preact';\nimport { StreamsView } from '../components/preact/StreamsView.jsx';\nimport { QueryClientProvider, queryClient } from '../query-client.js';\nimport {Header} from \"../components/preact/Header.jsx\";\nimport {Footer} from \"../components/preact/Footer.jsx\";\n\n// Render the StreamsView component when the DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Get the container element\n  const container = document.getElementById('main-content');\n\n  if (container) {\n    render(\n      <QueryClientProvider client={queryClient}>\n        <Header />\n        <StreamsView />\n        <Footer />\n      </QueryClientProvider>,\n      container\n    );\n  }\n});\n"],"names":["StreamDeleteModal","streamId","streamName","onClose","onDisable","onDelete","isConfirmDelete","setIsConfirmDelete","useState","html","handleDelete","handleDisable","showDeleteConfirmation","StreamsView","queryClient","useQueryClient","modalVisible","setModalVisible","onvifModalVisible","setOnvifModalVisible","showCustomNameInput","setShowCustomNameInput","isAddingStream","setIsAddingStream","discoveredDevices","setDiscoveredDevices","deviceProfiles","setDeviceProfiles","selectedDevice","setSelectedDevice","selectedProfile","setSelectedProfile","customStreamName","setCustomStreamName","onvifCredentials","setOnvifCredentials","username","password","isDiscovering","setIsDiscovering","isLoadingProfiles","setIsLoadingProfiles","data","streamsResponse","isLoading","error","useQuery","timeout","retries","retryDelay","detectionModelsData","streams","Array","isArray","console","log","length","currentStream","setCurrentStream","name","url","enabled","streamingEnabled","width","height","fps","codec","protocol","priority","segment","record","recordAudio","detectionEnabled","detectionModel","detectionThreshold","detectionInterval","preBuffer","postBuffer","isEditing","setIsEditing","deleteModalVisible","setDeleteModalVisible","streamToDelete","setStreamToDelete","hasData","detectionModels","models","createStreamMutation","usePostMutation","onSuccess","showStatusMessage","closeModal","invalidateQueries","queryKey","onError","message","updateStreamMutation","useMutation","mutationFn","async","streamData","encodeURIComponent","fetchJSON","method","headers","body","JSON","stringify","saveStreamMutation","mutate","options","testStreamMutation","onMutate","success","deleteStreamMutation","params","closeDeleteModal","disableStreamMutation","handleInputChange","e","value","type","checked","target","prev","handleCredentialChange","onvifDiscoveryMutation","devices","getDeviceProfilesMutation","device","credentials","fetch","ip_address","then","response","ok","Error","status","json","profiles","testOnvifConnectionMutation","variables","getDeviceProfiles","jsxs","id","className","children","jsx","onClick","openAddStreamModal","ContentLoader","loadingMessage","emptyMessage","map","stream","detection_based_recording","fetchQuery","queryFn","staleTime","toString","segment_duration","detection_threshold","detection_interval","pre_detection_buffer","post_detection_buffer","streaming_enabled","isOnvif","is_onvif","detection_model","record_audio","openEditStreamModal","title","fill","viewBox","xmlns","d","openDeleteModal","fillRule","clipRule","for","onChange","disabled","required","placeholder","min","max","style","model","loadDetectionModels","step","onInput","testStreamConnection","parseInt","preventDefault","is_deleted","handleSubmit","startOnvifDiscovery","colSpan","manufacturer","testOnvifConnection","profile","encoding","addOnvifDeviceAsStream","token","submitOnvifDevice","trim","stream_uri","document","addEventListener","container","getElementById","render","QueryClientProvider","client","Header","Footer"],"mappings":"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"}