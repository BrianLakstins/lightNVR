const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./preact-app-BjdFE8cp.js","../css/preact-app.css"])))=>i.map(i=>d[i]);
var R=Object.freeze,ge=Object.defineProperty;var l=(e,t)=>R(ge(e,"raw",{value:R(t||e.slice())}));import{h as c,d as h,A as U,y as v,u as ue,i as E,_ as D,s as y,j as C}from"./preact-app-BjdFE8cp.js";import{C as me}from"./LoadingIndicator-BaR9etK1.js";var _;function be({restartSystem:e,shutdownSystem:t,isRestarting:s,isShuttingDown:n}){return c(_||(_=l(['\n    <div class="page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">\n      <h2 class="text-xl font-bold">System</h2>\n      <div class="controls space-x-2">\n        <button \n          id="restart-btn" \n          class="px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=",'\n        >\n          Restart\n        </button>\n        <button \n          id="shutdown-btn" \n          class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=","\n        >\n          Shutdown\n        </button>\n      </div>\n    </div>\n  "])),e,s||n,t,s||n)}var j;function fe({systemInfo:e,formatUptime:t}){var s,n,i,o;return c(j||(j=l(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">System Information</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Version:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Uptime:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Model:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Cores:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span class="font-medium">CPU Usage:</span>\n          <div class="w-32 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n          <span>","</span>\n        </div>\n      </div>\n    </div>\n  "])),e.version||"Unknown",e.uptime?t(e.uptime):"Unknown",((s=e.cpu)==null?void 0:s.model)||"Unknown",((n=e.cpu)==null?void 0:n.cores)||"Unknown","width: ".concat(((i=e.cpu)==null?void 0:i.usage)||0,"%"),(o=e.cpu)!=null&&o.usage?"".concat(e.cpu.usage.toFixed(1),"%"):"Unknown")}var W;function pe({systemInfo:e,formatBytes:t}){var d,m,p,f,b,x,w,$,L,M,k,S;const s=((d=e.memory)==null?void 0:d.used)||0,n=((m=e.go2rtcMemory)==null?void 0:m.used)||0,i=((p=e.memory)==null?void 0:p.total)||0,o=s+n,a=i?(o/i*100).toFixed(1):0,g=o?(s/o*100).toFixed(1):0,r=o?(n/o*100).toFixed(1):0;return c(W||(W=l(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Memory & Storage</h3>\n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Process Memory:</span>\n            <div>\n              <span class="inline-block px-2 py-0.5 mr-1 text-xs rounded bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">\n                LightNVR: ','\n              </span>\n              <span class="inline-block px-2 py-0.5 text-xs rounded bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">\n                go2rtc: ','\n              </span>\n            </div>\n          </div>\n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total memory</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=','>\n              <div class="bg-blue-600 h-2.5" style=','></div>\n              <div class="bg-green-500 h-2.5" style=','></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Memory:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">LightNVR Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),t(s),t(n),t(o),t(i),a,"width: ".concat(a,"%"),"width: ".concat(g,"%"),"width: ".concat(r,"%"),(f=e.systemMemory)!=null&&f.used?t(e.systemMemory.used):"0",(b=e.systemMemory)!=null&&b.total?t(e.systemMemory.total):"0","width: ".concat((x=e.systemMemory)!=null&&x.total?(e.systemMemory.used/e.systemMemory.total*100).toFixed(1):0,"%"),(w=e.disk)!=null&&w.used?t(e.disk.used):"0",($=e.disk)!=null&&$.total?t(e.disk.total):"0","width: ".concat((L=e.disk)!=null&&L.total?(e.disk.used/e.disk.total*100).toFixed(1):0,"%"),(M=e.systemDisk)!=null&&M.used?t(e.systemDisk.used):"0",(k=e.systemDisk)!=null&&k.total?t(e.systemDisk.total):"0","width: ".concat((S=e.systemDisk)!=null&&S.total?(e.systemDisk.used/e.systemDisk.total*100).toFixed(1):0,"%"))}var N,F,z,V,T;function ve({systemInfo:e,formatBytes:t}){var g;if(!e.streamStorage||!Array.isArray(e.streamStorage)||e.streamStorage.length===0)return c(N||(N=l(['\n      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n        <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n        <div class="text-gray-500 dark:text-gray-400 text-center py-4">\n          No stream storage information available\n        </div>\n      </div>\n    '])));const s=e.streamStorage.reduce((r,d)=>r+d.size,0),n=((g=e.disk)==null?void 0:g.total)||0,i=n?(s/n*100).toFixed(1):0,o=e.streamStorage.map(r=>({name:r.name,size:r.size,count:r.count,slicePercent:s?(r.size/s*100).toFixed(1):0}));o.sort((r,d)=>d.size-r.size);const a=["bg-blue-600","bg-green-500","bg-yellow-500","bg-red-500","bg-purple-500","bg-pink-500","bg-indigo-500","bg-teal-500"];return c(T||(T=l(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n      \n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Storage per Stream:</span>\n            <div class="flex flex-wrap justify-end gap-1">\n              ','\n            </div>\n          </div>\n          \n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total storage</span>\n          </div>\n          \n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=',">\n              ",'\n            </div>\n          </div>\n          \n          <div class="mt-4">\n            <h4 class="font-medium mb-2">Stream Details:</h4>\n            <div class="grid grid-cols-1 md:grid-cols-2 gap-2">\n              ',"\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),o.map((r,d)=>c(F||(F=l(['\n                <span class="inline-block px-2 py-0.5 text-xs rounded '," ",'">\n                  ',": ","\n                </span>\n              "])),a[d%a.length].replace("bg-","bg-opacity-20 bg-"),a[d%a.length].replace("bg-","text-"),r.name,t(r.size))),t(s),t(n),i,"width: ".concat(i,"%"),o.map((r,d)=>c(z||(z=l(['\n                <div class="',' h-2.5" style=',"></div>\n              "])),a[d%a.length],"width: ".concat(r.slicePercent,"%"))),o.map((r,d)=>c(V||(V=l(['\n                <a href="recordings.html?stream=','" \n                   class="flex items-center p-2 rounded bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors cursor-pointer">\n                  <div class="w-3 h-3 rounded-full mr-2 ','"></div>\n                  <div>\n                    <div class="font-medium">','</div>\n                    <div class="text-xs text-gray-500 dark:text-gray-400">\n                      '," (","%) â€¢ "," recordings\n                    </div>\n                  </div>\n                </a>\n              "])),encodeURIComponent(r.name),a[d%a.length],r.name,t(r.size),r.slicePercent,r.count)))}var A,O,B;function we({systemInfo:e}){var t,s;return c(B||(B=l(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Network Interfaces</h3>\n      <div class="space-y-2">\n        ',"\n      </div>\n    </div>\n  "])),(s=(t=e.network)==null?void 0:t.interfaces)!=null&&s.length?e.network.interfaces.map(n=>c(A||(A=l(["\n          <div key=",' class="mb-2 pb-2 border-b border-gray-100 dark:border-gray-700 last:border-0">\n            <div class="flex justify-between">\n              <span class="font-medium">',":</span>\n              <span>",'</span>\n            </div>\n            <div class="text-sm text-gray-500 dark:text-gray-400">\n              MAC: '," | ","\n            </div>\n          </div>\n        "])),n.name,n.name,n.address||"No IP",n.mac||"Unknown",n.up?"Up":"Down")):c(O||(O=l(['<div class="text-gray-500 dark:text-gray-400">No network interfaces found</div>']))))}var q;function ye({systemInfo:e,formatBytes:t}){var s,n,i,o;return c(q||(q=l(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Streams & Recordings</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Active Streams:</span>\n          <span>'," / ",'</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings Size:</span>\n          <span>',"</span>\n        </div>\n      </div>\n    </div>\n  "])),((s=e.streams)==null?void 0:s.active)||0,((n=e.streams)==null?void 0:n.total)||0,((i=e.recordings)==null?void 0:i.count)||0,(o=e.recordings)!=null&&o.size?t(e.recordings.size):"0")}var K,G,H,I,Y,J;function he(e){if(e==null)return c(K||(K=l(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">UNKNOWN</span>'])));const t=String(e).toLowerCase().trim();if(t==="error"||t==="err")return c(G||(G=l(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">ERROR</span>'])));if(t==="warning"||t==="warn")return c(H||(H=l(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">WARN</span>'])));if(t==="info")return c(I||(I=l(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">INFO</span>'])));if(t==="debug"||t==="dbg")return c(Y||(Y=l(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">DEBUG</span>'])));{const s=String(e).toUpperCase();return c(J||(J=l(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">',"</span>"])),s)}}var Q,Z,X;function xe({logs:e,logLevel:t,logCount:s,setLogLevel:n,setLogCount:i,loadLogs:o,clearLogs:a}){return c(X||(X=l(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 mb-4">\n      <div class="flex justify-between items-center mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">\n        <h3 class="text-lg font-semibold">System Logs</h3>\n        <div class="flex space-x-2">\n          <select \n            id="log-level" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="error">Error</option>\n            <option value="warning">Warning</option>\n            <option value="info">Info</option>\n            <option value="debug">Debug</option>\n          </select>\n          <select \n            id="log-count" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="50">50 lines</option>\n            <option value="100">100 lines</option>\n            <option value="200">200 lines</option>\n            <option value="500">500 lines</option>\n          </select>\n          <button \n            id="refresh-logs-btn" \n            class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Refresh\n          </button>\n          <button \n            id="clear-logs-btn" \n            class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Clear Logs\n          </button>\n        </div>\n      </div>\n      <div class="logs-container bg-gray-100 dark:bg-gray-900 rounded p-4 overflow-auto max-h-96 font-mono text-sm">\n        ',"\n      </div>\n    </div>\n  "])),t,g=>{const r=g.target.value;console.log("LogsView: Log level changed from ".concat(t," to ").concat(r)),n(r)},s,g=>i(parseInt(g.target.value,10)),o,a,e.length===0?c(Q||(Q=l(['\n          <div class="text-gray-500 dark:text-gray-400">No logs found</div>\n        ']))):e.map((g,r)=>c(Z||(Z=l(["\n          <div key=",' class="log-entry mb-1 last:mb-0">\n            <span class="text-gray-500 dark:text-gray-400">','</span>\n            <span class="mx-2">',"</span>\n            <span class=",">","</span>\n          </div>\n        "])),r,g.timestamp,he(g.level),"log-message ".concat(g.level==="error"?"text-red-600 dark:text-red-400":""),g.message)))}function P(e,t=1){if(e===0)return"0 Bytes";const s=1024,n=t<0?0:t,i=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],o=Math.floor(Math.log(e)/Math.log(s));return parseFloat((e/Math.pow(s,o)).toFixed(n))+" "+i[o]}function $e(e){const t=Math.floor(e/86400),s=Math.floor(e%86400/3600),n=Math.floor(e%3600/60),i=Math.floor(e%60);let o="";return t>0&&(o+="".concat(t,"d ")),(s>0||t>0)&&(o+="".concat(s,"h ")),(n>0||s>0||t>0)&&(o+="".concat(n,"m ")),o+="".concat(i,"s"),o}function ke(e,t){if(String(t||"").toLowerCase()==="debug")return!0;let s=2,n=2;const i=String(e||"").toLowerCase(),o=String(t||"").toLowerCase();return i==="error"?s=0:i==="warning"||i==="warn"?s=1:i==="info"?s=2:i==="debug"&&(s=3),o==="error"?n=0:o==="warning"||o==="warn"?n=1:o==="info"?n=2:o==="debug"&&(n=3),s<=n}function Se({logLevel:e,logCount:t,onLogsReceived:s}){const[n,i]=h(!1),o=U(null),a=U(null);v(()=>{const r=localStorage.getItem("lastLogTimestamp");r&&(console.log("Loaded last log timestamp from localStorage:",r),a.current=r)},[]);const g=()=>{if(!window.wsClient){console.log("WebSocket client not available, will retry on next poll");return}if(!window.wsClient.isConnected()){console.log("WebSocket not connected, attempting to connect"),window.wsClient.connect();return}if(!document.getElementById("system-page")){console.log("Not on system page, skipping log fetch");return}console.log("Fetching logs via WebSocket with level: debug (to get all logs, will filter on frontend)");const r={level:"debug",count:t};a.current&&(r.last_timestamp=a.current),window.wsClient.getClientId&&(r.client_id=window.wsClient.getClientId()),console.log("Sending fetch request with payload:",r);try{window.wsClient.send("fetch","system/logs",r)?console.log("Fetch request sent successfully"):console.warn("Failed to send fetch request, will retry on next poll")}catch(d){console.error("Error sending fetch request:",d)}};return v(()=>{if(window.wsClient)return r();{console.log("WebSocket client not available, will check again later");const d=setInterval(()=>{window.wsClient&&(console.log("WebSocket client now available, setting up handlers"),clearInterval(d),r())},1e3);return()=>{clearInterval(d)}}function r(){console.log("Setting up WebSocket handlers for logs");const d=m=>{if(console.log("Received logs update via WebSocket:",m),!document.getElementById("system-page")){console.log("Not on system page, ignoring log update");return}if(m&&m.logs&&Array.isArray(m.logs)){const p=m.logs.map(f=>{const b={timestamp:f.timestamp||"Unknown",level:f.level||"info",message:f.message||""};return b.level&&(b.level=b.level.toLowerCase()),b.level==="warn"&&(b.level="warning"),b});m.latest_timestamp&&(a.current=m.latest_timestamp,localStorage.setItem("lastLogTimestamp",m.latest_timestamp),console.log("Updated and saved last log timestamp:",m.latest_timestamp)),p.length>0?(console.log("Received ".concat(p.length," logs via WebSocket")),p.sort((f,b)=>new Date(b.timestamp)-new Date(f.timestamp)),s(p)):console.log("No logs received via WebSocket")}};return console.log("Registering handler for system/logs via WebSocket (once on mount)"),window.wsClient.on("update","system/logs",d),()=>{console.log("Unregistering handler for system/logs via WebSocket (component unmounting)"),window.wsClient.off("update","system/logs"),o.current&&(clearInterval(o.current),o.current=null)}}},[]),v(()=>{if(n&&!o.current){if(console.log("Starting log polling"),window.wsClient&&typeof window.wsClient.subscribe=="function"){console.log("Subscribing to system/logs via WebSocket for polling");const r={level:"debug",...a.current?{since:a.current}:{}};window.wsClient.subscribe("system/logs",r),console.log("Subscribed to system/logs with level: debug and last_timestamp: ".concat(a.current||"NULL"))}g(),console.log("Setting up polling interval for logs (every 5 seconds)"),o.current=setInterval(()=>{console.log("Polling interval triggered, fetching logs..."),g()},5e3)}else!n&&o.current&&(console.log("Stopping log polling"),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket"),window.wsClient.unsubscribe("system/logs")),clearInterval(o.current),o.current=null);return()=>{o.current&&(clearInterval(o.current),o.current=null),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket on cleanup"),window.wsClient.unsubscribe("system/logs"))}},[n,e]),v(()=>{const r=()=>{console.log("Received refresh-logs-websocket event, triggering fetch"),g()};return window.addEventListener("refresh-logs-websocket",r),()=>{window.removeEventListener("refresh-logs-websocket",r)}},[]),v(()=>(console.log("LogsPoller: Setting up polling with log level ".concat(e)),i(!1),setTimeout(()=>{i(!0)},100),()=>{console.log("LogsPoller: Cleaning up on unmount"),i(!1)}),[e,t]),null}var ee;function Ce(){const[e,t]=h({version:"",uptime:"",cpu:{model:"",cores:0,usage:0},memory:{total:0,used:0,free:0},go2rtcMemory:{total:0,used:0,free:0},systemMemory:{total:0,used:0,free:0},disk:{total:0,used:0,free:0},systemDisk:{total:0,used:0,free:0},network:{interfaces:[]},streams:{active:0,total:0},recordings:{count:0,size:0}}),[s,n]=h([]),[i,o]=h("debug"),a=U("debug"),[g,r]=h(100),[d,m]=h(!1),[p,f]=h(!1),[b,x]=h(!1),{data:w,isLoading:$,error:L,refetch:M}=ue(["systemInfo"],"/api/system/info",{timeout:15e3,retries:2,retryDelay:1e3}),k=E({mutationKey:["clearLogs"],mutationFn:async()=>await C("/api/system/logs/clear",{method:"POST",timeout:1e4,retries:1}),onSuccess:()=>{y("Logs cleared successfully"),n([])},onError:u=>{console.error("Error clearing logs:",u),y("Error clearing logs: ".concat(u.message))}}),S=u=>{console.log("SystemView: Setting log level from ".concat(i," to ").concat(u)),o(u),a.current=u},se=u=>{console.log("SystemView received new logs:",u.length);const le=a.current,de=u.filter(ce=>ke(ce.level,le));n(de)};v(()=>{w&&x(!0)},[w]);const oe=E({mutationFn:async()=>await C("/api/system/restart",{method:"POST",timeout:3e4,retries:0}),onMutate:()=>{m(!0),y("Restarting system...")},onSuccess:()=>{y("System is restarting. Please wait..."),setTimeout(()=>{window.location.reload()},1e4)},onError:u=>{console.error("Error restarting system:",u),y("Error restarting system: ".concat(u.message)),m(!1)}}),ne=E({mutationFn:async()=>await C("/api/system/shutdown",{method:"POST",timeout:3e4,retries:0}),onMutate:()=>{f(!0),y("Shutting down system...")},onSuccess:()=>{y("System is shutting down. You will need to manually restart it.")},onError:u=>{console.error("Error shutting down system:",u),y("Error shutting down system: ".concat(u.message)),f(!1)}});v(()=>{w&&t(w)},[w]),v(()=>()=>{window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Cleaning up any WebSocket subscriptions on unmount"),window.wsClient.unsubscribe("system/logs"))},[]);const re=()=>{confirm("Are you sure you want to clear all logs?")&&k.mutate()},ie=()=>{confirm("Are you sure you want to restart the system?")&&oe.mutate()},ae=()=>{confirm("Are you sure you want to shut down the system?")&&ne.mutate()};return v(()=>{window.wsClient?console.log("WebSocket client is available in SystemView"):console.log("WebSocket client not available in SystemView, it should be initialized in preact-app.js")},[]),c(ee||(ee=l(['\n    <section id="system-page" class="page">\n      <',"\n        restartSystem=","\n        shutdownSystem=","\n        isRestarting=","\n        isShuttingDown=","\n      />\n\n      <","\n        isLoading=","\n        hasData=",'\n        loadingMessage="Loading system information..."\n        emptyMessage="System information not available. Please try again later."\n      >\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," formatUptime="," />\n          <"," systemInfo="," formatBytes=",' />\n        </div>\n\n        <div class="grid grid-cols-1 gap-4 mb-4">\n          <'," systemInfo="," formatBytes=",' />\n        </div>\n\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," />\n          <"," systemInfo="," formatBytes="," />\n        </div>\n\n        <","\n          logs=","\n          logLevel=","\n          logCount=","\n          setLogLevel=","\n          setLogCount=","\n          loadLogs=","\n          clearLogs=","\n        />\n\n        <","\n          logLevel=","\n          logCount=","\n          onLogsReceived=","\n        />\n      <//>\n    </section>\n  "])),be,ie,ae,d,p,me,$,b,fe,e,$e,pe,e,P,ve,e,P,we,e,ye,e,P,xe,s,i,g,S,r,()=>{if(window.wsClient&&window.wsClient.isConnected()){console.log("Manually triggering WebSocket fetch for logs");const u=new CustomEvent("refresh-logs-websocket");window.dispatchEvent(u)}},re,Se,i,g,se)}var te;function Pe(){const e=document.getElementById("main-content");e&&D(async()=>{const{render:t}=await import("./preact-app-BjdFE8cp.js").then(s=>s.p);return{render:t}},__vite__mapDeps([0,1]),import.meta.url).then(({render:t})=>{D(async()=>{const{QueryClientProvider:s,queryClient:n}=await import("./preact-app-BjdFE8cp.js").then(i=>i.n);return{QueryClientProvider:s,queryClient:n}},__vite__mapDeps([0,1]),import.meta.url).then(({QueryClientProvider:s,queryClient:n})=>{t(c(te||(te=l(["<"," client=","><"," /></",">"])),s,n,Ce,s),e),setTimeout(()=>{const i=new CustomEvent("refresh-system-info");window.dispatchEvent(i)},100)})})}window.addEventListener("load",()=>{window.addEventListener("refresh-system-info",async()=>{try{await C("/api/system/info",{timeout:45e3,retries:1,retryDelay:1e3}),console.log("System info refreshed")}catch(e){console.error("Error refreshing system info:",e)}})});export{Ce as SystemView,Pe as loadSystemView};
//# sourceMappingURL=SystemView-DinS8Fu3.js.map
