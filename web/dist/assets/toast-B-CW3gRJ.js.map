{"version":3,"file":"toast-B-CW3gRJ.js","sources":["../../js/components/preact/toast.js"],"sourcesContent":["/**\n * LightNVR Toast Notification System\n * Simple, direct DOM-based toast notifications\n */\n\n/**\n * Create a toast directly in the DOM\n * @param {string} message - Message to display\n * @param {string} type - Toast type ('success', 'error', 'warning', 'info')\n * @param {number} duration - Duration in milliseconds\n */\nexport function createDirectToast(message, type = 'info', duration = 4000) {\n  // Ensure message is a string and handle undefined/null values\n  const safeMessage = message !== undefined && message !== null ? String(message) : 'Operation completed';\n\n  console.log('Creating direct DOM toast:', safeMessage);\n\n  // Get or create container\n  let container = document.getElementById('direct-toast-container');\n  if (!container) {\n    container = document.createElement('div');\n    container.id = 'direct-toast-container';\n    container.style.position = 'fixed';\n    container.style.top = '20px';\n    container.style.left = '50%';\n    container.style.transform = 'translateX(-50%)';\n    container.style.zIndex = '10000';\n    container.style.display = 'flex';\n    container.style.flexDirection = 'column';\n    container.style.alignItems = 'center';\n    document.body.appendChild(container);\n    console.log('Created direct toast container');\n  }\n\n  // Create toast element\n  const toast = document.createElement('div');\n  toast.textContent = safeMessage;\n  toast.style.padding = '10px 15px';\n  toast.style.borderRadius = '4px';\n  toast.style.marginBottom = '10px';\n  toast.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';\n  toast.style.minWidth = '250px';\n  toast.style.textAlign = 'center';\n  toast.style.color = 'white';\n\n  // Set color based on type\n  switch (type) {\n    case 'success':\n      toast.style.backgroundColor = '#10b981'; // green-500\n      break;\n    case 'error':\n      toast.style.backgroundColor = '#ef4444'; // red-500\n      break;\n    case 'warning':\n      toast.style.backgroundColor = '#f59e0b'; // yellow-500\n      break;\n    default:\n      toast.style.backgroundColor = '#3b82f6'; // blue-500\n      break;\n  }\n\n  // Add to container\n  container.appendChild(toast);\n  console.log('Added toast to direct container');\n\n  // Remove after specified duration\n  setTimeout(() => {\n    if (container.contains(toast)) {\n      container.removeChild(toast);\n      console.log('Removed direct toast');\n    }\n\n    // Remove container if empty\n    if (container.children.length === 0) {\n      document.body.removeChild(container);\n      console.log('Removed direct toast container');\n    }\n  }, duration);\n}\n\n/**\n * Show a success toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showSuccessToast(message, duration = 4000) {\n  createDirectToast(message, 'success', duration);\n}\n\n/**\n * Show an error toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showErrorToast(message, duration = 4000) {\n  createDirectToast(message, 'error', duration);\n}\n\n/**\n * Show a warning toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showWarningToast(message, duration = 4000) {\n  createDirectToast(message, 'warning', duration);\n}\n\n/**\n * Show an info toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showInfoToast(message, duration = 4000) {\n  createDirectToast(message, 'info', duration);\n}\n\n/**\n * Generic function to show a toast notification\n * @param {string} message - Message to display\n * @param {string} type - Toast type ('success', 'error', 'warning', 'info')\n * @param {number} duration - Duration in milliseconds\n */\nexport function showToast(message, type = 'info', duration = 4000) {\n  createDirectToast(message, type, duration);\n}\n\n/**\n * For backward compatibility with the old showStatusMessage function\n * @param {string} message - Message to display\n * @param {string} type - Message type ('success', 'error', 'warning', 'info')\n * @param {number} duration - Duration in milliseconds\n */\nexport function showStatusMessage(message, type = 'info', duration = 4000) {\n  // Map type strings to the new format\n  let toastType = 'info';\n\n  if (type === 'success') {\n    toastType = 'success';\n  } else if (type === 'error') {\n    toastType = 'error';\n  } else if (type === 'warning') {\n    toastType = 'warning';\n  }\n\n  createDirectToast(message, toastType, duration);\n}\n\n/**\n * Initialize the toast system\n * @param {boolean} showInitMessage - Whether to show an initialization message\n */\nexport function initToastContainer(showInitMessage = false) {\n  console.log('Initializing simple toast system...');\n\n  // Only show initialization message if explicitly requested\n  if (showInitMessage) {\n    setTimeout(() => {\n      createDirectToast('Toast system initialized', 'info', 4000);\n    }, 500);\n  }\n}\n\n// Export for global use\nif (typeof window !== 'undefined') {\n  // Make toast functions available globally\n  window.showSuccessToast = showSuccessToast;\n  window.showErrorToast = showErrorToast;\n  window.showWarningToast = showWarningToast;\n  window.showInfoToast = showInfoToast;\n  window.showToast = showToast;\n  window.showStatusMessage = showStatusMessage;\n  window.createDirectToast = createDirectToast;\n\n  // Log for debugging\n  console.log('Toast functions exported to window object');\n\n  // Add a test function to the window object\n  window.testToast = (type = 'info') => {\n    const message = `Test ${type} toast at ${new Date().toLocaleTimeString()}`;\n    console.log(`Triggering test toast: ${message}`);\n    createDirectToast(message, type);\n    console.log(`Test toast triggered: ${message}`);\n    return 'Toast triggered';\n  };\n}\n"],"names":["createDirectToast","message","type","duration","safeMessage","container","toast","showSuccessToast","showErrorToast","showWarningToast","showInfoToast","showToast","showStatusMessage","toastType","initToastContainer","showInitMessage"],"mappings":"AAWO,SAASA,EAAkBC,EAASC,EAAO,OAAQC,EAAW,IAAM,CAEzE,MAAMC,EAAuCH,GAAY,KAAO,OAAOA,CAAO,EAAI,sBAElF,QAAQ,IAAI,6BAA8BG,CAAW,EAGrD,IAAIC,EAAY,SAAS,eAAe,wBAAwB,EAC3DA,IACHA,EAAY,SAAS,cAAc,KAAK,EACxCA,EAAU,GAAK,yBACfA,EAAU,MAAM,SAAW,QAC3BA,EAAU,MAAM,IAAM,OACtBA,EAAU,MAAM,KAAO,MACvBA,EAAU,MAAM,UAAY,mBAC5BA,EAAU,MAAM,OAAS,QACzBA,EAAU,MAAM,QAAU,OAC1BA,EAAU,MAAM,cAAgB,SAChCA,EAAU,MAAM,WAAa,SAC7B,SAAS,KAAK,YAAYA,CAAS,EACnC,QAAQ,IAAI,gCAAgC,GAI9C,MAAMC,EAAQ,SAAS,cAAc,KAAK,EAW1C,OAVAA,EAAM,YAAcF,EACpBE,EAAM,MAAM,QAAU,YACtBA,EAAM,MAAM,aAAe,MAC3BA,EAAM,MAAM,aAAe,OAC3BA,EAAM,MAAM,UAAY,4BACxBA,EAAM,MAAM,SAAW,QACvBA,EAAM,MAAM,UAAY,SACxBA,EAAM,MAAM,MAAQ,QAGZJ,EAAI,CACV,IAAK,UACHI,EAAM,MAAM,gBAAkB,UAC9B,MACF,IAAK,QACHA,EAAM,MAAM,gBAAkB,UAC9B,MACF,IAAK,UACHA,EAAM,MAAM,gBAAkB,UAC9B,MACF,QACEA,EAAM,MAAM,gBAAkB,UAC9B,KACN,CAGED,EAAU,YAAYC,CAAK,EAC3B,QAAQ,IAAI,iCAAiC,EAG7C,WAAW,IAAM,CACXD,EAAU,SAASC,CAAK,IAC1BD,EAAU,YAAYC,CAAK,EAC3B,QAAQ,IAAI,sBAAsB,GAIhCD,EAAU,SAAS,SAAW,IAChC,SAAS,KAAK,YAAYA,CAAS,EACnC,QAAQ,IAAI,gCAAgC,EAE/C,EAAEF,CAAQ,CACb,CAOO,SAASI,EAAiBN,EAASE,EAAW,IAAM,CACzDH,EAAkBC,EAAS,UAAWE,CAAQ,CAChD,CAOO,SAASK,EAAeP,EAASE,EAAW,IAAM,CACvDH,EAAkBC,EAAS,QAASE,CAAQ,CAC9C,CAOO,SAASM,EAAiBR,EAASE,EAAW,IAAM,CACzDH,EAAkBC,EAAS,UAAWE,CAAQ,CAChD,CAOO,SAASO,EAAcT,EAASE,EAAW,IAAM,CACtDH,EAAkBC,EAAS,OAAQE,CAAQ,CAC7C,CAQO,SAASQ,EAAUV,EAASC,EAAO,OAAQC,EAAW,IAAM,CACjEH,EAAkBC,EAASC,EAAMC,CAAQ,CAC3C,CAQO,SAASS,EAAkBX,EAASC,EAAO,OAAQC,EAAW,IAAM,CAEzE,IAAIU,EAAY,OAEZX,IAAS,UACXW,EAAY,UACHX,IAAS,QAClBW,EAAY,QACHX,IAAS,YAClBW,EAAY,WAGdb,EAAkBC,EAASY,EAAWV,CAAQ,CAChD,CAMO,SAASW,EAAmBC,EAAkB,GAAO,CAC1D,QAAQ,IAAI,qCAAqC,EAG7CA,GACF,WAAW,IAAM,CACff,EAAkB,2BAA4B,OAAQ,GAAI,CAC3D,EAAE,GAAG,CAEV,CAGI,OAAO,OAAW,MAEpB,OAAO,iBAAmBO,EAC1B,OAAO,eAAiBC,EACxB,OAAO,iBAAmBC,EAC1B,OAAO,cAAgBC,EACvB,OAAO,UAAYC,EACnB,OAAO,kBAAoBC,EAC3B,OAAO,kBAAoBZ,EAG3B,QAAQ,IAAI,2CAA2C,EAGvD,OAAO,UAAY,CAACE,EAAO,SAAW,CACpC,MAAMD,EAAU,QAAQ,OAAAC,EAAI,cAAa,WAAI,KAAI,EAAG,mBAAkB,GACtE,eAAQ,IAAI,0BAA0B,OAAAD,EAAS,EAC/CD,EAAkBC,EAASC,CAAI,EAC/B,QAAQ,IAAI,yBAAyB,OAAAD,EAAS,EACvC,iBACR"}