const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./preact-app-C5B1IkQg.js","../css/preact-app.css"])))=>i.map(i=>d[i]);
var z=Object.freeze,he=Object.defineProperty;var a=(e,t)=>z(he(e,"raw",{value:z(t||e.slice())}));import{h as u,d as L,A as N,y as h,j as D,u as V,m as j,_ as T,c as S}from"./preact-app-C5B1IkQg.js";import{C as $e}from"./LoadingIndicator-BFWsqmO4.js";var O;function xe({restartSystem:e,shutdownSystem:t,isRestarting:s,isShuttingDown:o}){return u(O||(O=a(['\n    <div class="page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">\n      <h2 class="text-xl font-bold">System</h2>\n      <div class="controls space-x-2">\n        <button \n          id="restart-btn" \n          class="px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=",'\n        >\n          Restart\n        </button>\n        <button \n          id="shutdown-btn" \n          class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=","\n        >\n          Shutdown\n        </button>\n      </div>\n    </div>\n  "])),e,s||o,t,s||o)}var B;function ke({systemInfo:e,formatUptime:t}){var s,o,l,n;return u(B||(B=a(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">System Information</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Version:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Uptime:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Model:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Cores:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span class="font-medium">CPU Usage:</span>\n          <div class="w-32 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n          <span>","</span>\n        </div>\n      </div>\n    </div>\n  "])),e.version||"Unknown",e.uptime?t(e.uptime):"Unknown",((s=e.cpu)==null?void 0:s.model)||"Unknown",((o=e.cpu)==null?void 0:o.cores)||"Unknown","width: ".concat(((l=e.cpu)==null?void 0:l.usage)||0,"%"),(n=e.cpu)!=null&&n.usage?"".concat(e.cpu.usage.toFixed(1),"%"):"Unknown")}var q;function Se({systemInfo:e,formatBytes:t}){var g,f,w,p,y,$,m,v,C,_,b,E;const s=((g=e.memory)==null?void 0:g.used)||0,o=((f=e.go2rtcMemory)==null?void 0:f.used)||0,l=((w=e.memory)==null?void 0:w.total)||0,n=s+o,i=l?(n/l*100).toFixed(1):0,d=n?(s/n*100).toFixed(1):0,r=n?(o/n*100).toFixed(1):0;return u(q||(q=a(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Memory & Storage</h3>\n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Process Memory:</span>\n            <div>\n              <span class="inline-block px-2 py-0.5 mr-1 text-xs rounded bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">\n                LightNVR: ','\n              </span>\n              <span class="inline-block px-2 py-0.5 text-xs rounded bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">\n                go2rtc: ','\n              </span>\n            </div>\n          </div>\n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total memory</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=','>\n              <div class="bg-blue-600 h-2.5" style=','></div>\n              <div class="bg-green-500 h-2.5" style=','></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Memory:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">LightNVR Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),t(s),t(o),t(n),t(l),i,"width: ".concat(i,"%"),"width: ".concat(d,"%"),"width: ".concat(r,"%"),(p=e.systemMemory)!=null&&p.used?t(e.systemMemory.used):"0",(y=e.systemMemory)!=null&&y.total?t(e.systemMemory.total):"0","width: ".concat(($=e.systemMemory)!=null&&$.total?(e.systemMemory.used/e.systemMemory.total*100).toFixed(1):0,"%"),(m=e.disk)!=null&&m.used?t(e.disk.used):"0",(v=e.disk)!=null&&v.total?t(e.disk.total):"0","width: ".concat((C=e.disk)!=null&&C.total?(e.disk.used/e.disk.total*100).toFixed(1):0,"%"),(_=e.systemDisk)!=null&&_.used?t(e.systemDisk.used):"0",(b=e.systemDisk)!=null&&b.total?t(e.systemDisk.total):"0","width: ".concat((E=e.systemDisk)!=null&&E.total?(e.systemDisk.used/e.systemDisk.total*100).toFixed(1):0,"%"))}var K,G,H,I,Y;function Le({systemInfo:e,formatBytes:t}){var d;if(!e.streamStorage||!Array.isArray(e.streamStorage)||e.streamStorage.length===0)return u(K||(K=a(['\n      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n        <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n        <div class="text-gray-500 dark:text-gray-400 text-center py-4">\n          No stream storage information available\n        </div>\n      </div>\n    '])));const s=e.streamStorage.reduce((r,g)=>r+g.size,0),o=((d=e.disk)==null?void 0:d.total)||0,l=o?(s/o*100).toFixed(1):0,n=e.streamStorage.map(r=>({name:r.name,size:r.size,count:r.count,slicePercent:s?(r.size/s*100).toFixed(1):0}));n.sort((r,g)=>g.size-r.size);const i=["bg-blue-600","bg-green-500","bg-yellow-500","bg-red-500","bg-purple-500","bg-pink-500","bg-indigo-500","bg-teal-500"];return u(Y||(Y=a(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n      \n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Storage per Stream:</span>\n            <div class="flex flex-wrap justify-end gap-1">\n              ','\n            </div>\n          </div>\n          \n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total storage</span>\n          </div>\n          \n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=',">\n              ",'\n            </div>\n          </div>\n          \n          <div class="mt-4">\n            <h4 class="font-medium mb-2">Stream Details:</h4>\n            <div class="grid grid-cols-1 md:grid-cols-2 gap-2">\n              ',"\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),n.map((r,g)=>u(G||(G=a(['\n                <span class="inline-block px-2 py-0.5 text-xs rounded '," ",'">\n                  ',": ","\n                </span>\n              "])),i[g%i.length].replace("bg-","bg-opacity-20 bg-"),i[g%i.length].replace("bg-","text-"),r.name,t(r.size))),t(s),t(o),l,"width: ".concat(l,"%"),n.map((r,g)=>u(H||(H=a(['\n                <div class="',' h-2.5" style=',"></div>\n              "])),i[g%i.length],"width: ".concat(r.slicePercent,"%"))),n.map((r,g)=>u(I||(I=a(['\n                <a href="recordings.html?stream=','" \n                   class="flex items-center p-2 rounded bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors cursor-pointer">\n                  <div class="w-3 h-3 rounded-full mr-2 ','"></div>\n                  <div>\n                    <div class="font-medium">','</div>\n                    <div class="text-xs text-gray-500 dark:text-gray-400">\n                      '," (","%) â€¢ "," recordings\n                    </div>\n                  </div>\n                </a>\n              "])),encodeURIComponent(r.name),i[g%i.length],r.name,t(r.size),r.slicePercent,r.count)))}var J,Q,Z;function Ce({systemInfo:e}){var t,s;return u(Z||(Z=a(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Network Interfaces</h3>\n      <div class="space-y-2">\n        ',"\n      </div>\n    </div>\n  "])),(s=(t=e.network)==null?void 0:t.interfaces)!=null&&s.length?e.network.interfaces.map(o=>u(J||(J=a(["\n          <div key=",' class="mb-2 pb-2 border-b border-gray-100 dark:border-gray-700 last:border-0">\n            <div class="flex justify-between">\n              <span class="font-medium">',":</span>\n              <span>",'</span>\n            </div>\n            <div class="text-sm text-gray-500 dark:text-gray-400">\n              MAC: '," | ","\n            </div>\n          </div>\n        "])),o.name,o.name,o.address||"No IP",o.mac||"Unknown",o.up?"Up":"Down")):u(Q||(Q=a(['<div class="text-gray-500 dark:text-gray-400">No network interfaces found</div>']))))}var X;function Me({systemInfo:e,formatBytes:t}){var s,o,l,n;return u(X||(X=a(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Streams & Recordings</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Active Streams:</span>\n          <span>'," / ",'</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings Size:</span>\n          <span>',"</span>\n        </div>\n      </div>\n    </div>\n  "])),((s=e.streams)==null?void 0:s.active)||0,((o=e.streams)==null?void 0:o.total)||0,((l=e.recordings)==null?void 0:l.count)||0,(n=e.recordings)!=null&&n.size?t(e.recordings.size):"0")}var ee,te,se,oe,ne,re;function Ue(e){if(e==null)return u(ee||(ee=a(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">UNKNOWN</span>'])));const t=String(e).toLowerCase().trim();if(t==="error"||t==="err")return u(te||(te=a(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">ERROR</span>'])));if(t==="warning"||t==="warn")return u(se||(se=a(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">WARN</span>'])));if(t==="info")return u(oe||(oe=a(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">INFO</span>'])));if(t==="debug"||t==="dbg")return u(ne||(ne=a(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">DEBUG</span>'])));{const s=String(e).toUpperCase();return u(re||(re=a(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">',"</span>"])),s)}}var le,ie,ae;function De({logs:e,logLevel:t,logCount:s,setLogLevel:o,setLogCount:l,loadLogs:n,clearLogs:i}){return u(ae||(ae=a(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 mb-4">\n      <div class="flex justify-between items-center mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">\n        <h3 class="text-lg font-semibold">System Logs</h3>\n        <div class="flex space-x-2">\n          <select \n            id="log-level" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="error">Error</option>\n            <option value="warning">Warning</option>\n            <option value="info">Info</option>\n            <option value="debug">Debug</option>\n          </select>\n          <select \n            id="log-count" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="50">50 lines</option>\n            <option value="100">100 lines</option>\n            <option value="200">200 lines</option>\n            <option value="500">500 lines</option>\n          </select>\n          <button \n            id="refresh-logs-btn" \n            class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Refresh\n          </button>\n          <button \n            id="clear-logs-btn" \n            class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Clear Logs\n          </button>\n        </div>\n      </div>\n      <div class="logs-container bg-gray-100 dark:bg-gray-900 rounded p-4 overflow-auto max-h-96 font-mono text-sm">\n        ',"\n      </div>\n    </div>\n  "])),t,d=>{const r=d.target.value;console.log("LogsView: Log level changed from ".concat(t," to ").concat(r)),o(r)},s,d=>l(parseInt(d.target.value,10)),n,i,e.length===0?u(le||(le=a(['\n          <div class="text-gray-500 dark:text-gray-400">No logs found</div>\n        ']))):e.map((d,r)=>u(ie||(ie=a(["\n          <div key=",' class="log-entry mb-1 last:mb-0">\n            <span class="text-gray-500 dark:text-gray-400">','</span>\n            <span class="mx-2">',"</span>\n            <span class=",">","</span>\n          </div>\n        "])),r,d.timestamp,Ue(d.level),"log-message ".concat(d.level==="error"?"text-red-600 dark:text-red-400":""),d.message)))}function F(e,t=1){if(e===0)return"0 Bytes";const s=1024,o=t<0?0:t,l=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],n=Math.floor(Math.log(e)/Math.log(s));return parseFloat((e/Math.pow(s,n)).toFixed(o))+" "+l[n]}function Ee(e){const t=Math.floor(e/86400),s=Math.floor(e%86400/3600),o=Math.floor(e%3600/60),l=Math.floor(e%60);let n="";return t>0&&(n+="".concat(t,"d ")),(s>0||t>0)&&(n+="".concat(s,"h ")),(o>0||s>0||t>0)&&(n+="".concat(o,"m ")),n+="".concat(l,"s"),n}function R(e,t){if(String(t||"").toLowerCase()==="debug")return!0;let s=2,o=2;const l=String(e||"").toLowerCase(),n=String(t||"").toLowerCase();return l==="error"?s=0:l==="warning"||l==="warn"?s=1:l==="info"?s=2:l==="debug"&&(s=3),n==="error"?o=0:n==="warning"||n==="warn"?o=1:n==="info"?o=2:n==="debug"&&(o=3),s<=o}function Pe({logLevel:e,logCount:t,onLogsReceived:s}){const[o,l]=L(!1),n=N(null),i=N(null);h(()=>{const r=localStorage.getItem("lastLogTimestamp");r&&(console.log("Loaded last log timestamp from localStorage:",r),i.current=r)},[]);const d=()=>{if(!window.wsClient){console.log("WebSocket client not available, will retry on next poll");return}if(!window.wsClient.isConnected()){console.log("WebSocket not connected, attempting to connect"),window.wsClient.connect();return}if(!document.getElementById("system-page")){console.log("Not on system page, skipping log fetch");return}console.log("Fetching logs via WebSocket with level: debug (to get all logs, will filter on frontend)");const r={level:"debug",count:t};i.current&&(r.last_timestamp=i.current),window.wsClient.getClientId&&(r.client_id=window.wsClient.getClientId()),console.log("Sending fetch request with payload:",r);try{window.wsClient.send("fetch","system/logs",r)?console.log("Fetch request sent successfully"):console.warn("Failed to send fetch request, will retry on next poll")}catch(g){console.error("Error sending fetch request:",g)}};return h(()=>{if(window.wsClient)return r();{console.log("WebSocket client not available, will check again later");const g=setInterval(()=>{window.wsClient&&(console.log("WebSocket client now available, setting up handlers"),clearInterval(g),r())},1e3);return()=>{clearInterval(g)}}function r(){console.log("Setting up WebSocket handlers for logs");const g=f=>{if(console.log("Received logs update via WebSocket:",f),!document.getElementById("system-page")){console.log("Not on system page, ignoring log update");return}if(f&&f.logs&&Array.isArray(f.logs)){const w=f.logs.map(p=>{const y={timestamp:p.timestamp||"Unknown",level:p.level||"info",message:p.message||""};return y.level&&(y.level=y.level.toLowerCase()),y.level==="warn"&&(y.level="warning"),y});f.latest_timestamp&&(i.current=f.latest_timestamp,localStorage.setItem("lastLogTimestamp",f.latest_timestamp),console.log("Updated and saved last log timestamp:",f.latest_timestamp)),w.length>0?(console.log("Received ".concat(w.length," logs via WebSocket")),D("/api/system/logs?level=debug&count=100",{timeout:15e3,retries:1,retryDelay:1e3}).then(p=>{if(p.logs&&Array.isArray(p.logs)){const $=[...p.logs.map(m=>{const v={timestamp:m.timestamp||"Unknown",level:(m.level||"info").toLowerCase(),message:m.message||""};return v.level==="warn"&&(v.level="warning"),v})];w.forEach(m=>{$.some(C=>C.timestamp===m.timestamp&&C.message===m.message)||$.push(m)}),$.sort((m,v)=>new Date(v.timestamp)-new Date(m.timestamp)),s($)}else s(w)}).catch(p=>{console.error("Error fetching existing logs:",p),s(w)})):console.log("No logs received via WebSocket")}};return console.log("Registering handler for system/logs via WebSocket (once on mount)"),window.wsClient.on("update","system/logs",g),()=>{console.log("Unregistering handler for system/logs via WebSocket (component unmounting)"),window.wsClient.off("update","system/logs"),n.current&&(clearInterval(n.current),n.current=null)}}},[]),h(()=>{if(o&&!n.current){if(console.log("Starting log polling"),window.wsClient&&typeof window.wsClient.subscribe=="function"){console.log("Subscribing to system/logs via WebSocket for polling");const r={level:"debug",...i.current?{since:i.current}:{}};window.wsClient.subscribe("system/logs",r),console.log("Subscribed to system/logs with level: debug and last_timestamp: ".concat(i.current||"NULL"))}d(),console.log("Setting up polling interval for logs (every 5 seconds)"),n.current=setInterval(()=>{console.log("Polling interval triggered, fetching logs..."),d()},5e3)}else!o&&n.current&&(console.log("Stopping log polling"),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket"),window.wsClient.unsubscribe("system/logs")),clearInterval(n.current),n.current=null);return()=>{n.current&&(clearInterval(n.current),n.current=null),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket on cleanup"),window.wsClient.unsubscribe("system/logs"))}},[o,e]),h(()=>(console.log("LogsPoller: Setting up polling with log level ".concat(e)),l(!1),setTimeout(()=>{l(!0)},100),()=>{console.log("LogsPoller: Cleaning up on unmount"),l(!1)}),[e,t]),null}var de;function Re(){const[e,t]=L({version:"",uptime:"",cpu:{model:"",cores:0,usage:0},memory:{total:0,used:0,free:0},go2rtcMemory:{total:0,used:0,free:0},systemMemory:{total:0,used:0,free:0},disk:{total:0,used:0,free:0},systemDisk:{total:0,used:0,free:0},network:{interfaces:[]},streams:{active:0,total:0},recordings:{count:0,size:0}}),[s,o]=L([]),[l,n]=L("debug"),i=N("debug"),[d,r]=L(100),[g,f]=L(!1),[w,p]=L(!1),[y,$]=L(!1),{data:m,isLoading:v,error:C,refetch:_}=V(["systemInfo"],"/api/system/info",{timeout:15e3,retries:2,retryDelay:1e3}),{data:b,refetch:E}=V(["logs",d],"/api/system/logs?level=debug&count=".concat(d),{timeout:2e4,retries:1,retryDelay:1e3}),ce=j({mutationKey:["clearLogs"],mutationFn:async()=>await D("/api/system/logs/clear",{method:"POST",timeout:1e4,retries:1}),onSuccess:()=>{S("Logs cleared successfully"),o([])},onError:c=>{console.error("Error clearing logs:",c),S("Error clearing logs: ".concat(c.message))}}),ue=c=>{console.log("SystemView: Setting log level from ".concat(l," to ").concat(c)),n(c),i.current=c},me=c=>{console.log("SystemView received new logs:",c.length);const x=i.current,k=c.filter(M=>R(M.level,x));o(k)};h(()=>{m&&$(!0)},[m]);const be=j({mutationFn:async()=>await D("/api/system/restart",{method:"POST",timeout:3e4,retries:0}),onMutate:()=>{f(!0),S("Restarting system...")},onSuccess:()=>{S("System is restarting. Please wait..."),setTimeout(()=>{window.location.reload()},1e4)},onError:c=>{console.error("Error restarting system:",c),S("Error restarting system: ".concat(c.message)),f(!1)}}),fe=j({mutationFn:async()=>await D("/api/system/shutdown",{method:"POST",timeout:3e4,retries:0}),onMutate:()=>{p(!0),S("Shutting down system...")},onSuccess:()=>{S("System is shutting down. You will need to manually restart it.")},onError:c=>{console.error("Error shutting down system:",c),S("Error shutting down system: ".concat(c.message)),p(!1)}});h(()=>{m&&t(m)},[m]),h(()=>{if(b&&b.logs&&Array.isArray(b.logs)){const c=i.current;if(b.logs.length>0&&typeof b.logs[0]=="object"&&b.logs[0].level){let x=b.logs.filter(k=>R(k.level,c));console.log("Filtered ".concat(b.logs.length," logs to ").concat(x.length," based on log level ").concat(c)),o(x)}else{const x=b.logs.map(M=>{let W="Unknown",P="debug",A=M;const we=/\[(.*?)\]\s*\[(.*?)\]\s*(.*)/,U=M.match(we);return U&&U.length>=4&&(W=U[1],P=U[2].toLowerCase(),A=U[3],P==="warn"&&(P="warning")),{timestamp:W,level:P,message:A}});let k=x.filter(M=>R(M.level,c));console.log("Filtered ".concat(x.length," parsed logs to ").concat(k.length," based on log level ").concat(c)),o(k)}}else o([])},[b]),h(()=>{if(console.log("SystemView: Log level changed to ".concat(l," or count changed to ").concat(d)),b&&b.logs&&Array.isArray(b.logs)){console.log("Filtering existing logs based on new log level");const c=i.current;console.log("Filtering existing logs using logLevelRef.current: ".concat(c)),o(x=>x.filter(k=>R(k.level,c)))}},[l,d]),h(()=>()=>{window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Cleaning up any WebSocket subscriptions on unmount"),window.wsClient.unsubscribe("system/logs"))},[]);const pe=()=>{confirm("Are you sure you want to clear all logs?")&&ce.mutate()},ye=()=>{confirm("Are you sure you want to restart the system?")&&be.mutate()},ve=()=>{confirm("Are you sure you want to shut down the system?")&&fe.mutate()};return h(()=>{window.wsClient?console.log("WebSocket client is available in SystemView"):console.log("WebSocket client not available in SystemView, it should be initialized in preact-app.js")},[]),u(de||(de=a(['\n    <section id="system-page" class="page">\n      <'," \n        restartSystem="," \n        shutdownSystem="," \n        isRestarting="," \n        isShuttingDown="," \n      />\n      \n      <","\n        isLoading=","\n        hasData=",'\n        loadingMessage="Loading system information..."\n        emptyMessage="System information not available. Please try again later."\n      >\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," formatUptime="," />\n          <"," systemInfo="," formatBytes=",' />\n        </div>\n        \n        <div class="grid grid-cols-1 gap-4 mb-4">\n          <'," systemInfo="," formatBytes=",' />\n        </div>\n        \n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," />\n          <"," systemInfo="," formatBytes="," />\n        </div>\n        \n        <"," \n          logs="," \n          logLevel="," \n          logCount="," \n          setLogLevel="," \n          setLogCount="," \n          loadLogs="," \n          clearLogs="," \n        />\n        \n        <","\n          logLevel=","\n          logCount=","\n          onLogsReceived=","\n        />\n      <//>\n    </section>\n  "])),xe,ye,ve,g,w,$e,v,y,ke,e,Ee,Se,e,F,Le,e,F,Ce,e,Me,e,F,De,s,l,d,ue,r,E,pe,Pe,l,d,me)}var ge;function Ne(){const e=document.getElementById("main-content");e&&T(async()=>{const{render:t}=await import("./preact-app-C5B1IkQg.js").then(s=>s.p);return{render:t}},__vite__mapDeps([0,1]),import.meta.url).then(({render:t})=>{T(async()=>{const{QueryClientProvider:s,queryClient:o}=await import("./preact-app-C5B1IkQg.js").then(l=>l.o);return{QueryClientProvider:s,queryClient:o}},__vite__mapDeps([0,1]),import.meta.url).then(({QueryClientProvider:s,queryClient:o})=>{t(u(ge||(ge=a(["<"," client=","><"," /></",">"])),s,o,Re,s),e),setTimeout(()=>{const l=new CustomEvent("refresh-system-info");window.dispatchEvent(l)},100)})})}window.addEventListener("load",()=>{window.addEventListener("refresh-system-info",async()=>{try{await D("/api/system/info",{timeout:15e3,retries:1,retryDelay:1e3}),console.log("System info refreshed")}catch(e){console.error("Error refreshing system info:",e)}})});export{Re as SystemView,Ne as loadSystemView};
//# sourceMappingURL=SystemView-Bk_Anlko.js.map
