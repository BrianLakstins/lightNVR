var V=Object.freeze,pe=Object.defineProperty;var M=(o,k)=>V(pe(o,"raw",{value:V(k||o.slice())}));import{d as w,y as _,h as H,c as R,A as z,g as he}from"./preact-app-FWUGqQo_.js";import{L as be}from"./LoadingIndicator-CiahmyRu.js";var X,q,O;function ve(){const[o,k]=w(!1),[a,b]=w(1);_(()=>{console.log("TimelineControls: Setting up subscription to timelineState");const m=i.subscribe(f=>{var v;console.log("TimelineControls: Received state update:",f),console.log("TimelineControls: Is playing:",f.isPlaying),console.log("TimelineControls: Zoom level:",f.zoomLevel),console.log("TimelineControls: Segments count:",((v=f.timelineSegments)==null?void 0:v.length)||0),k(f.isPlaying),b(f.zoomLevel)});return console.log("TimelineControls: Initial timelineState:",i),()=>m()},[]);const r=()=>{o?p():E()},p=()=>{i.setState({isPlaying:!1});const m=document.querySelector("#video-player video");m&&m.pause()},E=()=>{if(!i.timelineSegments||i.timelineSegments.length===0){R("No recordings to play","warning");return}let m=0,f=Number.MAX_SAFE_INTEGER;i.timelineSegments.forEach((l,d)=>{l.start_timestamp<f&&(f=l.start_timestamp,m=d)}),console.log("Starting from earliest segment (index ".concat(m,")")),i.setState({currentSegmentIndex:m,currentTime:i.timelineSegments[m].start_timestamp,isPlaying:!0,forceReload:!0});const v=i.timelineSegments[m],h=document.querySelector("#video-player video");h&&(console.log("Loading earliest segment video:",v),h.pause(),h.removeAttribute("src"),h.load(),h.src="/api/recordings/play/".concat(v.id,"?t=").concat(Date.now()),h.onloadedmetadata=()=>{h.currentTime=0,h.play().catch(l=>{console.error("Error playing video:",l),R("Error playing video: "+l.message,"error")})})},$=()=>{if(a<8){const m=a*2;i.setState({zoomLevel:m}),R("Zoomed in: ".concat(24/m," hours view"),"info")}},c=()=>{if(a>1){const m=a/2;i.setState({zoomLevel:m}),R("Zoomed out: ".concat(24/m," hours view"),"info")}};return H(O||(O=M(['\n    <div class="timeline-controls flex justify-between items-center mb-2">\n      <div class="flex items-center">\n        <button \n          id="play-button" \n          class="w-10 h-10 rounded-full bg-green-600 hover:bg-green-700 text-white flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-offset-1 transition-colors shadow-sm mr-2"\n          onClick=',"\n          title=",'\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            ','\n          </svg>\n        </button>\n        <span class="text-xs text-gray-600 dark:text-gray-300">Play from earliest recording</span>\n      </div>\n      \n      <div class="flex items-center gap-1">\n        <span class="text-xs text-gray-600 dark:text-gray-300 mr-1">Zoom:</span>\n        <button \n          id="zoom-out-button" \n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom Out (Show more time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n        <button \n          id="zoom-in-button" \n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom In (Show less time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  '])),r,o?"Pause":"Play from earliest recording",o?H(X||(X=M(['\n                <!-- Pause icon - two vertical bars -->\n                <rect x="6" y="6" width="4" height="12" rx="1" fill="white" />\n                <rect x="14" y="6" width="4" height="12" rx="1" fill="white" />\n              ']))):H(q||(q=M(['\n                <!-- Play icon - triangle -->\n                <path d="M8 5.14v14l11-7-11-7z" fill="white" />\n              ']))),c,a<=1,$,a>=8)}var W,Y,G,J,K,Q;function ye(){const[o,k]=w(0),[a,b]=w(24),[r,p]=w(1);_(()=>{console.log("TimelineRuler: Setting up subscription to timelineState");const $=i.subscribe(c=>{console.log("TimelineRuler: Received state update:",c),console.log("TimelineRuler: Zoom level:",c.zoomLevel);const m=24/c.zoomLevel;console.log("TimelineRuler: Hours per view:",m);let f=12;if(c.currentTime!==null){const l=new Date(c.currentTime*1e3);f=l.getHours()+l.getMinutes()/60+l.getSeconds()/3600}else if(c.timelineSegments&&c.timelineSegments.length>0){let l=24,d=0;c.timelineSegments.forEach(y=>{const t=new Date(y.start_timestamp*1e3),s=new Date(y.end_timestamp*1e3),e=t.getHours()+t.getMinutes()/60+t.getSeconds()/3600,n=s.getHours()+s.getMinutes()/60+s.getSeconds()/3600;l=Math.min(l,e),d=Math.max(d,n)}),f=(l+d)/2}let v=Math.max(0,f-m/2),h=Math.min(24,v+m);h===24&&m<24?(v=Math.max(0,24-m),h=24):v===0&&m<24&&(h=Math.min(24,m)),console.log("TimelineRuler: New hour range:",{newStartHour:v,newEndHour:h}),k(v),b(h),p(c.zoomLevel),(i.timelineStartHour!==v||i.timelineEndHour!==h)&&i.setState({timelineStartHour:v,timelineEndHour:h})});return()=>$()},[]);const E=()=>{const $=[];for(let c=Math.floor(o);c<=Math.ceil(a);c++)if(c>=0&&c<=24){const m=(c-o)/(a-o)*100;if($.push(H(W||(W=M(['\n          <div \n            key="tick-','" \n            class="absolute top-0 w-px h-5 bg-gray-500 dark:bg-gray-400" \n            style="left: ','%;"\n          ></div>\n        '])),c,m)),$.push(H(Y||(Y=M(['\n          <div \n            key="label-','" \n            class="absolute top-0 text-xs text-gray-600 dark:text-gray-300 transform -translate-x-1/2" \n            style="left: ','%;"\n          >\n            ',":00\n          </div>\n        "])),c,m,c)),c<24&&r>=2){const f=(c+.5-o)/(a-o)*100;if($.push(H(G||(G=M(['\n            <div \n              key="tick-','-30" \n              class="absolute top-2 w-px h-3 bg-gray-400 dark:bg-gray-500" \n              style="left: ','%;"\n            ></div>\n          '])),c,f)),r>=4){const v=(c+.25-o)/(a-o)*100,h=(c+.75-o)/(a-o)*100;$.push(H(J||(J=M(['\n              <div \n                key="tick-','-15" \n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500" \n                style="left: ','%;"\n              ></div>\n            '])),c,v)),$.push(H(K||(K=M(['\n              <div \n                key="tick-','-45" \n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500" \n                style="left: ','%;"\n              ></div>\n            '])),c,h))}}}return $};return H(Q||(Q=M(['\n    <div class="timeline-ruler relative w-full h-8 bg-gray-300 dark:bg-gray-800 border-b border-gray-400 dark:border-gray-600">\n      ','\n      <div class="absolute bottom-0 left-0 text-xs text-gray-500 px-1">\n        Zoom: ',"x ("," hours)\n      </div>\n    </div>\n  "])),E(),r,Math.round(24/r))}var ee,te,ne;function Se(){const[o,k]=w([]),[a,b]=w(0),[r,p]=w(24),[E,$]=w(-1),c=z(null),m=z(!1);_(()=>{console.log("TimelineSegments: Setting up subscription to timelineState");const l=i.subscribe(d=>{console.log("TimelineSegments: Received state update"),d.timelineSegments&&(console.log("TimelineSegments: Updating segments (".concat(d.timelineSegments.length,")")),k(d.timelineSegments)),b(d.timelineStartHour||0),p(d.timelineEndHour||24),$(d.currentSegmentIndex||-1)});return i.timelineSegments&&i.timelineSegments.length>0&&(console.log("TimelineSegments: Initial segments available (".concat(i.timelineSegments.length,")")),k(i.timelineSegments),$(i.currentSegmentIndex||0)),()=>l()},[]),_(()=>{const l=c.current;if(!l)return;const d=s=>{(s.target===l||s.target.classList.contains("timeline-clickable-area"))&&(m.current=!0,f(s),document.addEventListener("mousemove",y),document.addEventListener("mouseup",t))},y=s=>{m.current&&f(s)},t=()=>{m.current=!1,document.removeEventListener("mousemove",y),document.removeEventListener("mouseup",t)};return l.addEventListener("mousedown",d),()=>{l.removeEventListener("mousedown",d),document.removeEventListener("mousemove",y),document.removeEventListener("mouseup",t)}},[a,r,o]);const f=l=>{const d=c.current;if(!d)return;const y=d.getBoundingClientRect(),t=l.clientX-y.left,s=y.width,e=t/s,n=a+e*(r-a),g=new Date(i.selectedDate);g.setHours(Math.floor(n)),g.setMinutes(Math.floor(n%1*60)),g.setSeconds(Math.floor(n%1*60%1*60));const u=g.getTime()/1e3;let T=!1;for(let S=0;S<o.length;S++){const x=o[S];if(u>=x.start_timestamp&&u<=x.end_timestamp){console.log("TimelineSegments: Found segment ".concat(S," containing timestamp"));const P=u-x.start_timestamp;$(S),v(S,P),T=!0;break}}if(!T)if(o.length>0){console.log("TimelineSegments: No segment contains the timestamp, finding closest segment");let S=-1,x=1/0;for(let P=0;P<o.length;P++){const C=o[P],L=Math.abs(C.start_timestamp-u),D=Math.abs(C.end_timestamp-u),I=Math.min(L,D);I<x&&(x=I,S=P)}S>=0&&(console.log("TimelineSegments: Playing closest segment ".concat(S)),v(S))}else console.log("TimelineSegments: No segments found, just updating currentTime"),i.setState({currentTime:u,prevCurrentTime:i.currentTime})},v=(l,d=null)=>{if(console.log("TimelineSegments: playSegment(".concat(l,", ").concat(d,")")),l<0||l>=o.length){console.warn("TimelineSegments: Invalid segment index: ".concat(l));return}const y=o[l],t=d!==null?y.start_timestamp+d:y.start_timestamp;i.setState({isPlaying:!1,currentSegmentIndex:-1}),document.body.offsetHeight,setTimeout(()=>{i.setState({currentSegmentIndex:l,currentTime:t,isPlaying:!0,forceReload:!0}),setTimeout(()=>{const s=document.querySelector("#video-player video");s&&(s.pause(),s.removeAttribute("src"),s.load(),s.src="/api/recordings/play/".concat(y.id,"?t=").concat(Date.now()),s.onloadedmetadata=()=>{const e=d!==null?d:0;s.currentTime=e,s.play().catch(n=>console.error("Error playing video:",n))})},50)},50)},h=()=>{if(console.log("TimelineSegments: Rendering ".concat(o.length," segments")),!o||o.length===0)return null;const l=[],d=new Map;o.forEach((e,n)=>{const g=new Date(e.start_timestamp*1e3),u=new Date(e.end_timestamp*1e3),T=g.getHours()+g.getMinutes()/60+g.getSeconds()/3600,S=u.getHours()+u.getMinutes()/60+u.getSeconds()/3600;if(S<a||T>r)return;const x=Math.floor(T),P=Math.min(Math.ceil(S),24);for(let C=x;C<P;C++)C>=a&&C<=r&&(d.has(C)||d.set(C,[]),d.get(C).push(n))});const y=[];let t=null;[...o].sort((e,n)=>e.start_timestamp-n.start_timestamp).forEach((e,n)=>{t?e.start_timestamp-t.end_timestamp<=1?(t.end_timestamp=e.end_timestamp,t.originalIndices.push(n),e.has_detection&&(t.has_detection=!0)):(y.push(t),t={...e,originalIndices:[n]}):t={...e,originalIndices:[n]}}),t&&y.push(t),console.log("TimelineSegments: Merged ".concat(o.length," segments into ").concat(y.length," segments")),y.forEach((e,n)=>{const g=new Date(e.start_timestamp*1e3),u=new Date(e.end_timestamp*1e3),T=g.getHours()+g.getMinutes()/60+g.getSeconds()/3600,S=u.getHours()+u.getMinutes()/60+u.getSeconds()/3600;if(S<a||T>r)return;const x=Math.max(T,a),P=Math.min(S,r),C=(x-a)/(r-a)*100,L=(P-x)/(r-a)*100,D=Math.round(e.end_timestamp-e.start_timestamp),I="".concat(D,"s"),U=g.toLocaleTimeString(),N=u.toLocaleTimeString();l.push(H(ee||(ee=M(['\n        <div \n          key="segment-','"\n          class="timeline-segment absolute rounded-sm transition-all duration-200 ','"\n          style="left: ',"%; width: ","%; height: ",'%; top: 50%; transform: translateY(-50%);"\n          title="'," - "," (",')"\n        ></div>\n      '])),n,e.has_detection?"bg-red-500":"bg-blue-500",C,L,80,U,N,I))});for(let e=Math.floor(a);e<Math.ceil(r);e++)if(!d.has(e)){const n=(e-a)/(r-a)*100,g=100/(r-a);l.push(H(te||(te=M(['\n          <div \n            key="clickable-','"\n            class="timeline-clickable-area absolute h-full cursor-pointer"\n            style="left: ',"%; width: ",'%;"\n            data-hour=',"\n          ></div>\n        "])),e,n,g,e))}return l};return H(ne||(ne=M(['\n    <div \n      class="timeline-segments relative w-full h-16 pt-2"\n      ref=',"\n    >\n      ","\n    </div>\n  "])),c,h())}var oe;function we(){const[o,k]=w(0),[a,b]=w(!1),[r,p]=w(0),[E,$]=w(24),[c,m]=w(null),[f,v]=w(!1),h=z(null);z(null);const l=z(0);_(()=>{const t=i.subscribe(s=>{p(s.timelineStartHour||0),$(s.timelineEndHour||24),m(s.currentTime),y(s.currentTime),f||d(s.currentTime,s.timelineStartHour||0,s.timelineEndHour||24)});return()=>t()},[f]),_(()=>{const t=h.current;if(!t)return;const s=g=>{g.preventDefault(),g.stopPropagation(),l.current=g.clientX,v(!0),document.addEventListener("mousemove",e),document.addEventListener("mouseup",n)},e=g=>{if(!f)return;const u=t.parentElement;if(!u)return;const T=u.getBoundingClientRect(),S=Math.max(0,Math.min(g.clientX-T.left,T.width)),x=T.width,P=S/x*100;k(P);const C=E-r,L=r+P/100*C,D=new Date(i.selectedDate);D.setHours(Math.floor(L)),D.setMinutes(Math.floor(L%1*60)),D.setSeconds(Math.floor(L%1*60%1*60));const I=D.getTime()/1e3;y(I)},n=g=>{if(!f)return;const u=t.parentElement;if(!u)return;const T=u.getBoundingClientRect(),S=Math.max(0,Math.min(g.clientX-T.left,T.width)),x=T.width,P=S/x*100,C=E-r,L=r+P/100*C,D=new Date(i.selectedDate);D.setHours(Math.floor(L)),D.setMinutes(Math.floor(L%1*60)),D.setSeconds(Math.floor(L%1*60%1*60));const I=D.getTime()/1e3;v(!1),document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",n);const U=i.timelineSegments||[];let N=!1;for(let j=0;j<U.length;j++){const F=U[j];if(I>=F.start_timestamp&&I<=F.end_timestamp){I-F.start_timestamp,i.setState({currentSegmentIndex:j,currentTime:I,prevCurrentTime:i.currentTime,isPlaying:!0}),N=!0;break}}if(!N&&U.length>0){let j=0,F=1/0;for(let Z=0;Z<U.length;Z++){const B=U[Z],ue=Math.abs(B.start_timestamp-I),fe=Math.abs(B.end_timestamp-I),A=Math.min(ue,fe);A<F&&(F=A,j=Z)}i.setState({currentSegmentIndex:j,currentTime:U[j].start_timestamp,prevCurrentTime:i.currentTime,isPlaying:!0})}};return t.addEventListener("mousedown",s),()=>{t.removeEventListener("mousedown",s),document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",n)}},[h.current,r,E,f]);const d=(t,s,e)=>{if(t===null){b(!1);return}const n=new Date(t*1e3),g=n.getHours()+n.getMinutes()/60+n.getSeconds()/3600;if(g<s||g>e){b(!1);return}const u=(g-s)/(e-s)*100;k(u),b(!0)},y=t=>{if(t===null)return;const s=document.getElementById("time-display");if(!s)return;const e=new Date(t*1e3),n=e.getHours().toString().padStart(2,"0"),g=e.getMinutes().toString().padStart(2,"0"),u=e.getSeconds().toString().padStart(2,"0");s.textContent="".concat(n,":").concat(g,":").concat(u)};return _(()=>{setTimeout(()=>{i.currentTime&&(b(!0),d(i.currentTime,i.timelineStartHour||0,i.timelineEndHour||24))},500)},[]),H(oe||(oe=M(["\n    <div \n      ref=",'\n      class="timeline-cursor absolute top-0 h-full z-50 transition-all duration-100 cursor-ew-resize"\n      style="left: ',"%; display: ",'; pointer-events: auto; width: 7px; margin-left: -3.5px;"\n    >\n      <!-- Invisible wider clickable area -->\n      <div class="absolute top-0 bottom-0 left-0 w-full"></div>\n      \n      <!-- Skinnier needle with no middle chunk -->\n      <div class="absolute top-0 bottom-0 w-0.5 bg-orange-500 left-1/2 transform -translate-x-1/2 pointer-events-none"></div>\n      \n      <!-- Top handle (black) -->\n      <div class="absolute top-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 -translate-y-1/2 shadow-md pointer-events-none"></div>\n      \n      <!-- Bottom handle (black) -->\n      <div class="absolute bottom-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 translate-y-1/2 shadow-md pointer-events-none"></div>\n    </div>\n  '])),h,o,a?"block":"none")}var se,re;function xe(){const[o,k]=w(1),a=[.25,.5,1,1.5,2,4];_(()=>{console.log("SpeedControls: Setting up subscription to timelineState");const r=i.subscribe(p=>{console.log("SpeedControls: Received state update:",p),console.log("SpeedControls: Playback speed:",p.playbackSpeed),k(p.playbackSpeed)});return console.log("SpeedControls: Initial timelineState:",i),()=>r()},[]);const b=r=>{const p=document.querySelector("#video-player video");if(p){const E=p.playbackRate;p.playbackRate=r,console.log("Setting video playback rate from ".concat(E,"x to ").concat(r,"x"),p),console.log("Actual playback rate after setting: ".concat(p.playbackRate,"x")),setTimeout(()=>{p.playbackRate=r,console.log("Re-setting playback rate to ".concat(r,"x, actual rate: ").concat(p.playbackRate,"x"))},100)}else console.warn("Video player element not found");i.setState({playbackSpeed:r}),R("Playback speed: ".concat(r,"x"),"info")};return H(re||(re=M(['\n    <div class="mt-2 mb-4 p-2 border border-green-500 rounded-lg bg-white dark:bg-gray-800 shadow-sm">\n      <div class="flex flex-col items-center">\n        <div class="text-sm font-semibold mb-2 text-gray-700 dark:text-gray-300">Playback Speed</div>\n        \n        <div class="flex flex-wrap justify-center gap-1">\n          ','\n        </div>\n        \n        <div class="mt-1 text-xs font-medium text-green-600 dark:text-green-400">\n          Current: ',"× ","\n        </div>\n      </div>\n    </div>\n  "])),a.map(r=>H(se||(se=M(["\n            <button \n              key=","\n              class=","\n              data-speed=","\n              onClick=","\n            >\n              ","\n            </button>\n          "])),"speed-".concat(r),"speed-btn px-2 py-1 text-sm rounded-full ".concat(r===o?"bg-green-500 text-white":"bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"," \n                font-medium transition-all focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-opacity-50"),r,()=>b(r),r===1?"1× (Normal)":"".concat(r,"×"))),o,o===1?"(Normal)":"")}var ie;function ke(){const[o,k]=w(-1),[a,b]=w(!1),[r,p]=w([]),[E,$]=w(1),c=z(null),m=z(null),f=z(null);_(()=>{const t=i.subscribe(s=>{k(s.currentSegmentIndex),b(s.isPlaying),p(s.timelineSegments||[]),$(s.playbackSpeed),v(s)});return()=>t()},[]);const v=t=>{const s=c.current;if(!s||!t.timelineSegments||t.timelineSegments.length===0||t.currentSegmentIndex<0||t.currentSegmentIndex>=t.timelineSegments.length)return;const e=t.timelineSegments[t.currentSegmentIndex];if(!e)return;const n=f.current!==e.id,g=n,u=t.currentTime!==null&&t.currentTime>=e.start_timestamp?t.currentTime-e.start_timestamp:0,T=t.prevCurrentTime!==null&&Math.abs(t.currentTime-t.prevCurrentTime)>1;n&&(console.log("Segment changed from ".concat(f.current," to ").concat(e.id)),f.current=e.id),g?(console.log("Loading new segment ".concat(e.id," (segmentChanged: ").concat(n,")")),h(e,u,t.isPlaying)):T?(console.log("Seeking to ".concat(u,"s within current segment")),s.currentTime=u):t.isPlaying&&s.paused?s.play().catch(S=>{console.error("Error playing video:",S)}):!t.isPlaying&&!s.paused&&s.pause(),s.playbackRate!==t.playbackSpeed&&(s.playbackRate=t.playbackSpeed)},h=(t,s=0,e=!1)=>{const n=c.current;if(!n)return;console.log("Loading segment ".concat(t.id," at time ").concat(s,"s, autoplay: ").concat(e)),n.pause();const g="/api/recordings/play/".concat(t.id,"?t=").concat(Date.now()),u=()=>{console.log("Video metadata loaded"),n.currentTime=s,n.playbackRate=E,e&&n.play().catch(T=>{console.error("Error playing video:",T),R("Error playing video: "+T.message,"error")}),n.removeEventListener("loadedmetadata",u)};n.addEventListener("loadedmetadata",u),n.src=g,n.load()},l=()=>{if(console.log("Video ended"),o<r.length-1){const t=o+1;console.log("Playing next segment ".concat(t)),i.setState({currentSegmentIndex:t,currentTime:r[t].start_timestamp,isPlaying:!0,forceReload:!0})}else console.log("End of all segments"),i.setState({isPlaying:!1})},d=()=>{const t=c.current;if(!t||o<0||!r||r.length===0||o>=r.length)return;const s=r[o];if(!s)return;const e=s.start_timestamp+t.currentTime;y(e),i.setState({currentTime:e,prevCurrentTime:m.current}),m.current=e},y=t=>{if(t===null)return;const s=document.getElementById("time-display");if(!s)return;const e=new Date(t*1e3),n=e.getHours().toString().padStart(2,"0"),g=e.getMinutes().toString().padStart(2,"0"),u=e.getSeconds().toString().padStart(2,"0");s.textContent="".concat(n,":").concat(g,":").concat(u)};return H(ie||(ie=M(['\n    <div class="timeline-player-container mb-2" id="video-player">\n      <div class="relative w-full bg-black rounded-lg shadow-md" style="aspect-ratio: 16/9;">\n        <video\n            ref=','\n            class="w-full h-full object-contain"\n            controls\n            autoplay=',"\n            muted=","\n            playsInline\n            onended=","\n            ontimeupdate=",'\n        ></video>\n        \n        <!-- Add a message for invalid segments -->\n        <div \n          class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-70 text-white text-center p-4 ','"\n        >\n          <div>\n            <p class="mb-2">No valid segment selected.</p>\n            <p class="text-sm">Click on a segment in the timeline or use the play button to start playback.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Playback speed controls -->\n    <'," />\n  "])),c,!1,!1,l,d,o>=0&&r.length>0?"hidden":"",xe)}const i={streams:[],timelineSegments:[],selectedStream:null,selectedDate:null,isPlaying:!1,currentSegmentIndex:-1,zoomLevel:1,timelineStartHour:0,timelineEndHour:24,currentTime:null,prevCurrentTime:null,playbackSpeed:1,showOnlySegments:!0,forceReload:!1,listeners:new Set,setState(o){Object.assign(this,o),this.notifyListeners()},subscribe(o){return this.listeners.add(o),()=>this.listeners.delete(o)},notifyListeners(){this.listeners.forEach(o=>o(this))}};function $e(o){const k=o.getFullYear(),a=String(o.getMonth()+1).padStart(2,"0"),b=String(o.getDate()).padStart(2,"0");return"".concat(k,"-").concat(a,"-").concat(b)}function Te(){const o=new URLSearchParams(window.location.search);return{stream:o.get("stream")||"",date:o.get("date")||$e(new Date)}}function Pe(o,k){if(!o)return;const a=new URL(window.location.href);a.searchParams.set("stream",o),a.searchParams.set("date",k),window.history.replaceState({},"",a)}var ae,le,ce,me,de;function Me(){const o=Te(),[k,a]=w(!1),[b,r]=w([]),[p,E]=w(o.stream),[$,c]=w(o.date),[m,f]=w([]),v=z(null),h=z(!1);_(()=>{console.log("TimelinePage: Initial mount, loading streams"),l()},[]),_(()=>{if(b.length>0&&!h.current){if(console.log("TimelinePage: Streams loaded, initializing data"),h.current=!0,b.some(n=>n.name===p)&&p)console.log("TimelinePage: Using stream from URL: ".concat(p)),d(p,$);else if(b.length>0){const n=b[0].name;console.log("TimelinePage: Using first stream: ".concat(n)),E(n),d(n,$)}}},[b]);const l=()=>{console.log("TimelinePage: Loading streams"),a(!0),fetch("/api/streams").then(e=>{if(!e.ok)throw new Error("Failed to load streams");return e.json()}).then(e=>{console.log("TimelinePage: Streams data received:",e);const n=Array.isArray(e)?e:[];console.log("TimelinePage: Loaded ".concat(n.length," streams")),r(n),a(!1),i.setState({streams:n}),n.length>0&&console.log("TimelinePage: First stream:",n[0])}).catch(e=>{console.error("TimelinePage: Error loading streams:",e),R("Error loading streams: "+e.message,"error"),a(!1)})},d=(e,n)=>{if(!e){R("Please select a stream","error");return}console.log("TimelinePage: Loading timeline data for ".concat(e," on ").concat(n)),a(!0),f([]),R("Loading timeline data...","info"),Pe(e,n);const g=new Date(n);g.setHours(0,0,0,0);const u=new Date(n);u.setHours(23,59,59,999);const T=g.toISOString(),S=u.toISOString();i.setState({selectedStream:e,selectedDate:n,timelineSegments:[],currentSegmentIndex:-1,currentTime:null,isPlaying:!1}),fetch("/api/timeline/segments?stream=".concat(encodeURIComponent(e),"&start=").concat(encodeURIComponent(T),"&end=").concat(encodeURIComponent(S))).then(x=>{if(!x.ok)throw new Error("Failed to load timeline data");return x.json()}).then(x=>{console.log("TimelinePage: Timeline data received:",x);const P=x.segments||[];if(console.log("TimelinePage: Received ".concat(P.length," segments")),a(!1),P.length===0){console.log("TimelinePage: No segments found"),f([]),i.setState({timelineSegments:[],currentSegmentIndex:-1,currentTime:null,isPlaying:!1}),R("No recordings found for the selected date","warning");return}console.log("TimelinePage: Setting segments"),f(P);const C=P[0].start_timestamp;i.setState({timelineSegments:P,currentSegmentIndex:0,currentTime:C,prevCurrentTime:C,isPlaying:!1});const L=document.querySelector("#video-player video");L&&(L.src="/api/recordings/play/".concat(P[0].id),L.load()),R("Loaded ".concat(P.length," recording segments"),"success")}).catch(x=>{console.error("TimelinePage: Error loading timeline data:",x),R("Error loading timeline data: "+x.message,"error"),a(!1),f([])})},y=e=>{const n=e.target.value;console.log("TimelinePage: Stream changed to ".concat(n)),E(n),n&&d(n,$)},t=e=>{const n=e.target.value;console.log("TimelinePage: Date changed to ".concat(n)),c(n),p&&d(p,n)},s=()=>k?H(ae||(ae=M(["<",' message="Loading timeline data..." />'])),be):m.length===0?H(le||(le=M(['\n        <div class="flex flex-col items-center justify-center py-12 text-center">\n          <svg class="w-16 h-16 text-gray-400 dark:text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>\n          </svg>\n          <p class="text-gray-600 dark:text-gray-400 text-lg">No recordings found for the selected date and stream</p>\n        </div>\n      ']))):H(ce||(ce=M(["\n      <!-- Video player -->\n      <"," />\n\n      <!-- Playback controls -->\n      <",' />\n\n        <!-- Timeline -->\n        <div\n            id="timeline-container"\n            class="relative w-full h-24 bg-gray-200 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg mb-6 overflow-hidden"\n            ref=',"\n        >\n          <"," />\n          <"," />\n          <",' />\n          \n          <!-- Instructions for cursor -->\n          <div class="absolute bottom-1 right-2 text-xs text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 bg-opacity-75 dark:bg-opacity-75 px-2 py-1 rounded">\n            Drag the orange dial to navigate\n          </div>\n        </div>\n    '])),ke,ve,v,ye,Se,we);return H(de||(de=M(['\n    <div class="timeline-page">\n      <div class="flex items-center mb-4">\n        <h1 class="text-2xl font-bold">Timeline Playback</h1>\n        <div class="ml-4 flex">\n          <a href="recordings.html" class="px-3 py-1 bg-gray-300 text-gray-700 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-400 dark:hover:bg-gray-600 rounded-l-md">Table View</a>\n          <a href="timeline.html" class="px-3 py-1 bg-blue-500 text-white rounded-r-md">Timeline View</a>\n        </div>\n      </div>\n\n      <!-- Stream selector and date picker -->\n      <div class="flex flex-wrap gap-4 mb-2">\n        <div class="stream-selector flex-grow">\n          <div class="flex justify-between items-center mb-2">\n            <label for="stream-selector">Stream</label>\n            <button \n              class="text-xs bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 px-2 py-1 rounded"\n              onClick=','\n            >\n              Reload Streams\n            </button>\n          </div>\n          <select\n              id="stream-selector"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          >\n            <option value="" disabled>Select a stream ('," available)</option>\n            ",'\n          </select>\n        </div>\n\n        <div class="date-selector flex-grow">\n          <label for="timeline-date" class="block mb-2">Date</label>\n          <input\n              type="date"\n              id="timeline-date"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          />\n        </div>\n      </div>\n      \n      <!-- Auto-load message -->\n      <div class="mb-4 text-sm text-gray-500 dark:text-gray-400 italic">\n        ','\n      </div>\n\n      <!-- Current time display -->\n      <div class="flex justify-between items-center mb-2">\n        <div id="time-display" class="timeline-time-display bg-gray-200 dark:bg-gray-700 px-3 py-1 rounded font-mono text-base">00:00:00</div>\n      </div>\n      \n      <!-- Debug info -->\n      <div class="mb-2 text-xs text-gray-500">\n        Debug - isLoading: ',", \n        Streams: ",",\n        Segments: ","\n      </div>\n      \n      <!-- Content -->\n      ",'\n\n      <!-- Instructions -->\n      <div class="mt-6 p-4 bg-gray-200 dark:bg-gray-800 rounded">\n        <h3 class="text-lg font-semibold mb-2">How to use the timeline:</h3>\n        <ul class="list-disc pl-5">\n          <li>Select a stream and date to load recordings</li>\n          <li>Click on the timeline to seek to a specific time</li>\n          <li>Click on a segment (blue bar) to play that recording</li>\n          <li>Use the play/pause button to control playback</li>\n          <li>Use the zoom buttons to adjust the timeline scale</li>\n        </ul>\n      </div>\n    </div>\n  '])),()=>l(),p||"",y,b.length,b.map(e=>H(me||(me=M(["\n              <option key="," value=",">","</option>\n            "])),e.name,e.name,e.name)),$,t,k?"Loading...":"Recordings auto-load when stream or date changes",k?"true":"false",b.length,m.length,s())}var ge;function Le(){const o=document.getElementById("main-content");o&&(o.innerHTML="",he(H(ge||(ge=M(["<"," />"])),Me),o))}export{Le as loadTimelineView};
//# sourceMappingURL=TimelineView-HjGzbyL2.js.map
