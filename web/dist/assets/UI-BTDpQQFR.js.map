{"version":3,"mappings":"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","names":["useSnapshotManager","snapshotData","setSnapshotData","useState","takeSnapshot","useCallback","streamId","event","streamElement","streamName","clickedButton","videoCell","showStatusMessage","videoElementId","videoElement","canvas","timestamp","fileName","showSnapshotPreview","error","downloadSnapshot","blob","blobUrl","link","SnapshotManager","useEffect","SnapshotButton","onSnapshot","jsx","jsxs","ModalContext","createContext","DeleteConfirmationModal","props","isOpen","onClose","onConfirm","mode","count","title","message","e","SnapshotPreviewModal","imageData","onDownload","modalRef","useRef","handleKeyDown","modalContent","handleBackgroundClick","createPortal","VideoModal","videoUrl","downloadUrl","detectionOverlayEnabled","setDetectionOverlayEnabled","timeWindow","setTimeWindow","detections","setDetections","recordingData","setRecordingData","detectionStatus","setDetectionStatus","currentSpeed","setCurrentSpeed","videoRef","canvasRef","recordingIdMatch","recordingId","response","data","startTime","endTime","detectionsResponse","fetchedDetections","drawDetections","video","videoWidth","videoHeight","ctx","currentTime","currentTimestamp","visibleDetections","detection","x","y","width","height","labelText","labelWidth","handlePlay","handleSeeked","handleTimeUpdate","handleSpeedChange","speed","handleTimeWindowChange","newTimeWindow","animationTimeout","_a","ModalProvider","children","snapshotModal","setSnapshotModal","videoModal","setVideoModal","showVideoModal","handleSnapshotDownload","closeSnapshotModal","prev","closeVideoModal","contextValue","setupModals","addModalStyles","root","modalContainer","__vitePreload","render","h2","n","h","err","useSnapshotManager2","SnapshotManager$1"],"ignoreList":[],"sources":["../../js/components/preact/SnapshotManager.jsx","../../js/components/preact/UI.jsx"],"sourcesContent":["/**\n * Snapshot functionality for LiveView\n * React component for managing snapshots\n */\nimport { h } from 'preact';\nimport { useState, useCallback, useEffect } from 'preact/hooks';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { showSnapshotPreview } from './UI.jsx';\n\n/**\n * Custom hook for snapshot functionality\n * @returns {Object} Snapshot functions and state\n */\nexport function useSnapshotManager() {\n  const [snapshotData, setSnapshotData] = useState({\n    canvas: null,\n    fileName: null\n  });\n\n  /**\n   * Take a snapshot of a stream\n   * @param {string} streamId - ID of the stream\n   * @param {Event} event - Optional click event\n   */\n  const takeSnapshot = useCallback((streamId, event) => {\n    console.log(`Taking snapshot of stream with ID: ${streamId}`);\n\n    // Find the stream by ID or name\n    const streamElement = document.querySelector(`.snapshot-btn[data-id=\"${streamId}\"]`);\n    let streamName;\n\n    if (streamElement) {\n      // Get the stream name from the data attribute\n      streamName = streamElement.getAttribute('data-name');\n    } else if (event) {\n      // If we can't find by data-id, try to find from the event target\n      const clickedButton = event.currentTarget || event.target;\n      const videoCell = clickedButton ? clickedButton.closest('.video-cell') : null;\n\n      if (videoCell) {\n        streamName = videoCell.dataset.streamName;\n      }\n    }\n\n    if (!streamName) {\n      console.error('Stream name not found for ID:', streamId);\n      showStatusMessage('Cannot take snapshot: Stream not identified', 'error');\n      return;\n    }\n\n    // Find the video element\n    const videoElementId = `video-${streamName.replace(/\\s+/g, '-')}`;\n    const videoElement = document.getElementById(videoElementId);\n    if (!videoElement) {\n      console.error('Video element not found for stream:', streamName);\n      return;\n    }\n\n    // Create a canvas element to capture the frame\n    const canvas = document.createElement('canvas');\n    canvas.width = videoElement.videoWidth;\n    canvas.height = videoElement.videoHeight;\n\n    // Check if we have valid dimensions\n    if (canvas.width === 0 || canvas.height === 0) {\n      console.error('Invalid video dimensions:', canvas.width, canvas.height);\n      showStatusMessage('Cannot take snapshot: Video not loaded or has invalid dimensions');\n      return;\n    }\n\n    // Draw the current frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n    try {\n      // Generate a filename\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot-${streamName.replace(/\\s+/g, '-')}-${timestamp}.jpg`;\n\n      // Store the canvas and filename in state\n      setSnapshotData({\n        canvas,\n        fileName\n      });\n\n      // Show the standard preview\n      showSnapshotPreview(canvas.toDataURL('image/jpeg', 0.95), `Snapshot: ${streamName}`);\n\n      // Show success message\n      showStatusMessage('Snapshot taken successfully');\n    } catch (error) {\n      console.error('Error creating snapshot:', error);\n      showStatusMessage('Failed to create snapshot: ' + error.message);\n    }\n  }, []);\n\n  /**\n   * Download the snapshot as JPEG\n   */\n  const downloadSnapshot = useCallback(() => {\n    const { canvas, fileName } = snapshotData;\n\n    if (!canvas) {\n      console.error('No snapshot canvas available');\n      showStatusMessage('Download failed: No snapshot data available');\n      return;\n    }\n\n    // Convert canvas to blob and download\n    canvas.toBlob(function(blob) {\n      if (!blob) {\n        console.error('Failed to create blob from canvas');\n        showStatusMessage('Download failed: Unable to create image data');\n        return;\n      }\n\n      console.log('Created blob:', blob.size, 'bytes');\n\n      // Create object URL from blob\n      const blobUrl = URL.createObjectURL(blob);\n      console.log('Created blob URL:', blobUrl);\n\n      // Create download link\n      const link = document.createElement('a');\n      link.href = blobUrl;\n      link.download = fileName || 'snapshot.jpg';\n\n      // Add the link to the document\n      document.body.appendChild(link);\n      console.log('Added download link to document');\n\n      // Trigger click\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        if (document.body.contains(link)) {\n          document.body.removeChild(link);\n        }\n        URL.revokeObjectURL(blobUrl);\n        console.log('Cleaned up download resources');\n      }, 1000);\n\n      showStatusMessage('Download started');\n    }, 'image/jpeg', 0.95); // High quality JPEG\n  }, [snapshotData]);\n\n  return {\n    takeSnapshot,\n    downloadSnapshot,\n    hasSnapshot: !!snapshotData.canvas\n  };\n}\n\n/**\n * SnapshotManager component\n * @returns {JSX.Element} SnapshotManager component\n */\nexport function SnapshotManager() {\n  const { takeSnapshot, downloadSnapshot } = useSnapshotManager();\n\n  // Register the takeSnapshot function globally for backward compatibility\n  useEffect(() => {\n    window.takeSnapshot = takeSnapshot;\n\n    return () => {\n      // Clean up global function when component unmounts\n      delete window.takeSnapshot;\n    };\n  }, [takeSnapshot]);\n\n  // This component doesn't render anything visible\n  return null;\n}\n\n/**\n * SnapshotButton component\n * @param {Object} props Component props\n * @param {string} props.streamId Stream ID\n * @param {string} props.streamName Stream name\n * @param {Function} props.onSnapshot Optional custom snapshot handler\n * @returns {JSX.Element} SnapshotButton component\n */\nexport function SnapshotButton({ streamId, streamName, onSnapshot }) {\n  const { takeSnapshot } = useSnapshotManager();\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Use custom snapshot handler if provided, otherwise use default\n    if (typeof onSnapshot === 'function') {\n      onSnapshot(event);\n    } else {\n      takeSnapshot(streamId, event);\n    }\n  };\n\n  return (\n    <button\n      className=\"snapshot-btn\"\n      title=\"Take Snapshot\"\n      data-id={streamId}\n      data-name={streamName}\n      onClick={handleClick}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"white\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\n        <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\n      </svg>\n    </button>\n  );\n}\n\n/**\n * DownloadButton component\n * @param {Object} props Component props\n * @returns {JSX.Element} DownloadButton component\n */\nexport function DownloadButton() {\n  const { downloadSnapshot, hasSnapshot } = useSnapshotManager();\n\n  if (!hasSnapshot) return null;\n\n  return (\n    <button\n      className=\"download-btn px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n      onClick={downloadSnapshot}\n    >\n      Download\n    </button>\n  );\n}\n","/**\n * UI utility components for LightNVR\n * JSX version of UI components\n */\n\nimport { h, createContext } from 'preact';\nimport { useState, useEffect, useRef, useCallback } from 'preact/hooks';\nimport { createPortal } from 'preact/compat';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { useSnapshotManager } from './SnapshotManager.jsx';\n\n// Create contexts for modals\nexport const ModalContext = createContext({\n  showVideoModal: () => {},\n  showSnapshotPreview: () => {}\n});\n\n/**\n * DeleteConfirmationModal component for Preact\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {Function} props.onConfirm - Function to call when delete is confirmed\n * @param {string} props.mode - Delete mode ('selected' or 'all')\n * @param {number} props.count - Number of items selected (for 'selected' mode)\n * @returns {JSX.Element} DeleteConfirmationModal component\n */\nexport function DeleteConfirmationModal(props) {\n  const { isOpen, onClose, onConfirm, mode, count } = props;\n\n  if (!isOpen) return null;\n\n  // Determine title and message based on mode\n  let title = 'Confirm Delete';\n  let message = 'Are you sure you want to delete this item?';\n\n  if (mode === 'selected') {\n    title = 'Delete Selected Recordings';\n    message = `Are you sure you want to delete ${count} selected recording${count !== 1 ? 's' : ''}?`;\n  } else if (mode === 'all') {\n    title = 'Delete All Filtered Recordings';\n    message = 'Are you sure you want to delete all recordings matching the current filters? This action cannot be undone.';\n  }\n\n  // Handle escape key\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n      onKeyDown={handleKeyDown}\n    >\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 max-w-md mx-auto\">\n        <div class=\"mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">{title}</h3>\n        </div>\n\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\">{message}</p>\n\n        <div class=\"flex justify-end space-x-3\">\n          <button\n            class=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n            onClick={onConfirm}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * SnapshotPreviewModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.imageData - Image data URL\n * @param {string} props.streamName - Stream name\n * @returns {JSX.Element} SnapshotPreviewModal component\n */\nexport function SnapshotPreviewModal({ isOpen, onClose, imageData, streamName, onDownload }) {\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    // Handle escape key\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Animate in\n    if (isOpen && modalRef.current) {\n      setTimeout(() => {\n        const modalContent = modalRef.current.querySelector('.modal-content');\n        if (modalContent) {\n          modalContent.classList.remove('scale-95', 'opacity-0');\n          modalContent.classList.add('scale-100', 'opacity-100');\n        }\n      }, 10);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"snapshot-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className=\"modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out scale-95 opacity-0\" style={{ width: '90%' }}>\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"snapshot-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {streamName ? `Snapshot: ${streamName}` : 'Snapshot'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            ✕\n          </button>\n        </div>\n        <div className=\"p-4 overflow-auto flex-grow\">\n          <img\n            id=\"snapshot-preview-image\"\n            className=\"max-w-full max-h-[70vh] mx-auto\"\n            src={imageData}\n            alt=\"Snapshot\"\n          />\n        </div>\n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-2\">\n          <button\n            id=\"snapshot-download-btn\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n            onClick={onDownload}\n          >\n            Download\n          </button>\n          <button\n            id=\"snapshot-close-btn\"\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * VideoModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.videoUrl - URL of the video to display\n * @param {string} props.title - Title for the video\n * @param {string} props.downloadUrl - Optional URL for downloading the video\n * @returns {JSX.Element} VideoModal component\n */\nexport function VideoModal({ isOpen, onClose, videoUrl, title, downloadUrl }) {\n  console.log('VideoModal rendered with props:', { isOpen, videoUrl, title });\n\n  const [detectionOverlayEnabled, setDetectionOverlayEnabled] = useState(false);\n  const [timeWindow, setTimeWindow] = useState(2);\n  const [detections, setDetections] = useState([]);\n  const [recordingData, setRecordingData] = useState(null);\n  const [detectionStatus, setDetectionStatus] = useState('No detections loaded');\n  const [currentSpeed, setCurrentSpeed] = useState(1.0);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Handle escape key and cleanup\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      console.log('VideoModal opened, setting up event listeners');\n      document.addEventListener('keydown', handleKeyDown);\n\n      // Reset video element when modal opens\n      if (videoRef.current) {\n        videoRef.current.load();\n      }\n    }\n\n    return () => {\n      console.log('VideoModal cleanup');\n      document.removeEventListener('keydown', handleKeyDown);\n\n      // Cleanup video element when component unmounts or modal closes\n      if (videoRef.current) {\n        // Pause and reset video src to stop any ongoing requests\n        try {\n          videoRef.current.pause();\n          videoRef.current.removeAttribute('src');\n          videoRef.current.load();\n        } catch (e) {\n          console.error('Error cleaning up video element:', e);\n        }\n      }\n    };\n  }, [isOpen, onClose]);\n\n  // Fetch recording data and detections\n  useEffect(() => {\n    if (!isOpen || !videoUrl) return;\n\n    // Extract recording ID from URL\n    const recordingIdMatch = videoUrl.match(/\\/play\\/(\\d+)/);\n    if (!recordingIdMatch || !recordingIdMatch[1]) return;\n\n    const recordingId = parseInt(recordingIdMatch[1], 10);\n\n    // Fetch recording data\n    const fetchRecordingData = async () => {\n      try {\n        const response = await fetch(`/api/recordings/${recordingId}`);\n        if (!response.ok) throw new Error('Failed to fetch recording data');\n\n        const data = await response.json();\n        setRecordingData(data);\n\n        // If we have recording data, fetch detections\n        if (data && data.stream && data.start_time && data.end_time) {\n          const startTime = Math.floor(new Date(data.start_time).getTime() / 1000);\n          const endTime = Math.floor(new Date(data.end_time).getTime() / 1000);\n\n          const detectionsResponse = await fetch(\n            `/api/detection/results/${data.stream}?start=${startTime}&end=${endTime}`\n          );\n\n          if (!detectionsResponse.ok) throw new Error('Failed to fetch detections');\n\n          const detectionsData = await detectionsResponse.json();\n          const fetchedDetections = detectionsData.detections || [];\n          setDetections(fetchedDetections);\n\n          if (fetchedDetections.length > 0) {\n            setDetectionStatus(`${fetchedDetections.length} detection${fetchedDetections.length !== 1 ? 's' : ''} available`);\n          } else {\n            setDetectionStatus('No detections found for this recording');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setDetectionStatus('Error loading detections');\n      }\n    };\n\n    fetchRecordingData();\n  }, [isOpen, videoUrl]);\n\n  // Draw detections on canvas\n  const drawDetections = useCallback(() => {\n    if (!detectionOverlayEnabled || !videoRef.current || !canvasRef.current || detections.length === 0) {\n      return;\n    }\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Get video dimensions\n    const videoWidth = video.videoWidth;\n    const videoHeight = video.videoHeight;\n\n    if (videoWidth === 0 || videoHeight === 0) {\n      // Video dimensions not available yet, try again later\n      requestAnimationFrame(drawDetections);\n      return;\n    }\n\n    // Set canvas dimensions to match video\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    // Get canvas context\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get current video time in seconds\n    const currentTime = video.currentTime;\n\n    // Calculate the timestamp for the current video position\n    if (!recordingData || !recordingData.start_time) {\n      return;\n    }\n\n    // Convert recording start time to seconds\n    const recordingStartTime = Math.floor(new Date(recordingData.start_time).getTime() / 1000);\n\n    // Calculate current timestamp in the video\n    const currentTimestamp = recordingStartTime + Math.floor(currentTime);\n\n    // Filter detections to only show those within the time window\n    const visibleDetections = detections.filter(detection => {\n      if (!detection.timestamp) return false;\n\n      // Check if detection is within the time window\n      return Math.abs(detection.timestamp - currentTimestamp) <= timeWindow;\n    });\n\n    // Update status with count of visible detections\n    if (visibleDetections.length > 0) {\n      setDetectionStatus(`Showing ${visibleDetections.length} detection${visibleDetections.length !== 1 ? 's' : ''} at current time`);\n    } else {\n      setDetectionStatus(`No detections at current time (${detections.length} total)`);\n    }\n\n    // Draw each visible detection\n    visibleDetections.forEach(detection => {\n      // Calculate coordinates based on relative positions\n      const x = detection.x * videoWidth;\n      const y = detection.y * videoHeight;\n      const width = detection.width * videoWidth;\n      const height = detection.height * videoHeight;\n\n      // Draw bounding box\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.8)';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, width, height);\n\n      // Draw label background\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      const labelText = `${detection.label} (${Math.round(detection.confidence * 100)}%)`;\n      const labelWidth = ctx.measureText(labelText).width + 10;\n      ctx.fillRect(x, y - 20, labelWidth, 20);\n\n      // Draw label text\n      ctx.fillStyle = 'white';\n      ctx.font = '12px Arial';\n      ctx.fillText(labelText, x + 5, y - 5);\n    });\n\n    // Request next frame if video is playing\n    if (!video.paused && !video.ended) {\n      requestAnimationFrame(drawDetections);\n    }\n  }, [detectionOverlayEnabled, detections, recordingData, timeWindow]);\n\n  // Set up video event listeners\n  useEffect(() => {\n    if (!isOpen || !videoRef.current) return;\n\n    const video = videoRef.current;\n\n    const handlePlay = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleSeeked = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleTimeUpdate = () => {\n      if (detectionOverlayEnabled) {\n        // Don't redraw on every timeupdate as it's too frequent\n        // Instead, redraw every 0.5 seconds\n        const currentTime = Math.floor(video.currentTime * 2) / 2;\n        if (video.lastDrawnTime !== currentTime) {\n          video.lastDrawnTime = currentTime;\n          drawDetections();\n        }\n      }\n    };\n\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('seeked', handleSeeked);\n    video.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('seeked', handleSeeked);\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [isOpen, detectionOverlayEnabled, drawDetections]);\n\n  // Handle video URL changes\n  useEffect(() => {\n    if (isOpen && videoUrl && videoRef.current) {\n      console.log('Video URL changed, loading new video');\n      videoRef.current.load();\n    }\n  }, [isOpen, videoUrl]);\n\n  // Update detection overlay when enabled/disabled\n  useEffect(() => {\n    if (detectionOverlayEnabled) {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'block';\n      }\n      drawDetections();\n    } else {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'none';\n      }\n    }\n  }, [detectionOverlayEnabled, drawDetections]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Handle speed change\n  const handleSpeedChange = (speed) => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = speed;\n      setCurrentSpeed(speed);\n    }\n  };\n\n  // Handle time window change\n  const handleTimeWindowChange = (e) => {\n    const newTimeWindow = parseInt(e.target.value, 10);\n    setTimeWindow(newTimeWindow);\n    if (detectionOverlayEnabled) {\n      drawDetections();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  // Add useEffect to handle modal animation and cleanup\n  useEffect(() => {\n    let animationTimeout;\n\n    if (isOpen && modalRef.current) {\n      // Animate in - small delay to ensure DOM is ready\n      animationTimeout = setTimeout(() => {\n        const modalContent = modalRef.current?.querySelector('.modal-content');\n        if (modalContent) {\n          modalContent.classList.remove('scale-95', 'opacity-0');\n          modalContent.classList.add('scale-100', 'opacity-100');\n          console.log('Modal animation applied');\n        }\n      }, 10);\n    }\n\n    // Cleanup function\n    return () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n      }\n    };\n  }, [isOpen]);\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"video-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className={`modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out ${isOpen ? 'scale-100 opacity-100' : 'scale-95 opacity-0'} w-full md:w-[90%]`}>\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"video-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {title || 'Video'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            ✕\n          </button>\n        </div>\n\n        <div className=\"p-4 flex-grow\">\n          <div className=\"relative\">\n            <video\n              ref={videoRef}\n              className=\"w-full h-auto max-w-full object-contain mx-auto\"\n              controls\n              autoPlay\n              key={videoUrl} /* Add key to force re-render when URL changes */\n              onError={(e) => {\n                console.error('Video error:', e);\n                showStatusMessage('Error loading video. Please try again.', 'error');\n              }}\n              onLoadStart={() => console.log('Video load started')}\n              onLoadedData={() => console.log('Video data loaded')}\n            >\n              {/* Use source element instead of src attribute for better control */}\n              {videoUrl && <source src={videoUrl} type=\"video/mp4\" />}\n            </video>\n            <canvas\n              ref={canvasRef}\n              className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div id=\"recordings-controls\" className=\"mx-4 mb-4 p-4 border border-green-500 rounded-lg bg-white dark:bg-gray-700 shadow-md relative z-10\">\n          <h3 className=\"text-lg font-bold text-center mb-4 text-gray-800 dark:text-white\">\n            PLAYBACK CONTROLS\n          </h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-2\">\n            {/* Speed controls section */}\n            <div className=\"border-b pb-4 md:border-b-0 md:border-r md:pr-4 md:pb-0\">\n              <h4 className=\"font-bold text-center mb-3 text-gray-700 dark:text-gray-300\">\n                Playback Speed\n              </h4>\n\n              <div className=\"flex flex-wrap justify-center gap-2\">\n                {[0.25, 0.5, 1.0, 1.5, 2.0, 4.0].map(speed => (\n                  <button\n                    key={speed}\n                    className={`speed-btn px-3 py-2 rounded-full ${\n                      speed === currentSpeed\n                        ? 'bg-green-500 text-white'\n                        : 'bg-gray-200 hover:bg-gray-300'\n                    } text-sm font-medium transition-all focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50`}\n                    data-speed={speed}\n                    onClick={() => handleSpeedChange(speed)}\n                  >\n                    {speed === 1.0 ? '1× (Normal)' : `${speed}×`}\n                  </button>\n                ))}\n              </div>\n\n              <div id=\"current-speed-indicator\" className=\"mt-3 text-center font-medium text-green-600 dark:text-green-400 text-sm\">\n                Current Speed: {currentSpeed}× {currentSpeed === 1.0 ? '(Normal)' : ''}\n              </div>\n            </div>\n\n            {/* Detection overlay section */}\n            <div className=\"pt-4 md:pt-0 md:pl-4\">\n              <h4 className=\"font-bold text-center mb-2 text-gray-700 dark:text-gray-300\">\n                Detection Overlays\n              </h4>\n\n              <div className=\"flex flex-col items-center gap-2\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"detection-overlay-checkbox\"\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                    checked={detectionOverlayEnabled}\n                    onChange={(e) => setDetectionOverlayEnabled(e.target.checked)}\n                    disabled={detections.length === 0}\n                  />\n                  <label\n                    htmlFor=\"detection-overlay-checkbox\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  >\n                    Show Detection Overlays\n                  </label>\n                </div>\n\n                <div className=\"flex flex-col w-full mt-2 mb-2\">\n                  <label\n                    htmlFor=\"detection-sensitivity-slider\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                  >\n                    Detection Sensitivity\n                  </label>\n\n                  <input\n                    type=\"range\"\n                    id=\"detection-sensitivity-slider\"\n                    className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                    min=\"1\"\n                    max=\"10\"\n                    step=\"1\"\n                    value={timeWindow}\n                    onChange={handleTimeWindowChange}\n                  />\n\n                  <div id=\"detection-sensitivity-value\" className=\"text-xs text-gray-600 dark:text-gray-400 text-center mb-1\">\n                    Time Window: {timeWindow} second{timeWindow !== 1 ? 's' : ''}\n                  </div>\n                </div>\n\n                <div id=\"detection-status-indicator\" className={`text-center text-sm ${\n                  detections.length > 0\n                    ? 'font-medium text-green-600 dark:text-green-400'\n                    : 'text-gray-600 dark:text-gray-400'\n                }`}>\n                  {detectionStatus}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Download button */}\n          {downloadUrl && (\n            <div className=\"flex justify-center mt-4 pt-2 border-t border-gray-200 dark:border-gray-700\">\n              <a\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors flex items-center text-sm\"\n                href={downloadUrl}\n                download={`video-${Date.now()}.mp4`}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                </svg>\n                Download Video\n              </a>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-2\"></div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * ModalProvider component\n * Provides modal context and renders modal components\n */\nexport function ModalProvider({ children }) {\n  const [snapshotModal, setSnapshotModal] = useState({\n    isOpen: false,\n    imageData: '',\n    streamName: '',\n  });\n\n  const [videoModal, setVideoModal] = useState({\n    isOpen: false,\n    videoUrl: '',\n    title: '',\n    downloadUrl: '',\n  });\n\n  // Show snapshot preview\n  const showSnapshotPreview = useCallback((imageData, streamName) => {\n    setSnapshotModal({\n      isOpen: true,\n      imageData,\n      streamName,\n    });\n  }, []);\n\n  // Show video modal\n  const showVideoModal = useCallback((videoUrl, title, downloadUrl) => {\n    console.log('ModalProvider.showVideoModal called with:', { videoUrl, title, downloadUrl });\n\n    // First reset the modal state completely\n    setVideoModal({\n      isOpen: false,\n      videoUrl: '',\n      title: '',\n      downloadUrl: ''\n    });\n\n    // Then set the new state after a small delay to ensure clean rendering\n    setTimeout(() => {\n      setVideoModal({\n        isOpen: true,\n        videoUrl,\n        title,\n        downloadUrl,\n      });\n      console.log('Video modal state updated with new content');\n    }, 50);\n  }, []);\n\n  // Use the snapshot manager hook for download functionality\n  const { downloadSnapshot } = useSnapshotManager();\n\n  // Handle snapshot download\n  const handleSnapshotDownload = useCallback(() => {\n    try {\n      const { imageData, streamName } = snapshotModal;\n\n      if (!imageData) {\n        console.error('No image data available for download');\n        showStatusMessage('Download failed: No image data available', 'error', 5000);\n        return;\n      }\n\n      // Use the downloadSnapshot function from the hook if available\n      if (downloadSnapshot) {\n        downloadSnapshot();\n        return;\n      }\n\n      // Fallback to the old implementation\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n      const link = document.createElement('a');\n      link.href = imageData;\n      link.download = fileName;\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        document.body.removeChild(link);\n      }, 100);\n\n      showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n    } catch (error) {\n      console.error('Error in snapshot download process:', error);\n      showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n    }\n  }, [snapshotModal, downloadSnapshot]);\n\n  // Close snapshot modal\n  const closeSnapshotModal = useCallback(() => {\n    setSnapshotModal(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  // Close video modal\n  const closeVideoModal = useCallback(() => {\n    console.log('Closing video modal');\n\n    // First just set isOpen to false to trigger the closing animation\n    setVideoModal(prev => ({ ...prev, isOpen: false }));\n\n    // Then completely reset the modal state after animation completes\n    setTimeout(() => {\n      setVideoModal({\n        isOpen: false,\n        videoUrl: '',\n        title: '',\n        downloadUrl: ''\n      });\n      console.log('Video modal state fully reset');\n    }, 300);\n  }, []);\n\n  // Create context value\n  const contextValue = {\n    showSnapshotPreview,\n    showVideoModal,\n  };\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      {children}\n\n      {/* Render modals */}\n      <SnapshotPreviewModal\n        isOpen={snapshotModal.isOpen}\n        onClose={closeSnapshotModal}\n        imageData={snapshotModal.imageData}\n        streamName={snapshotModal.streamName}\n        onDownload={handleSnapshotDownload}\n      />\n\n      <VideoModal\n        isOpen={videoModal.isOpen}\n        onClose={closeVideoModal}\n        videoUrl={videoModal.videoUrl}\n        title={videoModal.title}\n        downloadUrl={videoModal.downloadUrl}\n      />\n    </ModalContext.Provider>\n  );\n}\n\n// Export functions for backward compatibility\nexport function setupModals() {\n  console.warn('setupModals() is deprecated. Use <ModalProvider> component instead.');\n  // This function is kept for backward compatibility\n}\n\nexport function addModalStyles() {\n  console.warn('addModalStyles() is deprecated. Modal styles are now included in components.css');\n  // This function is kept for backward compatibility\n}\n\nexport function showVideoModal(videoUrl, title, downloadUrl) {\n  console.warn('Direct showVideoModal() is deprecated. Use ModalContext.showVideoModal instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showVideoModal) {\n    console.log('Using modal context to show video modal');\n    window.__modalContext.showVideoModal(videoUrl, title, downloadUrl);\n    return;\n  }\n\n  console.log('Falling back to direct modal rendering');\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    console.log('Creating modal root element');\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-modal-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  console.log('Dynamically importing preact to render modal');\n  import('preact').then(({ render, h }) => {\n    console.log('Rendering VideoModal component');\n    render(\n      h(VideoModal, {\n        isOpen: true,\n        onClose: () => {\n          console.log('Closing modal');\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        videoUrl,\n        title,\n        downloadUrl\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering video modal:', err);\n    showStatusMessage('Error showing video modal: ' + err.message, 'error');\n  });\n}\n\nexport function showSnapshotPreview(imageData, streamName) {\n  console.warn('Direct showSnapshotPreview() is deprecated. Use ModalContext.showSnapshotPreview instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showSnapshotPreview) {\n    window.__modalContext.showSnapshotPreview(imageData, streamName);\n    return;\n  }\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-snapshot-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  import('preact').then(({ render, h }) => {\n    const handleDownload = () => {\n      try {\n        // Import the snapshot manager hook\n        import('./SnapshotManager.jsx').then(({ useSnapshotManager }) => {\n          const { downloadSnapshot } = useSnapshotManager();\n          if (downloadSnapshot) {\n            downloadSnapshot();\n          } else {\n            // Fallback to the old implementation\n            const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n            const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n            const link = document.createElement('a');\n            link.href = imageData;\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n\n            // Clean up\n            setTimeout(() => {\n              document.body.removeChild(link);\n            }, 100);\n\n            showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n          }\n        }).catch(error => {\n          console.error('Error importing SnapshotManager:', error);\n          // Fallback to the old implementation\n          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n          const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n          const link = document.createElement('a');\n          link.href = imageData;\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n\n          // Clean up\n          setTimeout(() => {\n            document.body.removeChild(link);\n          }, 100);\n\n          showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n        });\n      } catch (error) {\n        console.error('Error downloading snapshot:', error);\n        showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n      }\n    };\n\n    render(\n      h(SnapshotPreviewModal, {\n        isOpen: true,\n        onClose: () => {\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        imageData,\n        streamName,\n        onDownload: handleDownload\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering snapshot modal:', err);\n    showStatusMessage('Error showing snapshot preview: ' + err.message, 'error');\n  });\n}\n"],"file":"assets/UI-BTDpQQFR.js"}