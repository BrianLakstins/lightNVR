const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./preact-app-Dm0PiEfO.js","./preact-app-DYG-RP2U.css"])))=>i.map(i=>d[i]);
var X=Object.freeze,je=Object.defineProperty;var d=(g,m)=>X(je(g,"raw",{value:X(m||g.slice())}));import{d as n,h as l,A as Re,y as Be,_ as Le,c as s}from"./preact-app-Dm0PiEfO.js";import{C as Ue}from"./LoadingIndicator-Brju9oRY.js";import{f as x,e as C,c as ze}from"./fetch-utils-GN-4zfXA.js";var W,Y,G;function He({streamId:g,streamName:m,onClose:y,onDisable:v,onDelete:E}){const[h,w]=n(!1),I=()=>{w(!0)},D=()=>{v(g),y()},S=()=>{E(g),y()};return l(G||(G=d(['\n    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300">\n      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full">\n        <div class="flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700">\n          <h3 class="text-lg font-medium">','</h3>\n          <span class="text-2xl cursor-pointer" onClick=','>Ã—</span>\n        </div>\n        \n        <div class="p-6">\n          ',"\n        </div>\n      </div>\n    </div>\n  "])),h?"Confirm Permanent Deletion":"Stream Actions",y,h?l(Y||(Y=d(['\n            <div class="mb-6">\n              <div class="flex items-center justify-center mb-4 text-red-600 dark:text-red-500">\n                <svg class="w-12 h-12" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>\n                </svg>\n              </div>\n              <h4 class="text-lg font-medium mb-2 text-center">Are you sure you want to permanently delete "','"?</h4>\n              <p class="text-gray-600 dark:text-gray-400 mb-4 text-center">\n                This action cannot be undone. The stream configuration will be permanently removed from the database.\n              </p>\n            </div>\n            \n            <div class="flex justify-center space-x-3">\n              <button \n                class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n                onClick=','\n              >\n                Cancel\n              </button>\n              <button \n                class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n                onClick=',"\n              >\n                Yes, Delete Permanently\n              </button>\n            </div>\n          "])),m,()=>w(!1),S):l(W||(W=d(['\n            <div class="mb-6">\n              <h4 class="text-lg font-medium mb-2">What would you like to do with "','"?</h4>\n              <p class="text-gray-600 dark:text-gray-400 mb-4">\n                Please choose one of the following options:\n              </p>\n              \n              <div class="space-y-4">\n                <div class="p-4 border border-yellow-200 bg-yellow-50 dark:bg-yellow-900/20 dark:border-yellow-900/30 rounded-lg">\n                  <h5 class="font-medium text-yellow-800 dark:text-yellow-500 mb-2">Disable Stream (Soft Delete)</h5>\n                  <p class="text-gray-600 dark:text-gray-400 mb-2">\n                    This option will disable the stream but keep its configuration in the database. You can re-enable it later.\n                  </p>\n                  <ul class="list-disc list-inside text-sm text-gray-600 dark:text-gray-400 mb-3">\n                    <li>Stream will stop processing</li>\n                    <li>Live streaming will be disabled</li>\n                    <li>Recording will be disabled</li>\n                    <li>Audio recording will be disabled</li>\n                    <li>Detection-based recording will be disabled</li>\n                    <li>Configuration is preserved</li>\n                    <li>Existing recordings are kept</li>\n                    <li>Can be re-enabled later</li>\n                  </ul>\n                  <button \n                    class="w-full px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n                    onClick=','\n                  >\n                    Disable Stream\n                  </button>\n                </div>\n                \n                <div class="p-4 border border-red-200 bg-red-50 dark:bg-red-900/20 dark:border-red-900/30 rounded-lg">\n                  <h5 class="font-medium text-red-800 dark:text-red-500 mb-2">Delete Stream (Permanent)</h5>\n                  <p class="text-gray-600 dark:text-gray-400 mb-2">\n                    This option will permanently delete the stream configuration from the database. This action cannot be undone.\n                  </p>\n                  <ul class="list-disc list-inside text-sm text-gray-600 dark:text-gray-400 mb-3">\n                    <li>Stream will be completely removed</li>\n                    <li>Configuration is deleted</li>\n                    <li>Recordings remain accessible</li>\n                    <li>Cannot be recovered</li>\n                  </ul>\n                  <button \n                    class="w-full px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n                    onClick=',"\n                  >\n                    Delete Stream\n                  </button>\n                </div>\n              </div>\n            </div>\n          "])),m,D,I))}var K,Q,Z,ee,te,re,ae,se,oe,ne,de,ie,le,ce,ue;function Je(){const[g,m]=n([]),[y,v]=n(!1),[E,h]=n(!1),[w,I]=n([]),[D,S]=n([]),[b,me]=n(null),[pe,be]=n(null),[O,P]=n(!1),[f,fe]=n({username:"",password:""}),[r,k]=n({name:"",url:"",enabled:!0,streamingEnabled:!0,width:1280,height:720,fps:15,codec:"h264",protocol:"0",priority:"5",segment:30,record:!0,detectionEnabled:!1,detectionModel:"",detectionThreshold:50,detectionInterval:10,preBuffer:10,postBuffer:30}),[ye,he]=n([]),[p,A]=n(!1),[xe,F]=n(!1),[N,j]=n(null),[ve,R]=n(!1),[we,T]=n(!1),c=Re(null);Be(()=>(c.current=ze(),$(),B(),()=>{c.current&&c.current.abort()}),[]);const $=async()=>{var e;try{R(!0),T(!1);const a=await x("/api/streams",{signal:(e=c.current)==null?void 0:e.signal,timeout:15e3,retries:2,retryDelay:1e3})||[];m(a),T(a.length>0)}catch(t){t.message!=="Request was cancelled"&&(console.error("Error loading streams:",t),s("Error loading streams: "+t.message),T(!1))}finally{R(!1)}},B=async()=>{var e;try{const t=await x("/api/detection/models",{signal:(e=c.current)==null?void 0:e.signal,timeout:1e4,retries:1,retryDelay:500});he(t.models||[])}catch(t){t.message!=="Request was cancelled"&&console.error("Error loading detection models:",t)}},ke=()=>{k({name:"",url:"",enabled:!0,streamingEnabled:!0,width:1280,height:720,fps:15,codec:"h264",protocol:"0",priority:"5",segment:30,record:!0,recordAudio:!0,detectionEnabled:!1,detectionModel:"",detectionThreshold:50,detectionInterval:10,preBuffer:10,postBuffer:30}),A(!1),v(!0)},$e=async e=>{var t,a,u;try{const o=await x("/api/streams/".concat(encodeURIComponent(e)),{signal:(t=c.current)==null?void 0:t.signal,timeout:1e4,retries:2,retryDelay:1e3});k({...o,width:o.width||1280,height:o.height||720,fps:o.fps||15,protocol:((a=o.protocol)==null?void 0:a.toString())||"0",priority:((u=o.priority)==null?void 0:u.toString())||"5",segment:o.segment_duration||30,detectionThreshold:o.detection_threshold||50,detectionInterval:o.detection_interval||10,preBuffer:o.pre_detection_buffer||10,postBuffer:o.post_detection_buffer||30,streamingEnabled:o.streaming_enabled!==void 0?o.streaming_enabled:!0,isOnvif:o.is_onvif!==void 0?o.is_onvif:!1,detectionEnabled:o.detection_based_recording||!1,detectionModel:o.detection_model||"",recordAudio:o.record_audio!==void 0?o.record_audio:!0}),A(!0),v(!0)}catch(o){console.error("Error loading stream details:",o),s("Error loading stream details: "+o.message)}},V=()=>{v(!1)},i=e=>{const{name:t,value:a,type:u,checked:o}=e.target;k(Fe=>({...Fe,[t]:u==="checkbox"?o:a}))},Ce=e=>{const t=parseInt(e.target.value,10);k(a=>({...a,detectionThreshold:t}))},De=async()=>{var e;try{const t={...r,width:parseInt(r.width,10),height:parseInt(r.height,10),fps:parseInt(r.fps,10),protocol:parseInt(r.protocol,10),priority:parseInt(r.priority,10),segment_duration:parseInt(r.segment,10),streaming_enabled:r.streamingEnabled,is_onvif:r.isOnvif,detection_based_recording:r.detectionEnabled,detection_model:r.detectionModel,detection_threshold:r.detectionThreshold,detection_interval:parseInt(r.detectionInterval,10),pre_detection_buffer:parseInt(r.preBuffer,10),post_detection_buffer:parseInt(r.postBuffer,10),record_audio:r.recordAudio};p&&(t.is_deleted=!1);const a=p?"/api/streams/".concat(encodeURIComponent(r.name)):"/api/streams";await C(a,{method:p?"PUT":"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t),signal:(e=c.current)==null?void 0:e.signal,timeout:15e3,retries:1,retryDelay:1e3}),s("Stream ".concat(p?"updated":"added"," successfully")),V(),$()}catch(t){console.error("Error ".concat(p?"updating":"adding"," stream:"),t),s("Error ".concat(p?"updating":"adding"," stream: ").concat(t.message))}},Se=async()=>{var e;try{s("Testing stream connection...");const t=await x("/api/streams/test",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:r.url,protocol:parseInt(r.protocol,10)}),signal:(e=c.current)==null?void 0:e.signal,timeout:2e4,retries:1,retryDelay:2e3});t.success?(s("Stream connection successful!"),t.info&&k(a=>({...a,width:t.info.width||a.width,height:t.info.height||a.height,fps:t.info.fps||a.fps,codec:t.info.codec||a.codec}))):s("Stream test failed: ".concat(t.message||"Unknown error"),3e3,"error")}catch(t){console.error("Error testing stream:",t),s("Error testing stream: "+t.message,3e3,"error")}},_e=e=>{j(e),F(!0)},Ee=()=>{F(!1),j(null)},Ie=async e=>{var t,a;try{const u=await x("/api/streams/".concat(encodeURIComponent(e)),{signal:(t=c.current)==null?void 0:t.signal,timeout:1e4,retries:1,retryDelay:1e3});await C("/api/streams/".concat(encodeURIComponent(e)),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({enabled:!1,streaming_enabled:!1,record:!1,record_audio:!1,detection_based_recording:!1}),signal:(a=c.current)==null?void 0:a.signal,timeout:15e3,retries:1,retryDelay:1e3}),s("Stream disabled successfully"),$()}catch(u){console.error("Error disabling stream:",u),s("Error disabling stream: "+u.message)}},Oe=async e=>{var t;try{await C("/api/streams/".concat(encodeURIComponent(e),"?permanent=true"),{method:"DELETE",signal:(t=c.current)==null?void 0:t.signal,timeout:15e3,retries:1,retryDelay:1e3}),s("Stream deleted permanently"),$()}catch(a){console.error("Error deleting stream:",a),s("Error deleting stream: "+a.message)}},L=e=>{const{name:t,value:a}=e.target;fe(u=>({...u,[t]:a}))},Ne=async()=>{var e;try{P(!0),s("Starting ONVIF discovery...");const t=await x("/api/onvif/discovery/discover",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({}),signal:(e=c.current)==null?void 0:e.signal,timeout:12e4,retries:0});I(t.devices||[]),t.devices&&t.devices.length>0?s("Discovered ".concat(t.devices.length," ONVIF devices")):s("No ONVIF devices found")}catch(t){console.error("Error discovering ONVIF devices:",t),s("Error discovering ONVIF devices: "+t.message,3e3,"error")}finally{P(!1)}},[U,z]=n(!1),Te=async e=>{var t;try{me(e),S([]),z(!0),s("Getting device profiles...");const a=await x("/api/onvif/device/profiles",{headers:{"X-Device-URL":e.device_service,"X-Username":f.username,"X-Password":f.password},signal:(t=c.current)==null?void 0:t.signal,timeout:2e4,retries:1,retryDelay:2e3});S(a.profiles||[]),a.profiles&&a.profiles.length>0?s("Found ".concat(a.profiles.length," profiles")):s("No profiles found")}catch(a){console.error("Error getting device profiles:",a),s("Error getting device profiles: "+a.message,3e3,"error")}finally{z(!1)}},[M,H]=n(""),[Ve,_]=n(!1),Me=async e=>{try{be(e);const t="ONVIF_".concat(b.ip_address.replace(/\./g,"_"),"_").concat(e.name.replace(/\s+/g,"_"));H(t),_(!0)}catch(t){console.error("Error preparing to add ONVIF device:",t),s("Error preparing to add ONVIF device: "+t.message,3e3,"error")}},[J,q]=n(!1),Pe=async()=>{var e;try{q(!0),s("Adding ONVIF device as stream..."),await C("/api/onvif/device/add",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_url:b.device_service,profile_token:pe.token,stream_name:M,username:f.username,password:f.password}),signal:(e=c.current)==null?void 0:e.signal,timeout:3e4,retries:1,retryDelay:3e3}),s("ONVIF device added as stream successfully"),h(!1),_(!1),$()}catch(t){console.error("Error adding ONVIF device as stream:",t),s("Error adding ONVIF device as stream: "+t.message,3e3,"error")}finally{q(!1)}},Ae=async e=>{var t;try{const a={username:f.username,password:f.password};s("Testing ONVIF connection..."),await C("/api/onvif/device/test",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e.device_service,username:a.username,password:a.password}),signal:(t=c.current)==null?void 0:t.signal,timeout:15e3,retries:1,retryDelay:2e3}),s("ONVIF connection successful!"),Te(e)}catch(a){console.error("Error testing ONVIF connection:",a),s("Error testing ONVIF connection: "+a.message,3e3,"error")}};return l(ue||(ue=d(['\n    <section id="streams-page" class="page">\n      <div class="page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">\n        <h2 class="text-xl font-bold">Streams</h2>\n        <div class="controls flex space-x-2">\n          <button \n            id="discover-onvif-btn" \n            class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Discover ONVIF Cameras\n          </button>\n          <button \n            id="add-stream-btn" \n            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=',"\n          >\n            Add Stream\n          </button>\n        </div>\n      </div>\n      \n      <","\n        isLoading=","\n        hasData=",'\n        loadingMessage="Loading streams..."\n        emptyMessage="No streams configured yet. Click \'Add Stream\' to create one."\n      >\n        <div class="streams-container bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">\n          <div class="overflow-x-auto">\n            <table id="streams-table" class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">\n              <thead class="bg-gray-50 dark:bg-gray-700">\n                <tr>\n                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Name</th>\n                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">URL</th>\n                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Resolution</th>\n                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">FPS</th>\n                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Recording</th>\n                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>\n                </tr>\n              </thead>\n              <tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">\n                ',"\n              </tbody>\n            </table>\n          </div>\n        </div>\n      <//>\n      \n      ","\n      \n      ","\n      \n      ","\n      \n      ","\n    </section>\n  "])),()=>h(!0),ke,Ue,ve,we,g.map(e=>l(K||(K=d(["\n                  <tr key=",' class="hover:bg-gray-50 dark:hover:bg-gray-700">\n                    <td class="px-6 py-4 whitespace-nowrap">\n                      <div class="flex items-center">\n                        <span class=',"></span>\n                        ",'\n                      </div>\n                    </td>\n                    <td class="px-6 py-4 whitespace-nowrap">','</td>\n                    <td class="px-6 py-4 whitespace-nowrap">',"x",'</td>\n                    <td class="px-6 py-4 whitespace-nowrap">','</td>\n                    <td class="px-6 py-4 whitespace-nowrap">\n                      ',"\n                      ",'\n                    </td>\n                    <td class="px-6 py-4 whitespace-nowrap">\n                      <div class="flex space-x-2">\n                        <button \n                          class="p-1 rounded-full text-blue-600 hover:bg-blue-100 dark:text-blue-400 dark:hover:bg-blue-900 focus:outline-none"\n                          onClick=','\n                          title="Edit"\n                        >\n                          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>\n                          </svg>\n                        </button>\n                        <button \n                          class="p-1 rounded-full text-red-600 hover:bg-red-100 dark:text-red-400 dark:hover:bg-red-900 focus:outline-none"\n                          onClick=','\n                          title="Delete"\n                        >\n                          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n                            <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>\n                          </svg>\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                '])),e.name,"status-indicator w-2 h-2 rounded-full mr-2 ".concat(e.enabled?"bg-green-500":"bg-red-500"),e.name,e.url,e.width,e.height,e.fps,e.record?"Enabled":"Disabled",e.detection_based_recording?" (Detection)":"",()=>$e(e.name),()=>_e(e))),xe&&N&&l(Q||(Q=d(["\n        <","\n          streamId=","\n          streamName=","\n          onClose=","\n          onDisable=","\n          onDelete=","\n        />\n      "])),He,N.name,N.name,Ee,Ie,Oe),y&&l(ee||(ee=d(['\n        <div id="stream-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300">\n          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto">\n            <div class="flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700">\n              <h3 class="text-lg font-medium">','</h3>\n              <span class="text-2xl cursor-pointer" onClick=','>Ã—</span>\n            </div>\n            <div class="p-4">\n              <form id="stream-form" class="space-y-4">\n                <div class="form-group">\n                  <label for="stream-name" class="block text-sm font-medium mb-1">Name</label>\n                  <input \n                    type="text" \n                    id="stream-name" \n                    name="name"\n                    class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white ','"\n                    value=',"\n                    onChange=","\n                    disabled=",'\n                    required\n                  />\n                </div>\n                <div class="form-group">\n                  <label for="stream-url" class="block text-sm font-medium mb-1">URL</label>\n                  <input \n                    type="text" \n                    id="stream-url" \n                    name="url"\n                    class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                    placeholder="rtsp://example.com/stream" \n                    value=',"\n                    onChange=",'\n                    required\n                  />\n                </div>\n                <div class="form-group flex items-center">\n                  <input \n                    type="checkbox" \n                    id="stream-enabled" \n                    name="enabled"\n                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"\n                    checked=',"\n                    onChange=",'\n                  />\n                  <label for="stream-enabled" class="ml-2 block text-sm">Stream Active</label>\n                  <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">Enable/disable all stream processing</span>\n                </div>\n                <div class="form-group flex items-center">\n                  <input \n                    type="checkbox" \n                    id="stream-streaming-enabled" \n                    name="streamingEnabled"\n                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"\n                    checked=',"\n                    onChange=",'\n                  />\n                  <label for="stream-streaming-enabled" class="ml-2 block text-sm">Live View Enabled</label>\n                  <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">Enable/disable live viewing in browser</span>\n                </div>\n                <div class="form-group flex items-center">\n                  <input \n                    type="checkbox" \n                    id="stream-is-onvif" \n                    name="isOnvif"\n                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"\n                    checked=',"\n                    onChange=",'\n                  />\n                  <label for="stream-is-onvif" class="ml-2 block text-sm">ONVIF Camera</label>\n                  <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">Mark this stream as an ONVIF camera for special handling</span>\n                </div>\n                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n                  <div class="form-group">\n                    <label for="stream-width" class="block text-sm font-medium mb-1">Width</label>\n                    <input \n                      type="number" \n                      id="stream-width" \n                      name="width"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="320" \n                      max="1920" \n                      value=',"\n                      onChange=",'\n                    />\n                  </div>\n                  <div class="form-group">\n                    <label for="stream-height" class="block text-sm font-medium mb-1">Height</label>\n                    <input \n                      type="number" \n                      id="stream-height" \n                      name="height"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="240" \n                      max="1080" \n                      value=',"\n                      onChange=",'\n                    />\n                  </div>\n                </div>\n                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">\n                  <div class="form-group">\n                    <label for="stream-fps" class="block text-sm font-medium mb-1">FPS</label>\n                    <input \n                      type="number" \n                      id="stream-fps" \n                      name="fps"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="1" \n                      max="30" \n                      value=',"\n                      onChange=",'\n                    />\n                  </div>\n                  <div class="form-group">\n                    <label for="stream-codec" class="block text-sm font-medium mb-1">Codec</label>\n                    <select \n                      id="stream-codec" \n                      name="codec"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      value=',"\n                      onChange=",'\n                    >\n                      <option value="h264">H.264</option>\n                      <option value="h265">H.265</option>\n                    </select>\n                  </div>\n                  <div class="form-group">\n                    <label for="stream-protocol" class="block text-sm font-medium mb-1">Protocol</label>\n                    <select \n                      id="stream-protocol" \n                      name="protocol"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      value=',"\n                      onChange=",'\n                    >\n                      <option value="0">TCP</option>\n                      <option value="1">UDP</option>\n                    </select>\n                    <span class="text-xs text-gray-500 dark:text-gray-400">Connection protocol (ONVIF cameras use either TCP or UDP)</span>\n                  </div>\n                </div>\n                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n                  <div class="form-group">\n                    <label for="stream-priority" class="block text-sm font-medium mb-1">Priority</label>\n                    <select \n                      id="stream-priority" \n                      name="priority"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      value=',"\n                      onChange=",'\n                    >\n                      <option value="1">Low (1)</option>\n                      <option value="5">Medium (5)</option>\n                      <option value="10">High (10)</option>\n                    </select>\n                  </div>\n                  <div class="form-group">\n                    <label for="stream-segment" class="block text-sm font-medium mb-1">Segment Duration (seconds)</label>\n                    <input \n                      type="number" \n                      id="stream-segment" \n                      name="segment"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="60" \n                      max="3600" \n                      value=',"\n                      onChange=",'\n                    />\n                  </div>\n                </div>\n                <div class="form-group flex items-center">\n                  <input \n                    type="checkbox" \n                    id="stream-record" \n                    name="record"\n                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"\n                    checked=',"\n                    onChange=",'\n                  />\n                  <label for="stream-record" class="ml-2 block text-sm">Record</label>\n                </div>\n                <div class="form-group flex items-center">\n                  <input \n                    type="checkbox" \n                    id="stream-record-audio" \n                    name="recordAudio"\n                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"\n                    checked=',"\n                    onChange=",'\n                  />\n                  <label for="stream-record-audio" class="ml-2 block text-sm">Record Audio</label>\n                  <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">Include audio in recordings if available in the stream</span>\n                </div>\n                \n                <!-- Detection-based recording options -->\n                <div class="mt-6 mb-2 pb-1 border-b border-gray-200 dark:border-gray-700">\n                  <h4 class="text-md font-medium">Detection-Based Recording</h4>\n                </div>\n                <div class="form-group flex items-center">\n                  <input \n                    type="checkbox" \n                    id="stream-detection-enabled" \n                    name="detectionEnabled"\n                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"\n                    checked=',"\n                    onChange=",'\n                  />\n                  <label for="stream-detection-enabled" class="ml-2 block text-sm">Enable Detection-Based Recording</label>\n                  <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">Only record when objects are detected</span>\n                </div>\n                <div class="form-group" style=','>\n                  <label for="stream-detection-model" class="block text-sm font-medium mb-1">Detection Model</label>\n                  <div class="flex space-x-2">\n                    <select \n                      id="stream-detection-model" \n                      name="detectionModel"\n                      class="flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      value=',"\n                      onChange=",'\n                    >\n                      <option value="">Select a model</option>\n                      ','\n                    </select>\n                    <button \n                      id="refresh-models-btn" \n                      class="p-2 rounded-md bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none"\n                      title="Refresh Models"\n                      onClick=','\n                      type="button"\n                    >\n                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">\n                        <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd"></path>\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n                <div class="form-group" style=','>\n                  <label for="stream-detection-threshold" class="block text-sm font-medium mb-1">Detection Threshold</label>\n                  <div class="flex items-center space-x-2">\n                    <input \n                      type="range" \n                      id="stream-detection-threshold" \n                      name="detectionThreshold"\n                      class="flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"\n                      min="0" \n                      max="100" \n                      step="1" \n                      value=',"\n                      onInput=",'\n                    />\n                    <span id="stream-threshold-value" class="font-medium text-blue-600 dark:text-blue-400 min-w-[3rem] text-center">\n                      ','%\n                    </span>\n                  </div>\n                </div>\n                <div class="grid grid-cols-1 md:grid-cols-3 gap-4" style=','>\n                  <div class="form-group">\n                    <label for="stream-detection-interval" class="block text-sm font-medium mb-1">Detection Interval (frames)</label>\n                    <input \n                      type="number" \n                      id="stream-detection-interval" \n                      name="detectionInterval"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="1" \n                      max="100" \n                      value=',"\n                      onChange=",'\n                    />\n                    <span class="text-xs text-gray-500 dark:text-gray-400">Detect on every Nth frame</span>\n                  </div>\n                  <div class="form-group">\n                    <label for="stream-pre-buffer" class="block text-sm font-medium mb-1">Pre-detection Buffer (seconds)</label>\n                    <input \n                      type="number" \n                      id="stream-pre-buffer" \n                      name="preBuffer"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="0" \n                      max="60" \n                      value=',"\n                      onChange=",'\n                    />\n                    <span class="text-xs text-gray-500 dark:text-gray-400">Seconds to keep before detection</span>\n                  </div>\n                  <div class="form-group">\n                    <label for="stream-post-buffer" class="block text-sm font-medium mb-1">Post-detection Buffer (seconds)</label>\n                    <input \n                      type="number" \n                      id="stream-post-buffer" \n                      name="postBuffer"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      min="0" \n                      max="300" \n                      value=',"\n                      onChange=",'\n                    />\n                    <span class="text-xs text-gray-500 dark:text-gray-400">Seconds to keep after detection</span>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class="flex justify-between p-4 border-t border-gray-200 dark:border-gray-700">\n              <button \n                id="stream-test-btn" \n                class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"\n                onClick=','\n                type="button"\n              >\n                Test Connection\n              </button>\n              <div class="space-x-2">\n                <button \n                  id="stream-save-btn" \n                  class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"\n                  onClick=','\n                  type="button"\n                >\n                  Save\n                </button>\n                <button \n                  id="stream-cancel-btn" \n                  class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors"\n                  onClick=','\n                  type="button"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      '])),p?"Edit Stream":"Add Stream",V,p?"bg-gray-100 dark:bg-gray-800":"",r.name,i,p,r.url,i,r.enabled,i,r.streamingEnabled,i,r.isOnvif,i,r.width,i,r.height,i,r.fps,i,r.codec,i,r.protocol,i,r.priority,i,r.segment,i,r.record,i,r.recordAudio,i,r.detectionEnabled,i,r.detectionEnabled?"":"display: none",r.detectionModel,i,ye.map(e=>l(Z||(Z=d(["\n                        <option key="," value=",">","</option>\n                      "])),e.id,e.id,e.name)),B,r.detectionEnabled?"":"display: none",r.detectionThreshold,Ce,r.detectionThreshold,r.detectionEnabled?"":"display: none",r.detectionInterval,i,r.preBuffer,i,r.postBuffer,i,Se,De,V),E&&l(ie||(ie=d(['\n        <div id="onvif-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300">\n          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">\n            <div class="flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700">\n              <h3 class="text-lg font-medium">ONVIF Camera Discovery</h3>\n              <span class="text-2xl cursor-pointer" onClick=','>Ã—</span>\n            </div>\n            <div class="p-4">\n              <div class="mb-4 flex justify-between items-center">\n                <h4 class="text-md font-medium">Discovered Devices</h4>\n                <button \n                  id="discover-btn" \n                  class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors focus:outline-none"\n                  onClick=',"\n                  disabled=",'\n                  type="button"\n                >\n                  ','\n                </button>\n              </div>\n              \n              <div class="overflow-x-auto">\n                <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">\n                  <thead class="bg-gray-50 dark:bg-gray-700">\n                    <tr>\n                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">IP Address</th>\n                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Manufacturer</th>\n                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Model</th>\n                      <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">\n                    ','\n                  </tbody>\n                </table>\n              </div>\n              \n              <div class="mt-6 mb-4">\n                <h4 class="text-md font-medium mb-2">Authentication</h4>\n                <p class="text-sm text-gray-500 dark:text-gray-400 mb-3">\n                  Enter credentials to connect to the selected ONVIF device. Credentials are not needed for discovery, only for connecting to devices.\n                </p>\n                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n                  <div class="form-group">\n                    <label for="onvif-username" class="block text-sm font-medium mb-1">Username</label>\n                    <input \n                      type="text" \n                      id="onvif-username" \n                      name="username"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      placeholder="admin" \n                      value=',"\n                      onChange=",'\n                    />\n                  </div>\n                  <div class="form-group">\n                    <label for="onvif-password" class="block text-sm font-medium mb-1">Password</label>\n                    <input \n                      type="password" \n                      id="onvif-password" \n                      name="password"\n                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                      placeholder="password" \n                      value=',"\n                      onChange=","\n                    />\n                  </div>\n                </div>\n              </div>\n              \n              ",'\n            </div>\n            <div class="flex justify-end p-4 border-t border-gray-200 dark:border-gray-700">\n              <button \n                id="onvif-close-btn" \n                class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors"\n                onClick=','\n                type="button"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      '])),()=>h(!1),Ne,O,O?l(te||(te=d(['\n                    <span class="flex items-center">\n                      Discovering\n                      <span class="ml-1 flex space-x-1">\n                        <span class="animate-pulse delay-0 h-1.5 w-1.5 bg-white rounded-full"></span>\n                        <span class="animate-pulse delay-150 h-1.5 w-1.5 bg-white rounded-full"></span>\n                        <span class="animate-pulse delay-300 h-1.5 w-1.5 bg-white rounded-full"></span>\n                      </span>\n                    </span>\n                  ']))):"Start Discovery",w.length===0?l(ae||(ae=d(['\n                      <tr>\n                        <td colspan="4" class="px-6 py-4 text-center text-gray-500 dark:text-gray-400">\n                          ',"\n                        </td>\n                      </tr>\n                    "])),O?l(re||(re=d(['\n                            <div class="flex items-center justify-center">\n                              <span>Discovering devices</span>\n                              <span class="ml-1 flex space-x-1">\n                                <span class="animate-pulse delay-0 h-1.5 w-1.5 bg-gray-500 dark:bg-gray-400 rounded-full"></span>\n                                <span class="animate-pulse delay-150 h-1.5 w-1.5 bg-gray-500 dark:bg-gray-400 rounded-full"></span>\n                                <span class="animate-pulse delay-300 h-1.5 w-1.5 bg-gray-500 dark:bg-gray-400 rounded-full"></span>\n                              </span>\n                            </div>\n                          ']))):'No devices discovered yet. Click "Start Discovery" to scan your network.'):w.map(e=>l(oe||(oe=d(["\n                      <tr key=",' class="hover:bg-gray-50 dark:hover:bg-gray-700">\n                        <td class="px-6 py-4 whitespace-nowrap">','</td>\n                        <td class="px-6 py-4 whitespace-nowrap">','</td>\n                        <td class="px-6 py-4 whitespace-nowrap">','</td>\n                        <td class="px-6 py-4 whitespace-nowrap">\n                          <button \n                            class="px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none"\n                            onClick=',"\n                            disabled=",'\n                            type="button"\n                          >\n                            ',"\n                          </button>\n                        </td>\n                      </tr>\n                    "])),e.ip_address,e.ip_address,e.manufacturer||"Unknown",e.model||"Unknown",()=>Ae(e),U&&b&&b.ip_address===e.ip_address,U&&b&&b.ip_address===e.ip_address?l(se||(se=d(['\n                              <span class="flex items-center">\n                                Loading\n                                <span class="ml-1 flex space-x-1">\n                                  <span class="animate-pulse delay-0 h-1.5 w-1.5 bg-white rounded-full"></span>\n                                  <span class="animate-pulse delay-150 h-1.5 w-1.5 bg-white rounded-full"></span>\n                                  <span class="animate-pulse delay-300 h-1.5 w-1.5 bg-white rounded-full"></span>\n                                </span>\n                              </span>\n                            ']))):"Connect")),f.username,L,f.password,L,b&&D.length>0&&l(de||(de=d(['\n                <div class="mt-6">\n                  <h4 class="text-md font-medium mb-2">Available Profiles for ','</h4>\n                  <div class="overflow-x-auto">\n                    <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">\n                      <thead class="bg-gray-50 dark:bg-gray-700">\n                        <tr>\n                          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Name</th>\n                          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Resolution</th>\n                          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Encoding</th>\n                          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">FPS</th>\n                          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">\n                        ',"\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              "])),b.ip_address,D.map(e=>l(ne||(ne=d(["\n                          <tr key=",' class="hover:bg-gray-50 dark:hover:bg-gray-700">\n                            <td class="px-6 py-4 whitespace-nowrap">','</td>\n                            <td class="px-6 py-4 whitespace-nowrap">',"x",'</td>\n                            <td class="px-6 py-4 whitespace-nowrap">','</td>\n                            <td class="px-6 py-4 whitespace-nowrap">','</td>\n                            <td class="px-6 py-4 whitespace-nowrap">\n                              <button \n                                class="px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors focus:outline-none"\n                                onClick=','\n                                type="button"\n                              >\n                                Add as Stream\n                              </button>\n                            </td>\n                          </tr>\n                        '])),e.token,e.name,e.width,e.height,e.encoding,e.fps,()=>Me(e)))),()=>h(!1)),Ve&&l(ce||(ce=d(['\n        <div id="custom-name-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300">\n          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full">\n            <div class="flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700">\n              <h3 class="text-lg font-medium">Stream Name</h3>\n              <span class="text-2xl cursor-pointer" onClick=','>Ã—</span>\n            </div>\n            <div class="p-4">\n              <div class="mb-4">\n                <label for="custom-stream-name" class="block text-sm font-medium mb-1">Enter a name for this stream:</label>\n                <input \n                  type="text" \n                  id="custom-stream-name" \n                  class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n                  value=',"\n                  onChange=",'\n                />\n                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">\n                  This name will be used to identify the stream in the system.\n                </p>\n              </div>\n            </div>\n            <div class="flex justify-end p-4 border-t border-gray-200 dark:border-gray-700 space-x-2">\n              <button \n                class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors"\n                onClick=','\n                type="button"\n              >\n                Cancel\n              </button>\n              <button \n                class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors"\n                onClick=','\n                type="button"\n                disabled=',"\n              >\n                ","\n              </button>\n            </div>\n          </div>\n        </div>\n      "])),()=>_(!1),M,e=>H(e.target.value),()=>_(!1),Pe,!M.trim()||J,J?l(le||(le=d(['\n                  <span class="flex items-center">\n                    Adding\n                    <span class="ml-1 flex space-x-1">\n                      <span class="animate-pulse delay-0 h-1.5 w-1.5 bg-white rounded-full"></span>\n                      <span class="animate-pulse delay-150 h-1.5 w-1.5 bg-white rounded-full"></span>\n                      <span class="animate-pulse delay-300 h-1.5 w-1.5 bg-white rounded-full"></span>\n                    </span>\n                  </span>\n                ']))):"Add Stream"))}var ge;function Ge(){const g=document.getElementById("main-content");g&&Le(async()=>{const{render:m}=await import("./preact-app-Dm0PiEfO.js").then(y=>y.p);return{render:m}},__vite__mapDeps([0,1]),import.meta.url).then(({render:m})=>{m(l(ge||(ge=d(["<"," />"])),Je),g)})}export{Je as StreamsView,Ge as loadStreamsView};
//# sourceMappingURL=StreamsView-da8leUHv.js.map
