import{d as C,A as W,y as R,u as a,E as z,q as U,Q as J,k as G}from"./query-client-mfCUf3pQ.js";/* empty css               */import{s as Q,c as K,t as X,L as Y}from"./LiveView-DCEzrYae.js";import{s as Z,a as ee,b as te,c as b,d as oe,H as ne,F as re}from"./Footer-BFueUtxh.js";function ae(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}function se(){const[g,T]=C([]),[y,k]=C(()=>new URLSearchParams(window.location.search).get("layout")||"4"),[v,h]=C(()=>new URLSearchParams(window.location.search).get("stream")||""),[P,M]=C(!1),[O,$]=C(!0),[w,I]=C(()=>{const n=new URLSearchParams(window.location.search).get("page");return n?Math.max(0,parseInt(n,10)-1):0}),x=W(null),p=W({}),j=W({});R(()=>{Z(),ee(),te();const e=setInterval(()=>{Object.keys(p.current).forEach(n=>{const r=p.current[n];if(r&&(console.debug("WebRTC connection state for ".concat(n,": ").concat(r.connectionState,", ICE state: ").concat(r.iceConnectionState)),r.iceConnectionState==="failed"||r.iceConnectionState==="disconnected")){console.warn("WebRTC connection for ".concat(n," is in ").concat(r.iceConnectionState," state, will attempt reconnect")),E(n);const o=g.find(s=>s.name===n);o&&(console.log("Attempting to reconnect WebRTC for stream ".concat(n)),L(o))}})},3e4);return()=>{clearInterval(e),D()}},[g]),R(()=>{$(!0);const e=setTimeout(()=>{console.warn("Stream loading timed out"),$(!1),b("Loading streams timed out. Please try refreshing the page.")},15e3);_().then(n=>{if(clearTimeout(e),n&&n.length>0){T(n);const o=new URLSearchParams(window.location.search).get("stream");o&&n.some(s=>s.name===o)?h(o):(!v||!n.some(s=>s.name===v))&&h(n[0].name)}else console.warn("No streams returned from API");$(!1)}).catch(n=>{clearTimeout(e),console.error("Error loading streams:",n),b("Error loading streams: "+n.message),$(!1)})},[]),R(()=>{F()},[y,v,g,w]);const _=async()=>{try{const e=new Promise((m,d)=>{setTimeout(()=>d(new Error("Request timed out")),5e3)}),n=fetch("/api/streams"),r=await Promise.race([n,e]);if(!r.ok)throw new Error("Failed to load streams");const o=new Promise((m,d)=>{setTimeout(()=>d(new Error("JSON parsing timed out")),3e3)}),s=r.json(),t=(await Promise.race([s,o])||[]).map(m=>{const d=new Promise((u,H)=>{setTimeout(()=>H(new Error("Timeout fetching details for stream ".concat(m.name))),3e3)}),f=fetch("/api/streams/".concat(encodeURIComponent(m.id||m.name))).then(u=>{if(!u.ok)throw new Error("Failed to load details for stream ".concat(m.name));return u.json()});return Promise.race([f,d]).catch(u=>(console.error("Error loading details for stream ".concat(m.name,":"),u),m))}),l=await Promise.all(t);console.log("Loaded detailed streams for WebRTC view:",l);const c=l.filter(m=>m.is_deleted?(console.log("Stream ".concat(m.name," is soft deleted, filtering out")),!1):m.enabled?m.streaming_enabled?!0:(console.log("Stream ".concat(m.name," is not configured for HLS, filtering out")),!1):(console.log("Stream ".concat(m.name," is inactive, filtering out")),!1));return console.log("Filtered streams for WebRTC view:",c),c||[]}catch(e){return console.error("Error loading streams for WebRTC view:",e),b("Error loading streams: "+e.message),[]}},S=()=>{switch(y){case"1":return 1;case"2":return 2;case"4":return 4;case"6":return 6;case"9":return 9;case"16":return 16;default:return 4}},F=()=>{if(!x.current)return;const e=x.current.querySelector(".placeholder");if(x.current.innerHTML="",e&&g.length===0){x.current.appendChild(e),setTimeout(()=>{document.body.contains(preventClickOverlay)&&document.body.removeChild(preventClickOverlay)},100);return}let n=g;if(y==="1"&&v)n=g.filter(o=>o.name===v);else{const o=S(),s=Math.ceil(g.length/o);if(w>=s){I(Math.max(0,s-1));return}const i=w*o,t=Math.min(i+o,g.length);n=g.slice(i,t)}const r=n.map(o=>o.name);Object.keys(p.current).forEach(o=>{r.includes(o)||(console.log("Cleaning up WebRTC connection for stream ".concat(o," as it's not on the current page")),E(o))}),n.forEach((o,s)=>{q(o),p.current[o.name]?console.log("WebRTC connection for stream ".concat(o.name," already exists, reusing")):setTimeout(()=>{L(o)},s*500)}),setTimeout(()=>{document.body.contains(preventClickOverlay)&&document.body.removeChild(preventClickOverlay)},100)},q=e=>{const n=e.id||e.name,r=document.createElement("div");r.className="video-cell",r.dataset.streamName=e.name,r.dataset.streamId=n,r.style.position="relative";const o=document.createElement("video");o.id="video-".concat(e.name.replace(/\s+/g,"-")),o.className="video-element",o.playsInline=!0,o.autoplay=!0,o.muted=!0,o.style.pointerEvents="none";const s=document.createElement("div");s.className="loading-indicator",s.innerHTML='\n      <div className="spinner"></div>\n      <p>Connecting...</p>\n    ',s.style.position="absolute",s.style.top="0",s.style.left="0",s.style.width="100%",s.style.height="100%",s.style.display="flex",s.style.flexDirection="column",s.style.justifyContent="center",s.style.alignItems="center",s.style.backgroundColor="rgba(0, 0, 0, 0.7)",s.style.color="white",s.style.zIndex="20",s.style.pointerEvents="none";const i=document.createElement("div");i.className="error-indicator",i.style.display="none",i.style.position="absolute",i.style.top="0",i.style.left="0",i.style.width="100%",i.style.height="100%",i.style.flexDirection="column",i.style.justifyContent="center",i.style.alignItems="center",i.style.backgroundColor="rgba(0, 0, 0, 0.7)",i.style.color="white",i.style.zIndex="20";const t=document.createElement("div");t.className="stream-name-overlay",t.textContent=e.name,t.style.position="absolute",t.style.top="10px",t.style.left="10px",t.style.padding="5px 10px",t.style.backgroundColor="rgba(0, 0, 0, 0.5)",t.style.color="white",t.style.borderRadius="4px",t.style.fontSize="14px",t.style.zIndex="15",t.style.pointerEvents="none";const l=document.createElement("div");l.className="stream-controls",l.innerHTML='\n      <button class="snapshot-btn" title="Take Snapshot" data-id="'.concat(n,'" data-name="').concat(e.name,'">\n        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle></svg>\n      </button>\n      <button class="fullscreen-btn" title="Toggle Fullscreen" data-id="').concat(n,'" data-name="').concat(e.name,'">\n        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path></svg>\n      </button>\n    '),l.style.position="absolute",l.style.bottom="10px",l.style.right="10px",l.style.display="flex",l.style.gap="10px",l.style.zIndex="30",l.style.backgroundColor="rgba(0, 0, 0, 0.5)",l.style.padding="5px",l.style.borderRadius="4px",l.style.pointerEvents="auto";const c=document.createElement("canvas");c.id="canvas-".concat(e.name.replace(/\s+/g,"-")),c.className="detection-overlay",c.style.position="absolute",c.style.top="0",c.style.left="0",c.style.width="100%",c.style.height="100%",c.style.pointerEvents="none",c.style.zIndex="5",r.appendChild(o),r.appendChild(s),r.appendChild(i),r.appendChild(t),r.appendChild(l),r.appendChild(c),x.current.appendChild(r),r.querySelectorAll("button").forEach(u=>{u.style.position="relative",u.style.zIndex="30",u.style.pointerEvents="auto",u.style.cursor="pointer",u.style.backgroundColor="transparent",u.style.border="none",u.style.padding="5px",u.style.borderRadius="4px",u.style.color="white",u.style.transition="background-color 0.2s",u.addEventListener("mouseover",()=>{u.style.backgroundColor="rgba(255, 255, 255, 0.2)"}),u.addEventListener("mouseout",()=>{u.style.backgroundColor="transparent"})});const d=r.querySelector(".snapshot-btn");d&&d.addEventListener("click",u=>{console.log("Snapshot button clicked for stream:",e.name),u.preventDefault(),u.stopPropagation(),A(n,u)});const f=r.querySelector(".fullscreen-btn");f&&f.addEventListener("click",u=>{console.log("Fullscreen button clicked for stream:",e.name),u.preventDefault(),u.stopPropagation(),V(e.name)})},L=e=>{const n="video-".concat(e.name.replace(/\s+/g,"-")),r=document.getElementById(n),o=r?r.closest(".video-cell"):null;if(!r||!o)return;const s=o.querySelector(".loading-indicator");s&&(s.style.display="flex");const i="canvas-".concat(e.name.replace(/\s+/g,"-"));let t=document.getElementById(i);t||(t=document.createElement("canvas"),t.id=i,t.className="detection-overlay",t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="100%",t.style.pointerEvents="none",o.appendChild(t));const l=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}],iceTransportPolicy:"all",bundlePolicy:"balanced",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});p.current[e.name]=l,l.ontrack=d=>{console.log("Track received for stream ".concat(e.name,":"),d),d.track.kind==="video"&&(r.srcObject=d.streams[0],r.onloadeddata=()=>{s&&(s.style.display="none")})},l.onicecandidate=d=>{d.candidate&&console.log("ICE candidate for stream ".concat(e.name,":"),d.candidate)},l.oniceconnectionstatechange=()=>{console.log("ICE connection state for stream ".concat(e.name,":"),l.iceConnectionState),(l.iceConnectionState==="failed"||l.iceConnectionState==="disconnected")&&N(e.name,"WebRTC connection failed")},l.addTransceiver("video",{direction:"recvonly"}),l.addTransceiver("audio",{direction:"recvonly"});const c={offerToReceiveAudio:!0,offerToReceiveVideo:!0},m=setTimeout(()=>{console.warn("WebRTC setup timed out for stream ".concat(e.name)),N(e.name,"WebRTC setup timed out"),p.current[e.name]&&E(e.name)},15e3);l.createOffer(c).then(d=>(console.log("Created offer for stream ".concat(e.name,":"),d),console.log("Original SDP for stream ".concat(e.name,":"),d.sdp),(!d.sdp.includes("a=ice-ufrag:")||!d.sdp.includes("a=ice-pwd:"))&&console.warn("SDP for stream ".concat(e.name," is missing ice-ufrag or ice-pwd!")),console.log("Using original offer for stream ".concat(e.name)),l.setLocalDescription(d))).then(()=>(console.log("Set local description for stream ".concat(e.name)),B(e.name,l.localDescription))).then(d=>(console.log("Received answer for stream ".concat(e.name,":"),d),l.setRemoteDescription(new RTCSessionDescription(d)))).then(()=>{console.log("Set remote description for stream ".concat(e.name)),clearTimeout(m),console.log("Stream ".concat(e.name," detection settings:"),{detection_based_recording:e.detection_based_recording,detection_model:e.detection_model,detection_threshold:e.detection_threshold}),e.detection_based_recording&&e.detection_model?(console.log("Starting detection polling for stream ".concat(e.name)),Q(e.name,t,r,j.current)):console.log("Detection not enabled for stream ".concat(e.name))}).catch(d=>{clearTimeout(m),console.error("Error setting up WebRTC for stream ".concat(e.name,":"),d),N(e.name,d.message)})},B=async(e,n)=>{try{const r=localStorage.getItem("auth"),o={type:n.type,sdp:n.sdp};console.log("Sending formatted offer for stream ".concat(e,":"),o);const s=new AbortController,i=s.signal,t=setTimeout(()=>{console.warn("Aborting WebRTC offer request for stream ".concat(e," due to timeout")),s.abort()},8e3);try{const l=await fetch("/api/webrtc?src=".concat(encodeURIComponent(e)),{method:"POST",headers:{"Content-Type":"application/json",...r?{Authorization:"Basic "+r}:{}},body:JSON.stringify(o),signal:i});if(clearTimeout(t),!l.ok)throw new Error("Failed to send offer: ".concat(l.status," ").concat(l.statusText));const c=new AbortController,m=c.signal,d=setTimeout(()=>{console.warn("Aborting JSON parsing for stream ".concat(e," due to timeout")),c.abort()},5e3);try{const f=await l.text();clearTimeout(d);try{return JSON.parse(f)}catch(u){throw console.error("Error parsing JSON for stream ".concat(e,":"),u),console.log("Raw response text: ".concat(f)),new Error("Failed to parse WebRTC answer: ".concat(u.message))}}catch(f){throw clearTimeout(d),f.name==="AbortError"?new Error("WebRTC answer parsing timed out for stream ".concat(e)):f}}catch(l){throw clearTimeout(t),l.name==="AbortError"?new Error("WebRTC offer request timed out for stream ".concat(e)):l}}catch(r){throw console.error("Error sending offer for stream ".concat(e,":"),r),r}},N=(e,n)=>{console.error("WebRTC error for stream ".concat(e,":"),n);const r="video-".concat(e.replace(/\s+/g,"-")),o=document.getElementById(r);if(!o)return;const s=o.closest(".video-cell");if(!s)return;const i=s.querySelector(".loading-indicator");i&&(i.style.display="none");let t=s.querySelector(".error-indicator");t||(t=document.createElement("div"),t.className="error-indicator",t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="100%",t.style.display="flex",t.style.flexDirection="column",t.style.justifyContent="center",t.style.alignItems="center",t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.style.color="white",t.style.zIndex="20",s.appendChild(t)),t.innerHTML='\n      <div className="error-icon">!</div>\n      <p>'.concat(n||"WebRTC connection failed",'</p>\n      <button className="retry-button mt-4 px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors">Retry</button>\n    '),t.style.display="flex",t.style.pointerEvents="auto";const l=t.querySelector(".retry-button");l&&(l.style.position="relative",l.style.zIndex="30",l.style.pointerEvents="auto",l.addEventListener("click",()=>{i&&(i.style.display="flex"),t.style.display="none",E(e),fetch("/api/streams/".concat(encodeURIComponent(e))).then(c=>c.json()).then(c=>{L(c)}).catch(c=>{console.error("Error fetching stream info:",c),t.style.display="flex";const m=t.querySelector("p");m&&(m.textContent="Could not reconnect: "+c.message),i&&(i.style.display="none")})}))},E=e=>{p.current[e]&&(p.current[e].close(),delete p.current[e]);const n="video-".concat(e.replace(/\s+/g,"-")),r=document.getElementById(n);r&&(r.srcObject=null),K(e,j.current)},D=()=>{Object.keys(p.current).forEach(e=>{E(e)})},A=(e,n)=>{console.log("Taking snapshot of stream with ID: ".concat(e),n);const r=document.querySelector('.snapshot-btn[data-id="'.concat(e,'"]'));let o;if(r)o=r.getAttribute("data-name"),console.log("Found stream name from button attribute: ".concat(o));else{const c=n?n.currentTarget||n.target:null;console.log("Clicked button:",c);const m=c?c.closest(".video-cell"):null;if(console.log("Video cell:",m),m&&(o=m.dataset.streamName,console.log("Found stream name from video cell: ".concat(o))),!o){const d=g.find(f=>f.id===e||f.name===e);d&&(o=d.name,console.log("Found stream name from streams array: ".concat(o)))}}if(!o){console.error("Stream name not found for snapshot"),b("Cannot take snapshot: Stream not identified");return}const s="video-".concat(o.replace(/\s+/g,"-")),i=document.getElementById(s);if(!i){console.error("Video element not found for stream:",o),b("Cannot take snapshot: Video element not found");return}const t=document.createElement("canvas");if(t.width=i.videoWidth,t.height=i.videoHeight,t.style.pointerEvents="none",t.width===0||t.height===0){console.error("Invalid video dimensions:",t.width,t.height),b("Cannot take snapshot: Video not loaded or has invalid dimensions");return}t.getContext("2d").drawImage(i,0,0,t.width,t.height);try{window.__snapshotCanvas=t;const c=new Date().toISOString().replace(/[:.]/g,"-"),m="snapshot-".concat(o.replace(/\s+/g,"-"),"-").concat(c,".jpg");window.__snapshotFileName=m,oe(t.toDataURL("image/jpeg",.95),"Snapshot: ".concat(o)),b("Snapshot taken successfully")}catch(c){console.error("Error creating snapshot:",c),b("Failed to create snapshot: "+c.message)}},V=e=>{console.log("Toggling fullscreen for stream: ".concat(e));const n="video-".concat(e.replace(/\s+/g,"-")),r=document.getElementById(n),o=r?r.closest(".video-cell"):null;if(!o){console.error("Stream not found:",e);return}document.fullscreenElement?(console.log("Exiting fullscreen mode"),document.exitFullscreen()):(console.log("Entering fullscreen mode for video cell"),o.requestFullscreen().catch(s=>{console.error("Error attempting to enable fullscreen: ".concat(s.message)),b("Could not enable fullscreen mode: ".concat(s.message))}))};return a("section",{id:"live-page",className:"page ".concat(P?"fullscreen-mode":""),children:[a("div",{className:"page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow",children:[a("div",{className:"flex items-center space-x-2",children:[a("h2",{className:"text-xl font-bold mr-4",children:"Live View"}),a("div",{className:"flex space-x-2",children:a("button",{id:"hls-toggle-btn",className:"px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800",onClick:()=>window.location.href="/hls.html",children:"HLS View"})})]}),a("div",{className:"controls flex items-center space-x-2",children:[a("div",{className:"flex items-center",children:[a("label",{for:"layout-selector",className:"mr-2",children:"Layout:"}),a("select",{id:"layout-selector",className:"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600",value:y,onChange:e=>{const n=e.target.value;k(n),I(0)},children:[a("option",{value:"1",children:"1 Stream"}),a("option",{value:"2",children:"2 Streams"}),a("option",{value:"4",selected:!0,children:"4 Streams"}),a("option",{value:"6",children:"6 Streams"}),a("option",{value:"9",children:"9 Streams"}),a("option",{value:"16",children:"16 Streams"})]})]}),y==="1"&&a("div",{className:"flex items-center",children:[a("label",{for:"stream-selector",className:"mr-2",children:"Stream:"}),a("select",{id:"stream-selector",className:"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600",value:v,onChange:e=>{const n=e.target.value;h(n)},children:g.map(e=>a("option",{value:e.name,children:e.name},e.name))})]}),a("button",{id:"fullscreen-btn",className:"p-2 rounded-full bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none",onClick:()=>X(P,M),title:"Toggle Fullscreen",children:a("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",children:a("path",{d:"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"})})})]})]}),a("div",{className:"flex flex-col space-y-4",children:[a("div",{id:"video-grid",className:"video-container layout-".concat(y),ref:x,children:O?a("div",{className:"flex justify-center items-center col-span-full row-span-full h-64 w-full",children:a("div",{className:"flex flex-col items-center justify-center py-8",children:[a("div",{className:"inline-block animate-spin rounded-full border-4 border-gray-300 dark:border-gray-600 border-t-blue-600 dark:border-t-blue-500 w-16 h-16"}),a("p",{className:"mt-4 text-gray-700 dark:text-gray-300",children:"Loading streams..."})]})}):g.length===0?a("div",{className:"placeholder flex flex-col justify-center items-center col-span-full row-span-full bg-white dark:bg-gray-800 rounded-lg shadow-md text-center p-8",children:[a("p",{className:"mb-6 text-gray-600 dark:text-gray-300 text-lg",children:"No streams configured"}),a("a",{href:"streams.html",className:"btn-primary px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors",children:"Configure Streams"})]}):null}),y!=="1"&&g.length>S()?a("div",{className:"pagination-controls flex justify-center items-center space-x-4 mt-4",children:[a("button",{className:"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",onClick:()=>I(Math.max(0,w-1)),disabled:w===0,children:"Previous"}),a("span",{className:"text-gray-700 dark:text-gray-300",children:["Page ",w+1," of ",Math.ceil(g.length/S())]}),a("button",{className:"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",onClick:()=>I(Math.min(Math.ceil(g.length/S())-1,w+1)),disabled:w>=Math.ceil(g.length/S())-1,children:"Next"})]}):null]})]})}function le(){const[g,T]=C(!1),[y,k]=C(!0);return R(()=>{async function v(){try{const h=await fetch("/api/settings");if(!h.ok){console.error("Failed to fetch settings:",h.status,h.statusText),k(!1);return}(await h.json()).webrtc_disabled?(console.log("WebRTC is disabled, using HLS view"),T(!0)):(console.log("WebRTC is enabled, using WebRTC view"),T(!1))}catch(h){console.error("Error checking WebRTC status:",h)}finally{k(!1)}}v()},[]),y?a("div",{className:"loading",children:"Loading..."}):a(G,{children:[a(ne,{}),g?a(Y,{isWebRTCDisabled:!0}):a(se,{}),a(re,{})]})}document.addEventListener("DOMContentLoaded",()=>{const g=document.getElementById("main-content");g&&z(a(J,{client:U,children:a(le,{})}),g)});export{ae as __vite_legacy_guard};
//# sourceMappingURL=index--r0EVo8K.js.map
