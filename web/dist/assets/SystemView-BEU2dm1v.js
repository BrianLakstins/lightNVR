const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./preact-app-_8hsa7bb.js","../css/preact-app.css"])))=>i.map(i=>d[i]);
var V=Object.freeze,ke=Object.defineProperty;var c=(e,t)=>V(ke(e,"raw",{value:V(t||e.slice())}));import{h as u,d as S,A as D,y,u as z,i as j,_ as O,s as x,j as U}from"./preact-app-_8hsa7bb.js";import{C as $e}from"./LoadingIndicator-Cb6tPvOW.js";var B;function xe({restartSystem:e,shutdownSystem:t,isRestarting:o,isShuttingDown:s}){return u(B||(B=c(['\n    <div class="page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">\n      <h2 class="text-xl font-bold">System</h2>\n      <div class="controls space-x-2">\n        <button \n          id="restart-btn" \n          class="px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=",'\n        >\n          Restart\n        </button>\n        <button \n          id="shutdown-btn" \n          class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=","\n        >\n          Shutdown\n        </button>\n      </div>\n    </div>\n  "])),e,o||s,t,o||s)}var q;function Se({systemInfo:e,formatUptime:t}){var o,s,l,n;return u(q||(q=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">System Information</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Version:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Uptime:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Model:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Cores:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span class="font-medium">CPU Usage:</span>\n          <div class="w-32 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n          <span>","</span>\n        </div>\n      </div>\n    </div>\n  "])),e.version||"Unknown",e.uptime?t(e.uptime):"Unknown",((o=e.cpu)==null?void 0:o.model)||"Unknown",((s=e.cpu)==null?void 0:s.cores)||"Unknown","width: ".concat(((l=e.cpu)==null?void 0:l.usage)||0,"%"),(n=e.cpu)!=null&&n.usage?"".concat(e.cpu.usage.toFixed(1),"%"):"Unknown")}var H;function Le({systemInfo:e,formatBytes:t}){var g,b,h,w,p,M,$,E,W,F,v,m;const o=((g=e.memory)==null?void 0:g.used)||0,s=((b=e.go2rtcMemory)==null?void 0:b.used)||0,l=((h=e.memory)==null?void 0:h.total)||0,n=o+s,a=l?(n/l*100).toFixed(1):0,d=n?(o/n*100).toFixed(1):0,r=n?(s/n*100).toFixed(1):0;return u(H||(H=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Memory & Storage</h3>\n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Process Memory:</span>\n            <div>\n              <span class="inline-block px-2 py-0.5 mr-1 text-xs rounded bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">\n                LightNVR: ','\n              </span>\n              <span class="inline-block px-2 py-0.5 text-xs rounded bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">\n                go2rtc: ','\n              </span>\n            </div>\n          </div>\n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total memory</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=','>\n              <div class="bg-blue-600 h-2.5" style=','></div>\n              <div class="bg-green-500 h-2.5" style=','></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Memory:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">LightNVR Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),t(o),t(s),t(n),t(l),a,"width: ".concat(a,"%"),"width: ".concat(d,"%"),"width: ".concat(r,"%"),(w=e.systemMemory)!=null&&w.used?t(e.systemMemory.used):"0",(p=e.systemMemory)!=null&&p.total?t(e.systemMemory.total):"0","width: ".concat((M=e.systemMemory)!=null&&M.total?(e.systemMemory.used/e.systemMemory.total*100).toFixed(1):0,"%"),($=e.disk)!=null&&$.used?t(e.disk.used):"0",(E=e.disk)!=null&&E.total?t(e.disk.total):"0","width: ".concat((W=e.disk)!=null&&W.total?(e.disk.used/e.disk.total*100).toFixed(1):0,"%"),(F=e.systemDisk)!=null&&F.used?t(e.systemDisk.used):"0",(v=e.systemDisk)!=null&&v.total?t(e.systemDisk.total):"0","width: ".concat((m=e.systemDisk)!=null&&m.total?(e.systemDisk.used/e.systemDisk.total*100).toFixed(1):0,"%"))}var K,G,I,Y,J;function Ce({systemInfo:e,formatBytes:t}){var d;if(!e.streamStorage||!Array.isArray(e.streamStorage)||e.streamStorage.length===0)return u(K||(K=c(['\n      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n        <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n        <div class="text-gray-500 dark:text-gray-400 text-center py-4">\n          No stream storage information available\n        </div>\n      </div>\n    '])));const o=e.streamStorage.reduce((r,g)=>r+g.size,0),s=((d=e.disk)==null?void 0:d.total)||0,l=s?(o/s*100).toFixed(1):0,n=e.streamStorage.map(r=>({name:r.name,size:r.size,count:r.count,slicePercent:o?(r.size/o*100).toFixed(1):0}));n.sort((r,g)=>g.size-r.size);const a=["bg-blue-600","bg-green-500","bg-yellow-500","bg-red-500","bg-purple-500","bg-pink-500","bg-indigo-500","bg-teal-500"];return u(J||(J=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n      \n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Storage per Stream:</span>\n            <div class="flex flex-wrap justify-end gap-1">\n              ','\n            </div>\n          </div>\n          \n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total storage</span>\n          </div>\n          \n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=',">\n              ",'\n            </div>\n          </div>\n          \n          <div class="mt-4">\n            <h4 class="font-medium mb-2">Stream Details:</h4>\n            <div class="grid grid-cols-1 md:grid-cols-2 gap-2">\n              ',"\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),n.map((r,g)=>u(G||(G=c(['\n                <span class="inline-block px-2 py-0.5 text-xs rounded '," ",'">\n                  ',": ","\n                </span>\n              "])),a[g%a.length].replace("bg-","bg-opacity-20 bg-"),a[g%a.length].replace("bg-","text-"),r.name,t(r.size))),t(o),t(s),l,"width: ".concat(l,"%"),n.map((r,g)=>u(I||(I=c(['\n                <div class="',' h-2.5" style=',"></div>\n              "])),a[g%a.length],"width: ".concat(r.slicePercent,"%"))),n.map((r,g)=>u(Y||(Y=c(['\n                <a href="recordings.html?stream=','" \n                   class="flex items-center p-2 rounded bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors cursor-pointer">\n                  <div class="w-3 h-3 rounded-full mr-2 ','"></div>\n                  <div>\n                    <div class="font-medium">','</div>\n                    <div class="text-xs text-gray-500 dark:text-gray-400">\n                      '," (","%) â€¢ "," recordings\n                    </div>\n                  </div>\n                </a>\n              "])),encodeURIComponent(r.name),a[g%a.length],r.name,t(r.size),r.slicePercent,r.count)))}var Q,Z,X;function Me({systemInfo:e}){var t,o;return u(X||(X=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Network Interfaces</h3>\n      <div class="space-y-2">\n        ',"\n      </div>\n    </div>\n  "])),(o=(t=e.network)==null?void 0:t.interfaces)!=null&&o.length?e.network.interfaces.map(s=>u(Q||(Q=c(["\n          <div key=",' class="mb-2 pb-2 border-b border-gray-100 dark:border-gray-700 last:border-0">\n            <div class="flex justify-between">\n              <span class="font-medium">',":</span>\n              <span>",'</span>\n            </div>\n            <div class="text-sm text-gray-500 dark:text-gray-400">\n              MAC: '," | ","\n            </div>\n          </div>\n        "])),s.name,s.name,s.address||"No IP",s.mac||"Unknown",s.up?"Up":"Down")):u(Z||(Z=c(['<div class="text-gray-500 dark:text-gray-400">No network interfaces found</div>']))))}var ee;function Ee({systemInfo:e,formatBytes:t}){var o,s,l,n;return u(ee||(ee=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Streams & Recordings</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Active Streams:</span>\n          <span>'," / ",'</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings Size:</span>\n          <span>',"</span>\n        </div>\n      </div>\n    </div>\n  "])),((o=e.streams)==null?void 0:o.active)||0,((s=e.streams)==null?void 0:s.total)||0,((l=e.recordings)==null?void 0:l.count)||0,(n=e.recordings)!=null&&n.size?t(e.recordings.size):"0")}var te,se,oe,ne,re,le;function Pe(e){if(e==null)return u(te||(te=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">UNKNOWN</span>'])));const t=String(e).toLowerCase().trim();if(t==="error"||t==="err")return u(se||(se=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">ERROR</span>'])));if(t==="warning"||t==="warn")return u(oe||(oe=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">WARN</span>'])));if(t==="info")return u(ne||(ne=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">INFO</span>'])));if(t==="debug"||t==="dbg")return u(re||(re=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">DEBUG</span>'])));{const o=String(e).toUpperCase();return u(le||(le=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">',"</span>"])),o)}}var ie,ae,de;function Re({logs:e,logLevel:t,logCount:o,setLogLevel:s,setLogCount:l,loadLogs:n,clearLogs:a}){return u(de||(de=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 mb-4">\n      <div class="flex justify-between items-center mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">\n        <h3 class="text-lg font-semibold">System Logs</h3>\n        <div class="flex space-x-2">\n          <select \n            id="log-level" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="error">Error</option>\n            <option value="warning">Warning</option>\n            <option value="info">Info</option>\n            <option value="debug">Debug</option>\n          </select>\n          <select \n            id="log-count" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="50">50 lines</option>\n            <option value="100">100 lines</option>\n            <option value="200">200 lines</option>\n            <option value="500">500 lines</option>\n          </select>\n          <button \n            id="refresh-logs-btn" \n            class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Refresh\n          </button>\n          <button \n            id="clear-logs-btn" \n            class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Clear Logs\n          </button>\n        </div>\n      </div>\n      <div class="logs-container bg-gray-100 dark:bg-gray-900 rounded p-4 overflow-auto max-h-96 font-mono text-sm">\n        ',"\n      </div>\n    </div>\n  "])),t,d=>{const r=d.target.value;console.log("LogsView: Log level changed from ".concat(t," to ").concat(r)),s(r)},o,d=>l(parseInt(d.target.value,10)),n,a,e.length===0?u(ie||(ie=c(['\n          <div class="text-gray-500 dark:text-gray-400">No logs found</div>\n        ']))):e.map((d,r)=>u(ae||(ae=c(["\n          <div key=",' class="log-entry mb-1 last:mb-0">\n            <span class="text-gray-500 dark:text-gray-400">','</span>\n            <span class="mx-2">',"</span>\n            <span class=",">","</span>\n          </div>\n        "])),r,d.timestamp,Pe(d.level),"log-message ".concat(d.level==="error"?"text-red-600 dark:text-red-400":""),d.message)))}function N(e,t=1){if(e===0)return"0 Bytes";const o=1024,s=t<0?0:t,l=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],n=Math.floor(Math.log(e)/Math.log(o));return parseFloat((e/Math.pow(o,n)).toFixed(s))+" "+l[n]}function Ue(e){const t=Math.floor(e/86400),o=Math.floor(e%86400/3600),s=Math.floor(e%3600/60),l=Math.floor(e%60);let n="";return t>0&&(n+="".concat(t,"d ")),(o>0||t>0)&&(n+="".concat(o,"h ")),(s>0||o>0||t>0)&&(n+="".concat(s,"m ")),n+="".concat(l,"s"),n}function R(e,t){if(String(t||"").toLowerCase()==="debug")return!0;let o=2,s=2;const l=String(e||"").toLowerCase(),n=String(t||"").toLowerCase();return l==="error"?o=0:l==="warning"||l==="warn"?o=1:l==="info"?o=2:l==="debug"&&(o=3),n==="error"?s=0:n==="warning"||n==="warn"?s=1:n==="info"?s=2:n==="debug"&&(s=3),o<=s}function De({logLevel:e,logCount:t,onLogsReceived:o}){const[s,l]=S(!1),n=D(null),a=D(null);y(()=>{const r=localStorage.getItem("lastLogTimestamp");r&&(console.log("Loaded last log timestamp from localStorage:",r),a.current=r)},[]);const d=()=>{if(!window.wsClient){console.log("WebSocket client not available, will retry on next poll");return}if(!window.wsClient.isConnected()){console.log("WebSocket not connected, attempting to connect"),window.wsClient.connect();return}if(!document.getElementById("system-page")){console.log("Not on system page, skipping log fetch");return}console.log("Fetching logs via WebSocket with level: debug (to get all logs, will filter on frontend)");const r={level:"debug",count:t};a.current&&(r.last_timestamp=a.current),window.wsClient.getClientId&&(r.client_id=window.wsClient.getClientId()),console.log("Sending fetch request with payload:",r);try{window.wsClient.send("fetch","system/logs",r)?console.log("Fetch request sent successfully"):console.warn("Failed to send fetch request, will retry on next poll")}catch(g){console.error("Error sending fetch request:",g)}};return y(()=>{if(window.wsClient)return r();{console.log("WebSocket client not available, will check again later");const g=setInterval(()=>{window.wsClient&&(console.log("WebSocket client now available, setting up handlers"),clearInterval(g),r())},1e3);return()=>{clearInterval(g)}}function r(){console.log("Setting up WebSocket handlers for logs");const g=b=>{if(console.log("Received logs update via WebSocket:",b),!document.getElementById("system-page")){console.log("Not on system page, ignoring log update");return}if(b&&b.logs&&Array.isArray(b.logs)){const h=b.logs.map(w=>{const p={timestamp:w.timestamp||"Unknown",level:w.level||"info",message:w.message||""};return p.level&&(p.level=p.level.toLowerCase()),p.level==="warn"&&(p.level="warning"),p});b.latest_timestamp&&(a.current=b.latest_timestamp,localStorage.setItem("lastLogTimestamp",b.latest_timestamp),console.log("Updated and saved last log timestamp:",b.latest_timestamp)),h.length>0?(console.log("Received ".concat(h.length," logs via WebSocket")),h.sort((w,p)=>new Date(p.timestamp)-new Date(w.timestamp)),o(h)):console.log("No logs received via WebSocket")}};return console.log("Registering handler for system/logs via WebSocket (once on mount)"),window.wsClient.on("update","system/logs",g),()=>{console.log("Unregistering handler for system/logs via WebSocket (component unmounting)"),window.wsClient.off("update","system/logs"),n.current&&(clearInterval(n.current),n.current=null)}}},[]),y(()=>{if(s&&!n.current){if(console.log("Starting log polling"),window.wsClient&&typeof window.wsClient.subscribe=="function"){console.log("Subscribing to system/logs via WebSocket for polling");const r={level:"debug",...a.current?{since:a.current}:{}};window.wsClient.subscribe("system/logs",r),console.log("Subscribed to system/logs with level: debug and last_timestamp: ".concat(a.current||"NULL"))}d(),console.log("Setting up polling interval for logs (every 5 seconds)"),n.current=setInterval(()=>{console.log("Polling interval triggered, fetching logs..."),d()},5e3)}else!s&&n.current&&(console.log("Stopping log polling"),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket"),window.wsClient.unsubscribe("system/logs")),clearInterval(n.current),n.current=null);return()=>{n.current&&(clearInterval(n.current),n.current=null),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket on cleanup"),window.wsClient.unsubscribe("system/logs"))}},[s,e]),y(()=>{const r=()=>{console.log("Received refresh-logs-websocket event, triggering fetch"),d()};return window.addEventListener("refresh-logs-websocket",r),()=>{window.removeEventListener("refresh-logs-websocket",r)}},[]),y(()=>(console.log("LogsPoller: Setting up polling with log level ".concat(e)),l(!1),setTimeout(()=>{l(!0)},100),()=>{console.log("LogsPoller: Cleaning up on unmount"),l(!1)}),[e,t]),null}var ce;function We(){const[e,t]=S({version:"",uptime:"",cpu:{model:"",cores:0,usage:0},memory:{total:0,used:0,free:0},go2rtcMemory:{total:0,used:0,free:0},systemMemory:{total:0,used:0,free:0},disk:{total:0,used:0,free:0},systemDisk:{total:0,used:0,free:0},network:{interfaces:[]},streams:{active:0,total:0},recordings:{count:0,size:0}}),[o,s]=S([]),[l,n]=S("debug"),a=D("debug"),[d,r]=S(100),[g,b]=S(!1),[h,w]=S(!1),[p,M]=S(!1),{data:$,isLoading:E,error:W,refetch:F}=z(["systemInfo"],"/api/system/info",{timeout:15e3,retries:2,retryDelay:1e3}),v=D(!1),{data:m,refetch:_}=z(["logs",d],"/api/system/logs?level=debug&count=".concat(d),{timeout:2e4,retries:1,retryDelay:1e3,enabled:!v.current}),ue=j({mutationKey:["clearLogs"],mutationFn:async()=>await U("/api/system/logs/clear",{method:"POST",timeout:1e4,retries:1}),onSuccess:()=>{x("Logs cleared successfully"),s([])},onError:i=>{console.error("Error clearing logs:",i),x("Error clearing logs: ".concat(i.message))}}),me=i=>{console.log("SystemView: Setting log level from ".concat(l," to ").concat(i)),n(i),a.current=i},be=i=>{console.log("SystemView received new logs:",i.length),v.current||(console.log("Setting usingWebSocketForLogs to true"),v.current=!0);const f=a.current,k=i.filter(L=>R(L.level,f));s(k)};y(()=>{$&&M(!0)},[$]);const fe=j({mutationFn:async()=>await U("/api/system/restart",{method:"POST",timeout:3e4,retries:0}),onMutate:()=>{b(!0),x("Restarting system...")},onSuccess:()=>{x("System is restarting. Please wait..."),setTimeout(()=>{window.location.reload()},1e4)},onError:i=>{console.error("Error restarting system:",i),x("Error restarting system: ".concat(i.message)),b(!1)}}),pe=j({mutationFn:async()=>await U("/api/system/shutdown",{method:"POST",timeout:3e4,retries:0}),onMutate:()=>{w(!0),x("Shutting down system...")},onSuccess:()=>{x("System is shutting down. You will need to manually restart it.")},onError:i=>{console.error("Error shutting down system:",i),x("Error shutting down system: ".concat(i.message)),w(!1)}});y(()=>{$&&t($)},[$]),y(()=>{if(m&&m.logs&&Array.isArray(m.logs)){const i=a.current;if(m.logs.length>0&&typeof m.logs[0]=="object"&&m.logs[0].level){let f=m.logs.filter(k=>R(k.level,i));console.log("Filtered ".concat(m.logs.length," logs to ").concat(f.length," based on log level ").concat(i)),s(f)}else{const f=m.logs.map(L=>{let T="Unknown",P="debug",A=L;const he=/\[(.*?)\]\s*\[(.*?)\]\s*(.*)/,C=L.match(he);return C&&C.length>=4&&(T=C[1],P=C[2].toLowerCase(),A=C[3],P==="warn"&&(P="warning")),{timestamp:T,level:P,message:A}});let k=f.filter(L=>R(L.level,i));console.log("Filtered ".concat(f.length," parsed logs to ").concat(k.length," based on log level ").concat(i)),s(k)}}else s([])},[m]),y(()=>{if(console.log("SystemView: Log level changed to ".concat(l," or count changed to ").concat(d)),m&&m.logs&&Array.isArray(m.logs)){console.log("Filtering existing logs based on new log level");const i=a.current;console.log("Filtering existing logs using logLevelRef.current: ".concat(i)),s(f=>f.filter(k=>R(k.level,i)))}},[l,d]),y(()=>()=>{window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Cleaning up any WebSocket subscriptions on unmount"),window.wsClient.unsubscribe("system/logs"))},[]);const ve=()=>{confirm("Are you sure you want to clear all logs?")&&ue.mutate()},we=()=>{confirm("Are you sure you want to restart the system?")&&fe.mutate()},ye=()=>{confirm("Are you sure you want to shut down the system?")&&pe.mutate()};return y(()=>{if(!window.wsClient)console.log("WebSocket client not available in SystemView, it should be initialized in preact-app.js"),v.current=!1;else{console.log("WebSocket client is available in SystemView");const i=f=>{!f&&v.current&&(console.log("WebSocket disconnected, switching to HTTP for logs"),v.current=!1,_())};if(typeof window.wsClient.addConnectionChangeListener=="function")return console.log("Adding WebSocket connection change listener"),window.wsClient.addConnectionChangeListener(i),()=>{console.log("Removing WebSocket connection change listener"),window.wsClient.removeConnectionChangeListener(i)};{console.log("WebSocket client does not support connection change listeners");const f=k=>{console.log("Received websocket-fallback event"),v.current&&(console.log("WebSocket fallback detected, switching to HTTP for logs"),v.current=!1,_())};return window.addEventListener("websocket-fallback",f),()=>{window.removeEventListener("websocket-fallback",f)}}}},[]),u(ce||(ce=c(['\n    <section id="system-page" class="page">\n      <',"\n        restartSystem=","\n        shutdownSystem=","\n        isRestarting=","\n        isShuttingDown=","\n      />\n\n      <","\n        isLoading=","\n        hasData=",'\n        loadingMessage="Loading system information..."\n        emptyMessage="System information not available. Please try again later."\n      >\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," formatUptime="," />\n          <"," systemInfo="," formatBytes=",' />\n        </div>\n\n        <div class="grid grid-cols-1 gap-4 mb-4">\n          <'," systemInfo="," formatBytes=",' />\n        </div>\n\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," />\n          <"," systemInfo="," formatBytes="," />\n        </div>\n\n        <","\n          logs=","\n          logLevel=","\n          logCount=","\n          setLogLevel=","\n          setLogCount=","\n          loadLogs=","\n          clearLogs=","\n        />\n\n        <","\n          logLevel=","\n          logCount=","\n          onLogsReceived=","\n        />\n      <//>\n    </section>\n  "])),xe,we,ye,g,h,$e,E,p,Se,e,Ue,Le,e,N,Ce,e,N,Me,e,Ee,e,N,Re,o,l,d,me,r,()=>{if(v.current&&window.wsClient&&window.wsClient.isConnected()){console.log("Manually triggering WebSocket fetch for logs");const i=new CustomEvent("refresh-logs-websocket");window.dispatchEvent(i)}else console.log("Using HTTP fetch for logs"),_()},ve,De,l,d,be)}var ge;function Ne(){const e=document.getElementById("main-content");e&&O(async()=>{const{render:t}=await import("./preact-app-_8hsa7bb.js").then(o=>o.p);return{render:t}},__vite__mapDeps([0,1]),import.meta.url).then(({render:t})=>{O(async()=>{const{QueryClientProvider:o,queryClient:s}=await import("./preact-app-_8hsa7bb.js").then(l=>l.n);return{QueryClientProvider:o,queryClient:s}},__vite__mapDeps([0,1]),import.meta.url).then(({QueryClientProvider:o,queryClient:s})=>{t(u(ge||(ge=c(["<"," client=","><"," /></",">"])),o,s,We,o),e),setTimeout(()=>{const l=new CustomEvent("refresh-system-info");window.dispatchEvent(l)},100)})})}window.addEventListener("load",()=>{window.addEventListener("refresh-system-info",async()=>{try{await U("/api/system/info",{timeout:15e3,retries:1,retryDelay:1e3}),console.log("System info refreshed")}catch(e){console.error("Error refreshing system info:",e)}})});export{We as SystemView,Ne as loadSystemView};
//# sourceMappingURL=SystemView-BEU2dm1v.js.map
