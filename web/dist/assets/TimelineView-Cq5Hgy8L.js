var q=Object.freeze,ye=Object.defineProperty;var _=(o,$)=>q(ye(o,"raw",{value:q($||o.slice())}));import{d as k,y as R,h as M,c as D,A as U,E as Se}from"./preact-app-DLK-1h92.js";import{L as we}from"./LoadingIndicator-BApsLZ4U.js";var O,W,Y;function xe(){const[o,$]=k(!1),[a,w]=k(1);R(()=>{console.log("TimelineControls: Setting up subscription to timelineState");const d=i.subscribe(p=>{var x;console.log("TimelineControls: Received state update:",p),console.log("TimelineControls: Is playing:",p.isPlaying),console.log("TimelineControls: Zoom level:",p.zoomLevel),console.log("TimelineControls: Segments count:",((x=p.timelineSegments)==null?void 0:x.length)||0),$(p.isPlaying),w(p.zoomLevel)});return console.log("TimelineControls: Initial timelineState:",i),()=>d()},[]);const r=()=>{o?f():L()},f=()=>{i.setState({isPlaying:!1});const d=document.querySelector("#video-player video");d&&d.pause()},L=()=>{if(!i.timelineSegments||i.timelineSegments.length===0){D("No recordings to play","warning");return}let d=0,p=Number.MAX_SAFE_INTEGER;i.timelineSegments.forEach((l,g)=>{l.start_timestamp<p&&(p=l.start_timestamp,d=g)}),console.log("Starting from earliest segment (index ".concat(d,")")),i.setState({currentSegmentIndex:d,currentTime:i.timelineSegments[d].start_timestamp,isPlaying:!0,forceReload:!0});const x=i.timelineSegments[d],h=document.querySelector("#video-player video");h&&(console.log("Loading earliest segment video:",x),h.pause(),h.removeAttribute("src"),h.load(),h.src="/api/recordings/play/".concat(x.id,"?t=").concat(Date.now()),h.onloadedmetadata=()=>{h.currentTime=0,h.play().catch(l=>{console.error("Error playing video:",l),D("Error playing video: "+l.message,"error")})})},P=()=>{if(a<8){const d=a*2;i.setState({zoomLevel:d}),D("Zoomed in: ".concat(24/d," hours view"),"info")}},m=()=>{if(a>1){const d=a/2;i.setState({zoomLevel:d}),D("Zoomed out: ".concat(24/d," hours view"),"info")}};return M(Y||(Y=_(['\n    <div class="timeline-controls flex justify-between items-center mb-2">\n      <div class="flex items-center">\n        <button \n          id="play-button" \n          class="w-10 h-10 rounded-full bg-green-600 hover:bg-green-700 text-white flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-offset-1 transition-colors shadow-sm mr-2"\n          onClick=',"\n          title=",'\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            ','\n          </svg>\n        </button>\n        <span class="text-xs text-gray-600 dark:text-gray-300">Play from earliest recording</span>\n      </div>\n      \n      <div class="flex items-center gap-1">\n        <span class="text-xs text-gray-600 dark:text-gray-300 mr-1">Zoom:</span>\n        <button \n          id="zoom-out-button" \n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom Out (Show more time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n        <button \n          id="zoom-in-button" \n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom In (Show less time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  '])),r,o?"Pause":"Play from earliest recording",o?M(O||(O=_(['\n                <!-- Pause icon - two vertical bars -->\n                <rect x="6" y="6" width="4" height="12" rx="1" fill="white" />\n                <rect x="14" y="6" width="4" height="12" rx="1" fill="white" />\n              ']))):M(W||(W=_(['\n                <!-- Play icon - triangle -->\n                <path d="M8 5.14v14l11-7-11-7z" fill="white" />\n              ']))),m,a<=1,P,a>=8)}var G,J,K,Q,ee,te;function Te(){const[o,$]=k(0),[a,w]=k(24),[r,f]=k(1);R(()=>{console.log("TimelineRuler: Setting up subscription to timelineState");const P=i.subscribe(m=>{console.log("TimelineRuler: Received state update:",m),console.log("TimelineRuler: Zoom level:",m.zoomLevel);const d=24/m.zoomLevel;console.log("TimelineRuler: Hours per view:",d);let p=12;if(m.currentTime!==null){const l=new Date(m.currentTime*1e3);p=l.getHours()+l.getMinutes()/60+l.getSeconds()/3600}else if(m.timelineSegments&&m.timelineSegments.length>0){let l=24,g=0;m.timelineSegments.forEach(T=>{const n=new Date(T.start_timestamp*1e3),s=new Date(T.end_timestamp*1e3),e=n.getHours()+n.getMinutes()/60+n.getSeconds()/3600,t=s.getHours()+s.getMinutes()/60+s.getSeconds()/3600;l=Math.min(l,e),g=Math.max(g,t)}),p=(l+g)/2}let x=Math.max(0,p-d/2),h=Math.min(24,x+d);h===24&&d<24?(x=Math.max(0,24-d),h=24):x===0&&d<24&&(h=Math.min(24,d)),console.log("TimelineRuler: New hour range:",{newStartHour:x,newEndHour:h}),$(x),w(h),f(m.zoomLevel),(i.timelineStartHour!==x||i.timelineEndHour!==h)&&i.setState({timelineStartHour:x,timelineEndHour:h})});return()=>P()},[]);const L=()=>{const P=[];for(let m=Math.floor(o);m<=Math.ceil(a);m++)if(m>=0&&m<=24){const d=(m-o)/(a-o)*100;if(P.push(M(G||(G=_(['\n          <div \n            key="tick-','" \n            class="absolute top-0 w-px h-5 bg-gray-500 dark:bg-gray-400" \n            style="left: ','%;"\n          ></div>\n        '])),m,d)),P.push(M(J||(J=_(['\n          <div \n            key="label-','" \n            class="absolute top-0 text-xs text-gray-600 dark:text-gray-300 transform -translate-x-1/2" \n            style="left: ','%;"\n          >\n            ',":00\n          </div>\n        "])),m,d,m)),m<24&&r>=2){const p=(m+.5-o)/(a-o)*100;if(P.push(M(K||(K=_(['\n            <div \n              key="tick-','-30" \n              class="absolute top-2 w-px h-3 bg-gray-400 dark:bg-gray-500" \n              style="left: ','%;"\n            ></div>\n          '])),m,p)),r>=4){const x=(m+.25-o)/(a-o)*100,h=(m+.75-o)/(a-o)*100;P.push(M(Q||(Q=_(['\n              <div \n                key="tick-','-15" \n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500" \n                style="left: ','%;"\n              ></div>\n            '])),m,x)),P.push(M(ee||(ee=_(['\n              <div \n                key="tick-','-45" \n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500" \n                style="left: ','%;"\n              ></div>\n            '])),m,h))}}}return P};return M(te||(te=_(['\n    <div class="timeline-ruler relative w-full h-8 bg-gray-300 dark:bg-gray-800 border-b border-gray-400 dark:border-gray-600">\n      ','\n      <div class="absolute bottom-0 left-0 text-xs text-gray-500 px-1">\n        Zoom: ',"x ("," hours)\n      </div>\n    </div>\n  "])),L(),r,Math.round(24/r))}var ne,oe,se;function ke(){const[o,$]=k([]),[a,w]=k(0),[r,f]=k(24),[L,P]=k(-1),m=U(null),d=U(!1);R(()=>{console.log("TimelineSegments: Setting up subscription to timelineState");const l=i.subscribe(g=>{console.log("TimelineSegments: Received state update"),g.timelineSegments&&(console.log("TimelineSegments: Updating segments (".concat(g.timelineSegments.length,")")),$(g.timelineSegments)),w(g.timelineStartHour||0),f(g.timelineEndHour||24),P(g.currentSegmentIndex||-1)});return i.timelineSegments&&i.timelineSegments.length>0&&(console.log("TimelineSegments: Initial segments available (".concat(i.timelineSegments.length,")")),$(i.timelineSegments),P(i.currentSegmentIndex||0)),()=>l()},[]),R(()=>{const l=m.current;if(!l)return;const g=s=>{(s.target===l||s.target.classList.contains("timeline-clickable-area"))&&(d.current=!0,p(s),document.addEventListener("mousemove",T),document.addEventListener("mouseup",n))},T=s=>{d.current&&p(s)},n=()=>{d.current=!1,document.removeEventListener("mousemove",T),document.removeEventListener("mouseup",n)};return l.addEventListener("mousedown",g),()=>{l.removeEventListener("mousedown",g),document.removeEventListener("mousemove",T),document.removeEventListener("mouseup",n)}},[a,r,o]);const p=l=>{const g=m.current;if(!g)return;const T=g.getBoundingClientRect(),n=l.clientX-T.left,s=T.width,e=n/s,t=a+e*(r-a),c=new Date(i.selectedDate);c.setHours(Math.floor(t)),c.setMinutes(Math.floor(t%1*60)),c.setSeconds(Math.floor(t%1*60%1*60));const u=c.getTime()/1e3;let b=!1;for(let v=0;v<o.length;v++){const y=o[v],S=y.local_start_timestamp||y.start_timestamp,C=y.local_end_timestamp||y.end_timestamp;if(u>=S&&u<=C){console.log("TimelineSegments: Found segment ".concat(v," containing timestamp"));const H=u-S;P(v),x(v,H),b=!0;break}}if(!b)if(o.length>0){console.log("TimelineSegments: No segment contains the timestamp, finding closest segment");let v=-1,y=1/0;for(let S=0;S<o.length;S++){const C=o[S],H=C.local_start_timestamp||C.start_timestamp,E=C.local_end_timestamp||C.end_timestamp,I=Math.abs(H-u),z=Math.abs(E-u),N=Math.min(I,z);N<y&&(y=N,v=S)}v>=0&&(console.log("TimelineSegments: Playing closest segment ".concat(v)),x(v))}else console.log("TimelineSegments: No segments found, just updating currentTime"),i.setState({currentTime:u,prevCurrentTime:i.currentTime})},x=(l,g=null)=>{if(console.log("TimelineSegments: playSegment(".concat(l,", ").concat(g,")")),l<0||l>=o.length){console.warn("TimelineSegments: Invalid segment index: ".concat(l));return}const T=o[l],n=T.local_start_timestamp||T.start_timestamp,s=g!==null?n+g:n;i.setState({isPlaying:!1,currentSegmentIndex:-1}),document.body.offsetHeight,setTimeout(()=>{i.setState({currentSegmentIndex:l,currentTime:s,isPlaying:!0,forceReload:!0}),setTimeout(()=>{const e=document.querySelector("#video-player video");e&&(e.pause(),e.removeAttribute("src"),e.load(),e.src="/api/recordings/play/".concat(T.id,"?t=").concat(Date.now()),e.onloadedmetadata=()=>{const t=g!==null?g:0;e.currentTime=t,e.play().catch(c=>console.error("Error playing video:",c))})},50)},50)},h=()=>{if(console.log("TimelineSegments: Rendering ".concat(o.length," segments")),!o||o.length===0)return null;const l=[],g=new Map;o.forEach((e,t)=>{const c=e.local_start_timestamp||e.start_timestamp,u=e.local_end_timestamp||e.end_timestamp,b=new Date(c*1e3),v=new Date(u*1e3),y=b.getHours()+b.getMinutes()/60+b.getSeconds()/3600,S=v.getHours()+v.getMinutes()/60+v.getSeconds()/3600;if(S<a||y>r)return;const C=Math.floor(y),H=Math.min(Math.ceil(S),24);for(let E=C;E<H;E++)E>=a&&E<=r&&(g.has(E)||g.set(E,[]),g.get(E).push(t))});const T=[];let n=null;[...o].sort((e,t)=>{const c=e.local_start_timestamp||e.start_timestamp,u=t.local_start_timestamp||t.start_timestamp;return c-u}).forEach((e,t)=>{if(!n)n={...e,originalIndices:[t]};else{const c=e.local_start_timestamp||e.start_timestamp,u=n.local_end_timestamp||n.end_timestamp;c-u<=1?(n.end_timestamp=e.end_timestamp,e.local_end_timestamp&&(n.local_end_timestamp=e.local_end_timestamp),n.originalIndices.push(t),e.has_detection&&(n.has_detection=!0)):(T.push(n),n={...e,originalIndices:[t]})}}),n&&T.push(n),console.log("TimelineSegments: Merged ".concat(o.length," segments into ").concat(T.length," segments")),T.forEach((e,t)=>{const c=e.local_start_timestamp||e.start_timestamp,u=e.local_end_timestamp||e.end_timestamp,b=new Date(c*1e3),v=new Date(u*1e3),y=b.getHours()+b.getMinutes()/60+b.getSeconds()/3600,S=v.getHours()+v.getMinutes()/60+v.getSeconds()/3600;if(S<a||y>r)return;const C=Math.max(y,a),H=Math.min(S,r),E=(C-a)/(r-a)*100,I=(H-C)/(r-a)*100,z=Math.round(u-c),N="".concat(z,"s"),j=b.toLocaleTimeString(),F=v.toLocaleTimeString();l.push(M(ne||(ne=_(['\n        <div \n          key="segment-','"\n          class="timeline-segment absolute rounded-sm transition-all duration-200 ','"\n          style="left: ',"%; width: ","%; height: ",'%; top: 50%; transform: translateY(-50%);"\n          title="'," - "," (",')"\n        ></div>\n      '])),t,e.has_detection?"bg-red-500":"bg-blue-500",E,I,80,j,F,N))});for(let e=Math.floor(a);e<Math.ceil(r);e++)if(!g.has(e)){const t=(e-a)/(r-a)*100,c=100/(r-a);l.push(M(oe||(oe=_(['\n          <div \n            key="clickable-','"\n            class="timeline-clickable-area absolute h-full cursor-pointer"\n            style="left: ',"%; width: ",'%;"\n            data-hour=',"\n          ></div>\n        "])),e,t,c,e))}return l};return M(se||(se=_(['\n    <div \n      class="timeline-segments relative w-full h-16 pt-2"\n      ref=',"\n    >\n      ","\n    </div>\n  "])),m,h())}var re;function $e(){const[o,$]=k(0),[a,w]=k(!1),[r,f]=k(0),[L,P]=k(24),[m,d]=k(null),[p,x]=k(!1),h=U(null);U(null);const l=U(0);R(()=>{const n=i.subscribe(s=>{f(s.timelineStartHour||0),P(s.timelineEndHour||24),d(s.currentTime),T(s.currentTime),p||g(s.currentTime,s.timelineStartHour||0,s.timelineEndHour||24)});return()=>n()},[p]),R(()=>{const n=h.current;if(!n)return;const s=c=>{c.preventDefault(),c.stopPropagation(),l.current=c.clientX,x(!0),document.addEventListener("mousemove",e),document.addEventListener("mouseup",t)},e=c=>{if(!p)return;const u=n.parentElement;if(!u)return;const b=u.getBoundingClientRect(),v=Math.max(0,Math.min(c.clientX-b.left,b.width)),y=b.width,S=v/y*100;$(S);const C=L-r,H=r+S/100*C,E=new Date(i.selectedDate);E.setHours(Math.floor(H)),E.setMinutes(Math.floor(H%1*60)),E.setSeconds(Math.floor(H%1*60%1*60));const I=E.getTime()/1e3;T(I)},t=c=>{if(!p)return;const u=n.parentElement;if(!u)return;const b=u.getBoundingClientRect(),v=Math.max(0,Math.min(c.clientX-b.left,b.width)),y=b.width,S=v/y*100,C=L-r,H=r+S/100*C,E=new Date(i.selectedDate);E.setHours(Math.floor(H)),E.setMinutes(Math.floor(H%1*60)),E.setSeconds(Math.floor(H%1*60%1*60));const I=E.getTime()/1e3;x(!1),document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",t);const z=i.timelineSegments||[];let N=!1;for(let j=0;j<z.length;j++){const F=z[j],Z=F.local_start_timestamp||F.start_timestamp,V=F.local_end_timestamp||F.end_timestamp;if(I>=Z&&I<=V){i.setState({currentSegmentIndex:j,currentTime:I,prevCurrentTime:i.currentTime,isPlaying:!0}),N=!0;break}}if(!N&&z.length>0){let j=0,F=1/0;for(let B=0;B<z.length;B++){const A=z[B],fe=A.local_start_timestamp||A.start_timestamp,he=A.local_end_timestamp||A.end_timestamp,be=Math.abs(fe-I),ve=Math.abs(he-I),X=Math.min(be,ve);X<F&&(F=X,j=B)}const Z=z[j],V=Z.local_start_timestamp||Z.start_timestamp;i.setState({currentSegmentIndex:j,currentTime:V,prevCurrentTime:i.currentTime,isPlaying:!0})}};return n.addEventListener("mousedown",s),()=>{n.removeEventListener("mousedown",s),document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",t)}},[h.current,r,L,p]);const g=(n,s,e)=>{if(n===null){w(!1);return}const t=new Date(n*1e3),c=t.getHours()+t.getMinutes()/60+t.getSeconds()/3600;if(c<s||c>e){w(!1);return}const u=(c-s)/(e-s)*100;$(u),w(!0)},T=n=>{if(n===null)return;const s=document.getElementById("time-display");if(!s)return;const e=new Date(n*1e3),t=e.getHours().toString().padStart(2,"0"),c=e.getMinutes().toString().padStart(2,"0"),u=e.getSeconds().toString().padStart(2,"0");s.textContent="".concat(t,":").concat(c,":").concat(u)};return R(()=>{setTimeout(()=>{i.currentTime&&(w(!0),g(i.currentTime,i.timelineStartHour||0,i.timelineEndHour||24))},500)},[]),M(re||(re=_(["\n    <div \n      ref=",'\n      class="timeline-cursor absolute top-0 h-full z-50 transition-all duration-100 cursor-ew-resize"\n      style="left: ',"%; display: ",'; pointer-events: auto; width: 7px; margin-left: -3.5px;"\n    >\n      <!-- Invisible wider clickable area -->\n      <div class="absolute top-0 bottom-0 left-0 w-full"></div>\n      \n      <!-- Skinnier needle with no middle chunk -->\n      <div class="absolute top-0 bottom-0 w-0.5 bg-orange-500 left-1/2 transform -translate-x-1/2 pointer-events-none"></div>\n      \n      <!-- Top handle (black) -->\n      <div class="absolute top-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 -translate-y-1/2 shadow-md pointer-events-none"></div>\n      \n      <!-- Bottom handle (black) -->\n      <div class="absolute bottom-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 translate-y-1/2 shadow-md pointer-events-none"></div>\n    </div>\n  '])),h,o,a?"block":"none")}var ie,ae;function Pe(){const[o,$]=k(1),a=[.25,.5,1,1.5,2,4];R(()=>{console.log("SpeedControls: Setting up subscription to timelineState");const r=i.subscribe(f=>{console.log("SpeedControls: Received state update:",f),console.log("SpeedControls: Playback speed:",f.playbackSpeed),$(f.playbackSpeed)});return console.log("SpeedControls: Initial timelineState:",i),()=>r()},[]);const w=r=>{const f=document.querySelector("#video-player video");if(f){const L=f.playbackRate;f.playbackRate=r,console.log("Setting video playback rate from ".concat(L,"x to ").concat(r,"x"),f),console.log("Actual playback rate after setting: ".concat(f.playbackRate,"x")),setTimeout(()=>{f.playbackRate=r,console.log("Re-setting playback rate to ".concat(r,"x, actual rate: ").concat(f.playbackRate,"x"))},100)}else console.warn("Video player element not found");i.setState({playbackSpeed:r}),D("Playback speed: ".concat(r,"x"),"info")};return M(ae||(ae=_(['\n    <div class="mt-2 mb-4 p-2 border border-green-500 rounded-lg bg-white dark:bg-gray-800 shadow-sm">\n      <div class="flex flex-col items-center">\n        <div class="text-sm font-semibold mb-2 text-gray-700 dark:text-gray-300">Playback Speed</div>\n        \n        <div class="flex flex-wrap justify-center gap-1">\n          ','\n        </div>\n        \n        <div class="mt-1 text-xs font-medium text-green-600 dark:text-green-400">\n          Current: ',"× ","\n        </div>\n      </div>\n    </div>\n  "])),a.map(r=>M(ie||(ie=_(["\n            <button \n              key=","\n              class=","\n              data-speed=","\n              onClick=","\n            >\n              ","\n            </button>\n          "])),"speed-".concat(r),"speed-btn px-2 py-1 text-sm rounded-full ".concat(r===o?"bg-green-500 text-white":"bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"," \n                font-medium transition-all focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-opacity-50"),r,()=>w(r),r===1?"1× (Normal)":"".concat(r,"×"))),o,o===1?"(Normal)":"")}var le;function _e(){const[o,$]=k(-1),[a,w]=k(!1),[r,f]=k([]),[L,P]=k(1),m=U(null),d=U(null),p=U(null);R(()=>{const n=i.subscribe(s=>{$(s.currentSegmentIndex),w(s.isPlaying),f(s.timelineSegments||[]),P(s.playbackSpeed),x(s)});return()=>n()},[]);const x=n=>{const s=m.current;if(!s||!n.timelineSegments||n.timelineSegments.length===0||n.currentSegmentIndex<0||n.currentSegmentIndex>=n.timelineSegments.length)return;const e=n.timelineSegments[n.currentSegmentIndex];if(!e)return;const t=p.current!==e.id,c=t,u=e.local_start_timestamp||e.start_timestamp,b=n.currentTime!==null&&n.currentTime>=u?n.currentTime-u:0,v=n.prevCurrentTime!==null&&Math.abs(n.currentTime-n.prevCurrentTime)>1;t&&(console.log("Segment changed from ".concat(p.current," to ").concat(e.id)),p.current=e.id),c?(console.log("Loading new segment ".concat(e.id," (segmentChanged: ").concat(t,")")),h(e,b,n.isPlaying)):v?(console.log("Seeking to ".concat(b,"s within current segment")),s.currentTime=b):n.isPlaying&&s.paused?s.play().catch(y=>{console.error("Error playing video:",y)}):!n.isPlaying&&!s.paused&&s.pause(),s.playbackRate!==n.playbackSpeed&&(s.playbackRate=n.playbackSpeed)},h=(n,s=0,e=!1)=>{const t=m.current;if(!t)return;console.log("Loading segment ".concat(n.id," at time ").concat(s,"s, autoplay: ").concat(e)),t.pause();const c="/api/recordings/play/".concat(n.id,"?t=").concat(Date.now()),u=()=>{console.log("Video metadata loaded"),t.currentTime=s,t.playbackRate=L,e&&t.play().catch(b=>{console.error("Error playing video:",b),D("Error playing video: "+b.message,"error")}),t.removeEventListener("loadedmetadata",u)};t.addEventListener("loadedmetadata",u),t.src=c,t.load()},l=()=>{if(console.log("Video ended"),o<r.length-1){const n=o+1;console.log("Playing next segment ".concat(n));const s=r[n],e=s.local_start_timestamp||s.start_timestamp;i.setState({currentSegmentIndex:n,currentTime:e,isPlaying:!0,forceReload:!0})}else console.log("End of all segments"),i.setState({isPlaying:!1})},g=()=>{const n=m.current;if(!n||o<0||!r||r.length===0||o>=r.length)return;const s=r[o];if(!s)return;const t=(s.local_start_timestamp||s.start_timestamp)+n.currentTime;T(t),i.setState({currentTime:t,prevCurrentTime:d.current}),d.current=t},T=n=>{if(n===null)return;const s=document.getElementById("time-display");if(!s)return;const e=new Date(n*1e3),t=e.getHours().toString().padStart(2,"0"),c=e.getMinutes().toString().padStart(2,"0"),u=e.getSeconds().toString().padStart(2,"0");s.textContent="".concat(t,":").concat(c,":").concat(u)};return M(le||(le=_(['\n    <div class="timeline-player-container mb-2" id="video-player">\n      <div class="relative w-full bg-black rounded-lg shadow-md" style="aspect-ratio: 16/9;">\n        <video\n            ref=','\n            class="w-full h-full object-contain"\n            controls\n            autoplay=',"\n            muted=","\n            playsInline\n            onended=","\n            ontimeupdate=",'\n        ></video>\n        \n        <!-- Add a message for invalid segments -->\n        <div \n          class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-70 text-white text-center p-4 ','"\n        >\n          <div>\n            <p class="mb-2">No valid segment selected.</p>\n            <p class="text-sm">Click on a segment in the timeline or use the play button to start playback.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Playback speed controls -->\n    <'," />\n  "])),m,!1,!1,l,g,o>=0&&r.length>0?"hidden":"",Pe)}const i={streams:[],timelineSegments:[],selectedStream:null,selectedDate:null,isPlaying:!1,currentSegmentIndex:-1,zoomLevel:1,timelineStartHour:0,timelineEndHour:24,currentTime:null,prevCurrentTime:null,playbackSpeed:1,showOnlySegments:!0,forceReload:!1,listeners:new Set,setState(o){Object.assign(this,o),this.notifyListeners()},subscribe(o){return this.listeners.add(o),()=>this.listeners.delete(o)},notifyListeners(){this.listeners.forEach(o=>o(this))}};function Me(o){const $=o.getFullYear(),a=String(o.getMonth()+1).padStart(2,"0"),w=String(o.getDate()).padStart(2,"0");return"".concat($,"-").concat(a,"-").concat(w)}function Ee(){const o=new URLSearchParams(window.location.search);return{stream:o.get("stream")||"",date:o.get("date")||Me(new Date)}}function He(o,$){if(!o)return;const a=new URL(window.location.href);a.searchParams.set("stream",o),a.searchParams.set("date",$),window.history.replaceState({},"",a)}var ce,me,de,ge,ue;function Ce(){const o=Ee(),[$,a]=k(!1),[w,r]=k([]),[f,L]=k(o.stream),[P,m]=k(o.date),[d,p]=k([]),x=U(null),h=U(!1);R(()=>{console.log("TimelinePage: Initial mount, loading streams"),l()},[]),R(()=>{if(w.length>0&&!h.current){if(console.log("TimelinePage: Streams loaded, initializing data"),h.current=!0,w.some(t=>t.name===f)&&f)console.log("TimelinePage: Using stream from URL: ".concat(f)),g(f,P);else if(w.length>0){const t=w[0].name;console.log("TimelinePage: Using first stream: ".concat(t)),L(t),g(t,P)}}},[w]);const l=()=>{console.log("TimelinePage: Loading streams"),a(!0),fetch("/api/streams").then(e=>{if(!e.ok)throw new Error("Failed to load streams");return e.json()}).then(e=>{console.log("TimelinePage: Streams data received:",e);const t=Array.isArray(e)?e:[];console.log("TimelinePage: Loaded ".concat(t.length," streams")),r(t),a(!1),i.setState({streams:t}),t.length>0&&console.log("TimelinePage: First stream:",t[0])}).catch(e=>{console.error("TimelinePage: Error loading streams:",e),D("Error loading streams: "+e.message,"error"),a(!1)})},g=(e,t)=>{if(!e){D("Please select a stream","error");return}console.log("TimelinePage: Loading timeline data for ".concat(e," on ").concat(t)),a(!0),p([]),D("Loading timeline data...","info"),He(e,t);const c=new Date(t);c.setHours(0,0,0,0);const u=new Date(t);u.setHours(23,59,59,999);const b=c.toISOString(),v=u.toISOString();i.setState({selectedStream:e,selectedDate:t,timelineSegments:[],currentSegmentIndex:-1,currentTime:null,isPlaying:!1}),fetch("/api/timeline/segments?stream=".concat(encodeURIComponent(e),"&start=").concat(encodeURIComponent(b),"&end=").concat(encodeURIComponent(v))).then(y=>{if(!y.ok)throw new Error("Failed to load timeline data");return y.json()}).then(y=>{console.log("TimelinePage: Timeline data received:",y);const S=y.segments||[];if(console.log("TimelinePage: Received ".concat(S.length," segments")),a(!1),S.length===0){console.log("TimelinePage: No segments found"),p([]),i.setState({timelineSegments:[],currentSegmentIndex:-1,currentTime:null,isPlaying:!1}),D("No recordings found for the selected date","warning");return}console.log("TimelinePage: Setting segments"),p(S);const C=S[0].start_timestamp;i.setState({timelineSegments:S,currentSegmentIndex:0,currentTime:C,prevCurrentTime:C,isPlaying:!1});const H=document.querySelector("#video-player video");H&&(H.src="/api/recordings/play/".concat(S[0].id),H.load()),D("Loaded ".concat(S.length," recording segments"),"success")}).catch(y=>{console.error("TimelinePage: Error loading timeline data:",y),D("Error loading timeline data: "+y.message,"error"),a(!1),p([])})},T=e=>{const t=e.target.value;console.log("TimelinePage: Stream changed to ".concat(t)),L(t),t&&g(t,P)},n=e=>{const t=e.target.value;console.log("TimelinePage: Date changed to ".concat(t)),m(t),f&&g(f,t)},s=()=>$?M(ce||(ce=_(["<",' message="Loading timeline data..." />'])),we):d.length===0?M(me||(me=_(['\n        <div class="flex flex-col items-center justify-center py-12 text-center">\n          <svg class="w-16 h-16 text-gray-400 dark:text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>\n          </svg>\n          <p class="text-gray-600 dark:text-gray-400 text-lg">No recordings found for the selected date and stream</p>\n        </div>\n      ']))):M(de||(de=_(["\n      <!-- Video player -->\n      <"," />\n\n      <!-- Playback controls -->\n      <",' />\n\n        <!-- Timeline -->\n        <div\n            id="timeline-container"\n            class="relative w-full h-24 bg-gray-200 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg mb-6 overflow-hidden"\n            ref=',"\n        >\n          <"," />\n          <"," />\n          <",' />\n          \n          <!-- Instructions for cursor -->\n          <div class="absolute bottom-1 right-2 text-xs text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 bg-opacity-75 dark:bg-opacity-75 px-2 py-1 rounded">\n            Drag the orange dial to navigate\n          </div>\n        </div>\n    '])),_e,xe,x,Te,ke,$e);return M(ue||(ue=_(['\n    <div class="timeline-page">\n      <div class="flex items-center mb-4">\n        <h1 class="text-2xl font-bold">Timeline Playback</h1>\n        <div class="ml-4 flex">\n          <a href="recordings.html" class="px-3 py-1 bg-gray-300 text-gray-700 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-400 dark:hover:bg-gray-600 rounded-l-md">Table View</a>\n          <a href="timeline.html" class="px-3 py-1 bg-blue-500 text-white rounded-r-md">Timeline View</a>\n        </div>\n      </div>\n\n      <!-- Stream selector and date picker -->\n      <div class="flex flex-wrap gap-4 mb-2">\n        <div class="stream-selector flex-grow">\n          <div class="flex justify-between items-center mb-2">\n            <label for="stream-selector">Stream</label>\n            <button \n              class="text-xs bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 px-2 py-1 rounded"\n              onClick=','\n            >\n              Reload Streams\n            </button>\n          </div>\n          <select\n              id="stream-selector"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          >\n            <option value="" disabled>Select a stream ('," available)</option>\n            ",'\n          </select>\n        </div>\n\n        <div class="date-selector flex-grow">\n          <label for="timeline-date" class="block mb-2">Date</label>\n          <input\n              type="date"\n              id="timeline-date"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          />\n        </div>\n      </div>\n      \n      <!-- Auto-load message -->\n      <div class="mb-4 text-sm text-gray-500 dark:text-gray-400 italic">\n        ','\n      </div>\n\n      <!-- Current time display -->\n      <div class="flex justify-between items-center mb-2">\n        <div id="time-display" class="timeline-time-display bg-gray-200 dark:bg-gray-700 px-3 py-1 rounded font-mono text-base">00:00:00</div>\n      </div>\n      \n      <!-- Debug info -->\n      <div class="mb-2 text-xs text-gray-500">\n        Debug - isLoading: ',", \n        Streams: ",",\n        Segments: ","\n      </div>\n      \n      <!-- Content -->\n      ",'\n\n      <!-- Instructions -->\n      <div class="mt-6 p-4 bg-gray-200 dark:bg-gray-800 rounded">\n        <h3 class="text-lg font-semibold mb-2">How to use the timeline:</h3>\n        <ul class="list-disc pl-5">\n          <li>Select a stream and date to load recordings</li>\n          <li>Click on the timeline to seek to a specific time</li>\n          <li>Click on a segment (blue bar) to play that recording</li>\n          <li>Use the play/pause button to control playback</li>\n          <li>Use the zoom buttons to adjust the timeline scale</li>\n        </ul>\n      </div>\n    </div>\n  '])),()=>l(),f||"",T,w.length,w.map(e=>M(ge||(ge=_(["\n              <option key="," value=",">","</option>\n            "])),e.name,e.name,e.name)),P,n,$?"Loading...":"Recordings auto-load when stream or date changes",$?"true":"false",w.length,d.length,s())}var pe;function Re(){const o=document.getElementById("main-content");o&&(o.innerHTML="",Se(M(pe||(pe=_(["<"," />"])),Ce),o))}export{Re as loadTimelineView};
//# sourceMappingURL=TimelineView-Cq5Hgy8L.js.map
