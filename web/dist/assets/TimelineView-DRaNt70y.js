var X=Object.freeze,Se=Object.defineProperty;var _=(n,E)=>X(Se(n,"raw",{value:X(E||n.slice())}));import{d as $,y as I,h as P,c as U,A as j,u as O,E as we,Q as xe,q as Te}from"./preact-app-BK3T3Wjb.js";import{L as ke}from"./LoadingIndicator-PnyyPAW5.js";var Q,W,Y;function $e(){const[n,E]=$(!1),[c,H]=$(1);I(()=>{console.log("TimelineControls: Setting up subscription to timelineState");const d=i.subscribe(b=>{var k;console.log("TimelineControls: Received state update:",b),console.log("TimelineControls: Is playing:",b.isPlaying),console.log("TimelineControls: Zoom level:",b.zoomLevel),console.log("TimelineControls: Segments count:",((k=b.timelineSegments)==null?void 0:k.length)||0),E(b.isPlaying),H(b.zoomLevel)});return console.log("TimelineControls: Initial timelineState:",i),()=>d()},[]);const r=()=>{n?p():L()},p=()=>{i.setState({isPlaying:!1});const d=document.querySelector("#video-player video");d&&d.pause()},L=()=>{if(!i.timelineSegments||i.timelineSegments.length===0){U("No recordings to play","warning");return}let d=0,b=Number.MAX_SAFE_INTEGER;i.timelineSegments.forEach((a,g)=>{a.start_timestamp<b&&(b=a.start_timestamp,d=g)}),console.log("Starting from earliest segment (index ".concat(d,")")),i.setState({currentSegmentIndex:d,currentTime:i.timelineSegments[d].start_timestamp,isPlaying:!0,forceReload:!0});const k=i.timelineSegments[d],y=document.querySelector("#video-player video");y&&(console.log("Loading earliest segment video:",k),y.pause(),y.removeAttribute("src"),y.load(),y.src="/api/recordings/play/".concat(k.id,"?t=").concat(Date.now()),y.onloadedmetadata=()=>{y.currentTime=0,y.play().catch(a=>{console.error("Error playing video:",a),U("Error playing video: "+a.message,"error")})})},T=()=>{if(c<8){const d=c*2;i.setState({zoomLevel:d}),U("Zoomed in: ".concat(24/d," hours view"),"info")}},m=()=>{if(c>1){const d=c/2;i.setState({zoomLevel:d}),U("Zoomed out: ".concat(24/d," hours view"),"info")}};return P(Y||(Y=_(['\n    <div class="timeline-controls flex justify-between items-center mb-2">\n      <div class="flex items-center">\n        <button \n          id="play-button" \n          class="w-10 h-10 rounded-full bg-green-600 hover:bg-green-700 text-white flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-offset-1 transition-colors shadow-sm mr-2"\n          onClick=',"\n          title=",'\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            ','\n          </svg>\n        </button>\n        <span class="text-xs text-gray-600 dark:text-gray-300">Play from earliest recording</span>\n      </div>\n      \n      <div class="flex items-center gap-1">\n        <span class="text-xs text-gray-600 dark:text-gray-300 mr-1">Zoom:</span>\n        <button \n          id="zoom-out-button" \n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom Out (Show more time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n        <button \n          id="zoom-in-button" \n          class="w-6 h-6 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 flex items-center justify-center focus:outline-none focus:ring-1 focus:ring-blue-500 transition-colors"\n          onClick=','\n          title="Zoom In (Show less time)"\n          disabled=','\n        >\n          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  '])),r,n?"Pause":"Play from earliest recording",n?P(Q||(Q=_(['\n                <!-- Pause icon - two vertical bars -->\n                <rect x="6" y="6" width="4" height="12" rx="1" fill="white" />\n                <rect x="14" y="6" width="4" height="12" rx="1" fill="white" />\n              ']))):P(W||(W=_(['\n                <!-- Play icon - triangle -->\n                <path d="M8 5.14v14l11-7-11-7z" fill="white" />\n              ']))),m,c<=1,T,c>=8)}var G,J,K,ee,te,ne;function _e(){const[n,E]=$(0),[c,H]=$(24),[r,p]=$(1);I(()=>{console.log("TimelineRuler: Setting up subscription to timelineState");const T=i.subscribe(m=>{console.log("TimelineRuler: Received state update:",m),console.log("TimelineRuler: Zoom level:",m.zoomLevel);const d=24/m.zoomLevel;console.log("TimelineRuler: Hours per view:",d);let b=12;if(m.currentTime!==null){const a=new Date(m.currentTime*1e3);b=a.getHours()+a.getMinutes()/60+a.getSeconds()/3600}else if(m.timelineSegments&&m.timelineSegments.length>0){let a=24,g=0;m.timelineSegments.forEach(S=>{const e=new Date(S.start_timestamp*1e3),s=new Date(S.end_timestamp*1e3),t=e.getHours()+e.getMinutes()/60+e.getSeconds()/3600,o=s.getHours()+s.getMinutes()/60+s.getSeconds()/3600;a=Math.min(a,t),g=Math.max(g,o)}),b=(a+g)/2}let k=Math.max(0,b-d/2),y=Math.min(24,k+d);y===24&&d<24?(k=Math.max(0,24-d),y=24):k===0&&d<24&&(y=Math.min(24,d)),console.log("TimelineRuler: New hour range:",{newStartHour:k,newEndHour:y}),E(k),H(y),p(m.zoomLevel),(i.timelineStartHour!==k||i.timelineEndHour!==y)&&i.setState({timelineStartHour:k,timelineEndHour:y})});return()=>T()},[]);const L=()=>{const T=[];for(let m=Math.floor(n);m<=Math.ceil(c);m++)if(m>=0&&m<=24){const d=(m-n)/(c-n)*100;if(T.push(P(G||(G=_(['\n          <div \n            key="tick-','" \n            class="absolute top-0 w-px h-5 bg-gray-500 dark:bg-gray-400" \n            style="left: ','%;"\n          ></div>\n        '])),m,d)),T.push(P(J||(J=_(['\n          <div \n            key="label-','" \n            class="absolute top-0 text-xs text-gray-600 dark:text-gray-300 transform -translate-x-1/2" \n            style="left: ','%;"\n          >\n            ',":00\n          </div>\n        "])),m,d,m)),m<24&&r>=2){const b=(m+.5-n)/(c-n)*100;if(T.push(P(K||(K=_(['\n            <div \n              key="tick-','-30" \n              class="absolute top-2 w-px h-3 bg-gray-400 dark:bg-gray-500" \n              style="left: ','%;"\n            ></div>\n          '])),m,b)),r>=4){const k=(m+.25-n)/(c-n)*100,y=(m+.75-n)/(c-n)*100;T.push(P(ee||(ee=_(['\n              <div \n                key="tick-','-15" \n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500" \n                style="left: ','%;"\n              ></div>\n            '])),m,k)),T.push(P(te||(te=_(['\n              <div \n                key="tick-','-45" \n                class="absolute top-3 w-px h-2 bg-gray-400 dark:bg-gray-500" \n                style="left: ','%;"\n              ></div>\n            '])),m,y))}}}return T};return P(ne||(ne=_(['\n    <div class="timeline-ruler relative w-full h-8 bg-gray-300 dark:bg-gray-800 border-b border-gray-400 dark:border-gray-600">\n      ','\n      <div class="absolute bottom-0 left-0 text-xs text-gray-500 px-1">\n        Zoom: ',"x ("," hours)\n      </div>\n    </div>\n  "])),L(),r,Math.round(24/r))}var se,oe,re;function Pe(){const[n,E]=$([]),[c,H]=$(0),[r,p]=$(24),[L,T]=$(-1),m=j(null),d=j(!1);I(()=>{console.log("TimelineSegments: Setting up subscription to timelineState");const a=i.subscribe(g=>{console.log("TimelineSegments: Received state update"),g.timelineSegments&&(console.log("TimelineSegments: Updating segments (".concat(g.timelineSegments.length,")")),E(g.timelineSegments)),H(g.timelineStartHour||0),p(g.timelineEndHour||24),T(g.currentSegmentIndex||-1)});return i.timelineSegments&&i.timelineSegments.length>0&&(console.log("TimelineSegments: Initial segments available (".concat(i.timelineSegments.length,")")),E(i.timelineSegments),T(i.currentSegmentIndex||0)),()=>a()},[]),I(()=>{const a=m.current;if(!a)return;const g=s=>{(s.target===a||s.target.classList.contains("timeline-clickable-area"))&&(d.current=!0,b(s),document.addEventListener("mousemove",S),document.addEventListener("mouseup",e))},S=s=>{d.current&&b(s)},e=()=>{d.current=!1,document.removeEventListener("mousemove",S),document.removeEventListener("mouseup",e)};return a.addEventListener("mousedown",g),()=>{a.removeEventListener("mousedown",g),document.removeEventListener("mousemove",S),document.removeEventListener("mouseup",e)}},[c,r,n]);const b=a=>{const g=m.current;if(!g)return;const S=g.getBoundingClientRect(),e=a.clientX-S.left,s=S.width,t=e/s,o=c+t*(r-c),l=new Date(i.selectedDate);l.setHours(Math.floor(o)),l.setMinutes(Math.floor(o%1*60)),l.setSeconds(Math.floor(o%1*60%1*60));const f=l.getTime()/1e3;let v=!1;for(let w=0;w<n.length;w++){const M=n[w],C=M.local_start_timestamp||M.start_timestamp,h=M.local_end_timestamp||M.end_timestamp;if(f>=C&&f<=h){console.log("TimelineSegments: Found segment ".concat(w," containing timestamp"));const u=f-C;T(w),k(w,u),v=!0;break}}if(!v)if(n.length>0){console.log("TimelineSegments: No segment contains the timestamp, finding closest segment");let w=-1,M=1/0;for(let C=0;C<n.length;C++){const h=n[C],u=h.local_start_timestamp||h.start_timestamp,x=h.local_end_timestamp||h.end_timestamp,D=Math.abs(u-f),R=Math.abs(x-f),Z=Math.min(D,R);Z<M&&(M=Z,w=C)}w>=0&&(console.log("TimelineSegments: Playing closest segment ".concat(w)),k(w))}else console.log("TimelineSegments: No segments found, just updating currentTime"),i.setState({currentTime:f,prevCurrentTime:i.currentTime})},k=(a,g=null)=>{if(console.log("TimelineSegments: playSegment(".concat(a,", ").concat(g,")")),a<0||a>=n.length){console.warn("TimelineSegments: Invalid segment index: ".concat(a));return}const S=n[a],e=S.local_start_timestamp||S.start_timestamp,s=g!==null?e+g:e;i.setState({isPlaying:!1,currentSegmentIndex:-1}),document.body.offsetHeight,setTimeout(()=>{i.setState({currentSegmentIndex:a,currentTime:s,isPlaying:!0,forceReload:!0}),setTimeout(()=>{const t=document.querySelector("#video-player video");t&&(t.pause(),t.removeAttribute("src"),t.load(),t.src="/api/recordings/play/".concat(S.id,"?t=").concat(Date.now()),t.onloadedmetadata=()=>{const o=g!==null?g:0;t.currentTime=o,t.play().catch(l=>console.error("Error playing video:",l))})},50)},50)},y=()=>{if(console.log("TimelineSegments: Rendering ".concat(n.length," segments")),!n||n.length===0)return null;const a=[],g=new Map;n.forEach((t,o)=>{const l=t.local_start_timestamp||t.start_timestamp,f=t.local_end_timestamp||t.end_timestamp,v=new Date(l*1e3),w=new Date(f*1e3),M=v.getHours()+v.getMinutes()/60+v.getSeconds()/3600,C=w.getHours()+w.getMinutes()/60+w.getSeconds()/3600;if(C<c||M>r)return;const h=Math.floor(M),u=Math.min(Math.ceil(C),24);for(let x=h;x<u;x++)x>=c&&x<=r&&(g.has(x)||g.set(x,[]),g.get(x).push(o))});const S=[];let e=null;[...n].sort((t,o)=>{const l=t.local_start_timestamp||t.start_timestamp,f=o.local_start_timestamp||o.start_timestamp;return l-f}).forEach((t,o)=>{if(!e)e={...t,originalIndices:[o]};else{const l=t.local_start_timestamp||t.start_timestamp,f=e.local_end_timestamp||e.end_timestamp;l-f<=1?(e.end_timestamp=t.end_timestamp,t.local_end_timestamp&&(e.local_end_timestamp=t.local_end_timestamp),e.originalIndices.push(o),t.has_detection&&(e.has_detection=!0)):(S.push(e),e={...t,originalIndices:[o]})}}),e&&S.push(e),console.log("TimelineSegments: Merged ".concat(n.length," segments into ").concat(S.length," segments")),S.forEach((t,o)=>{const l=t.local_start_timestamp||t.start_timestamp,f=t.local_end_timestamp||t.end_timestamp,v=new Date(l*1e3),w=new Date(f*1e3),M=v.getHours()+v.getMinutes()/60+v.getSeconds()/3600,C=w.getHours()+w.getMinutes()/60+w.getSeconds()/3600;if(C<c||M>r)return;const h=Math.max(M,c),u=Math.min(C,r),x=(h-c)/(r-c)*100,D=(u-h)/(r-c)*100,R=Math.round(f-l),Z="".concat(R,"s"),z=v.toLocaleTimeString(),N=w.toLocaleTimeString();a.push(P(se||(se=_(['\n        <div \n          key="segment-','"\n          class="timeline-segment absolute rounded-sm transition-all duration-200 ','"\n          style="left: ',"%; width: ","%; height: ",'%; top: 50%; transform: translateY(-50%);"\n          title="'," - "," (",')"\n        ></div>\n      '])),o,t.has_detection?"bg-red-500":"bg-blue-500",x,D,80,z,N,Z))});for(let t=Math.floor(c);t<Math.ceil(r);t++)if(!g.has(t)){const o=(t-c)/(r-c)*100,l=100/(r-c);a.push(P(oe||(oe=_(['\n          <div \n            key="clickable-','"\n            class="timeline-clickable-area absolute h-full cursor-pointer"\n            style="left: ',"%; width: ",'%;"\n            data-hour=',"\n          ></div>\n        "])),t,o,l,t))}return a};return P(re||(re=_(['\n    <div \n      class="timeline-segments relative w-full h-16 pt-2"\n      ref=',"\n    >\n      ","\n    </div>\n  "])),m,y())}var ie;function Me(){const[n,E]=$(0),[c,H]=$(!1),[r,p]=$(0),[L,T]=$(24),[m,d]=$(null),[b,k]=$(!1),y=j(null);j(null);const a=j(0);I(()=>{const e=i.subscribe(s=>{p(s.timelineStartHour||0),T(s.timelineEndHour||24),d(s.currentTime),S(s.currentTime),b||g(s.currentTime,s.timelineStartHour||0,s.timelineEndHour||24)});return()=>e()},[b]),I(()=>{const e=y.current;if(!e)return;const s=l=>{l.preventDefault(),l.stopPropagation(),a.current=l.clientX,k(!0),document.addEventListener("mousemove",t),document.addEventListener("mouseup",o)},t=l=>{if(!b)return;const f=e.parentElement;if(!f)return;const v=f.getBoundingClientRect(),w=Math.max(0,Math.min(l.clientX-v.left,v.width)),M=v.width,C=w/M*100;E(C);const h=L-r,u=r+C/100*h,x=new Date(i.selectedDate);x.setHours(Math.floor(u)),x.setMinutes(Math.floor(u%1*60)),x.setSeconds(Math.floor(u%1*60%1*60));const D=x.getTime()/1e3;S(D)},o=l=>{if(!b)return;const f=e.parentElement;if(!f)return;const v=f.getBoundingClientRect(),w=Math.max(0,Math.min(l.clientX-v.left,v.width)),M=v.width,C=w/M*100,h=L-r,u=r+C/100*h,x=new Date(i.selectedDate);x.setHours(Math.floor(u)),x.setMinutes(Math.floor(u%1*60)),x.setSeconds(Math.floor(u%1*60%1*60));const D=x.getTime()/1e3;k(!1),document.removeEventListener("mousemove",t),document.removeEventListener("mouseup",o);const R=i.timelineSegments||[];let Z=!1;for(let z=0;z<R.length;z++){const N=R[z],B=N.local_start_timestamp||N.start_timestamp,q=N.local_end_timestamp||N.end_timestamp;if(D>=B&&D<=q){i.setState({currentSegmentIndex:z,currentTime:D,prevCurrentTime:i.currentTime,isPlaying:!0}),Z=!0;break}}if(!Z&&R.length>0){let z=0,N=1/0;for(let A=0;A<R.length;A++){const V=R[A],he=V.local_start_timestamp||V.start_timestamp,be=V.local_end_timestamp||V.end_timestamp,ye=Math.abs(he-D),ve=Math.abs(be-D),F=Math.min(ye,ve);F<N&&(N=F,z=A)}const B=R[z],q=B.local_start_timestamp||B.start_timestamp;i.setState({currentSegmentIndex:z,currentTime:q,prevCurrentTime:i.currentTime,isPlaying:!0})}};return e.addEventListener("mousedown",s),()=>{e.removeEventListener("mousedown",s),document.removeEventListener("mousemove",t),document.removeEventListener("mouseup",o)}},[y.current,r,L,b]);const g=(e,s,t)=>{if(e===null){H(!1);return}const o=new Date(e*1e3),l=o.getHours()+o.getMinutes()/60+o.getSeconds()/3600;if(l<s||l>t){H(!1);return}const f=(l-s)/(t-s)*100;E(f),H(!0)},S=e=>{if(e===null)return;const s=document.getElementById("time-display");if(!s)return;const t=new Date(e*1e3),o=t.getHours().toString().padStart(2,"0"),l=t.getMinutes().toString().padStart(2,"0"),f=t.getSeconds().toString().padStart(2,"0");s.textContent="".concat(o,":").concat(l,":").concat(f)};return I(()=>{setTimeout(()=>{i.currentTime&&(H(!0),g(i.currentTime,i.timelineStartHour||0,i.timelineEndHour||24))},500)},[]),P(ie||(ie=_(["\n    <div \n      ref=",'\n      class="timeline-cursor absolute top-0 h-full z-50 transition-all duration-100 cursor-ew-resize"\n      style="left: ',"%; display: ",'; pointer-events: auto; width: 7px; margin-left: -3.5px;"\n    >\n      <!-- Invisible wider clickable area -->\n      <div class="absolute top-0 bottom-0 left-0 w-full"></div>\n      \n      <!-- Skinnier needle with no middle chunk -->\n      <div class="absolute top-0 bottom-0 w-0.5 bg-orange-500 left-1/2 transform -translate-x-1/2 pointer-events-none"></div>\n      \n      <!-- Top handle (black) -->\n      <div class="absolute top-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 -translate-y-1/2 shadow-md pointer-events-none"></div>\n      \n      <!-- Bottom handle (black) -->\n      <div class="absolute bottom-0 left-1/2 w-4 h-4 bg-black rounded-full transform -translate-x-1/2 translate-y-1/2 shadow-md pointer-events-none"></div>\n    </div>\n  '])),y,n,c?"block":"none")}var ae,le;function Ee(){const[n,E]=$(1),c=[.25,.5,1,1.5,2,4];I(()=>{console.log("SpeedControls: Setting up subscription to timelineState");const r=i.subscribe(p=>{console.log("SpeedControls: Received state update:",p),console.log("SpeedControls: Playback speed:",p.playbackSpeed),E(p.playbackSpeed)});return console.log("SpeedControls: Initial timelineState:",i),()=>r()},[]);const H=r=>{const p=document.querySelector("#video-player video");if(p){const L=p.playbackRate;p.playbackRate=r,console.log("Setting video playback rate from ".concat(L,"x to ").concat(r,"x"),p),console.log("Actual playback rate after setting: ".concat(p.playbackRate,"x")),setTimeout(()=>{p.playbackRate=r,console.log("Re-setting playback rate to ".concat(r,"x, actual rate: ").concat(p.playbackRate,"x"))},100)}else console.warn("Video player element not found");i.setState({playbackSpeed:r}),U("Playback speed: ".concat(r,"x"),"info")};return P(le||(le=_(['\n    <div class="mt-2 mb-4 p-2 border border-green-500 rounded-lg bg-white dark:bg-gray-800 shadow-sm">\n      <div class="flex flex-col items-center">\n        <div class="text-sm font-semibold mb-2 text-gray-700 dark:text-gray-300">Playback Speed</div>\n        \n        <div class="flex flex-wrap justify-center gap-1">\n          ','\n        </div>\n        \n        <div class="mt-1 text-xs font-medium text-green-600 dark:text-green-400">\n          Current: ',"× ","\n        </div>\n      </div>\n    </div>\n  "])),c.map(r=>P(ae||(ae=_(["\n            <button \n              key=","\n              class=","\n              data-speed=","\n              onClick=","\n            >\n              ","\n            </button>\n          "])),"speed-".concat(r),"speed-btn px-2 py-1 text-sm rounded-full ".concat(r===n?"bg-green-500 text-white":"bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"," \n                font-medium transition-all focus:outline-none focus:ring-1 focus:ring-green-500 focus:ring-opacity-50"),r,()=>H(r),r===1?"1× (Normal)":"".concat(r,"×"))),n,n===1?"(Normal)":"")}var ce;function He(){const[n,E]=$(-1),[c,H]=$(!1),[r,p]=$([]),[L,T]=$(1),m=j(null),d=j(null),b=j(null);I(()=>{const e=i.subscribe(s=>{E(s.currentSegmentIndex),H(s.isPlaying),p(s.timelineSegments||[]),T(s.playbackSpeed),k(s)});return()=>e()},[]);const k=e=>{const s=m.current;if(!s||!e.timelineSegments||e.timelineSegments.length===0||e.currentSegmentIndex<0||e.currentSegmentIndex>=e.timelineSegments.length)return;const t=e.timelineSegments[e.currentSegmentIndex];if(!t)return;const o=b.current!==t.id,l=o,f=t.local_start_timestamp||t.start_timestamp,v=e.currentTime!==null&&e.currentTime>=f?e.currentTime-f:0,w=e.prevCurrentTime!==null&&Math.abs(e.currentTime-e.prevCurrentTime)>1;o&&(console.log("Segment changed from ".concat(b.current," to ").concat(t.id)),b.current=t.id),l?(console.log("Loading new segment ".concat(t.id," (segmentChanged: ").concat(o,")")),y(t,v,e.isPlaying)):w?(console.log("Seeking to ".concat(v,"s within current segment")),s.currentTime=v):e.isPlaying&&s.paused?s.play().catch(M=>{console.error("Error playing video:",M)}):!e.isPlaying&&!s.paused&&s.pause(),s.playbackRate!==e.playbackSpeed&&(s.playbackRate=e.playbackSpeed)},y=(e,s=0,t=!1)=>{const o=m.current;if(!o)return;console.log("Loading segment ".concat(e.id," at time ").concat(s,"s, autoplay: ").concat(t)),o.pause();const l="/api/recordings/play/".concat(e.id,"?t=").concat(Date.now()),f=()=>{console.log("Video metadata loaded"),o.currentTime=s,o.playbackRate=L,t&&o.play().catch(v=>{console.error("Error playing video:",v),U("Error playing video: "+v.message,"error")}),o.removeEventListener("loadedmetadata",f)};o.addEventListener("loadedmetadata",f),o.src=l,o.load()},a=()=>{if(console.log("Video ended"),n<r.length-1){const e=n+1;console.log("Playing next segment ".concat(e));const s=r[e],t=s.local_start_timestamp||s.start_timestamp;i.setState({currentSegmentIndex:e,currentTime:t,isPlaying:!0,forceReload:!0})}else console.log("End of all segments"),i.setState({isPlaying:!1})},g=()=>{const e=m.current;if(!e||n<0||!r||r.length===0||n>=r.length)return;const s=r[n];if(!s)return;const o=(s.local_start_timestamp||s.start_timestamp)+e.currentTime;S(o),i.setState({currentTime:o,prevCurrentTime:d.current}),d.current=o},S=e=>{if(e===null)return;const s=document.getElementById("time-display");if(!s)return;const t=new Date(e*1e3),o=t.getHours().toString().padStart(2,"0"),l=t.getMinutes().toString().padStart(2,"0"),f=t.getSeconds().toString().padStart(2,"0");s.textContent="".concat(o,":").concat(l,":").concat(f)};return P(ce||(ce=_(['\n    <div class="timeline-player-container mb-2" id="video-player">\n      <div class="relative w-full bg-black rounded-lg shadow-md" style="aspect-ratio: 16/9;">\n        <video\n            ref=','\n            class="w-full h-full object-contain"\n            controls\n            autoplay=',"\n            muted=","\n            playsInline\n            onended=","\n            ontimeupdate=",'\n        ></video>\n        \n        <!-- Add a message for invalid segments -->\n        <div \n          class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-70 text-white text-center p-4 ','"\n        >\n          <div>\n            <p class="mb-2">No valid segment selected.</p>\n            <p class="text-sm">Click on a segment in the timeline or use the play button to start playback.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Playback speed controls -->\n    <'," />\n  "])),m,!1,!1,a,g,n>=0&&r.length>0?"hidden":"",Ee)}const i={streams:[],timelineSegments:[],selectedStream:null,selectedDate:null,isPlaying:!1,currentSegmentIndex:-1,zoomLevel:1,timelineStartHour:0,timelineEndHour:24,currentTime:null,prevCurrentTime:null,playbackSpeed:1,showOnlySegments:!0,forceReload:!1,listeners:new Set,setState(n){Object.assign(this,n),this.notifyListeners()},subscribe(n){return this.listeners.add(n),()=>this.listeners.delete(n)},notifyListeners(){this.listeners.forEach(n=>n(this))}};function Ce(n){const E=n.getFullYear(),c=String(n.getMonth()+1).padStart(2,"0"),H=String(n.getDate()).padStart(2,"0");return"".concat(E,"-").concat(c,"-").concat(H)}function Le(){const n=new URLSearchParams(window.location.search);return{stream:n.get("stream")||"",date:n.get("date")||Ce(new Date)}}function De(n,E){if(!n)return;const c=new URL(window.location.href);c.searchParams.set("stream",n),c.searchParams.set("date",E),window.history.replaceState({},"",c)}var me,de,ue,ge,pe;function Ie(){const n=Le(),[E,c]=$(!1),[H,r]=$([]),[p,L]=$(n.stream),[T,m]=$(n.date),[d,b]=$([]),k=j(null),y=j(!1),{data:a,isLoading:g,error:S}=O("streams","/api/streams",{timeout:15e3,retries:2,retryDelay:1e3});I(()=>{if(a&&Array.isArray(a)&&a.length>0&&!y.current){if(console.log("TimelinePage: Streams loaded, initializing data"),y.current=!0,r(a),i.setState({streams:a}),a.some(u=>u.name===p)&&p)console.log("TimelinePage: Using stream from URL: ".concat(p));else if(a.length>0){const u=a[0].name;console.log("TimelinePage: Using first stream: ".concat(u)),L(u)}}},[a]),I(()=>{S&&(console.error("TimelinePage: Error loading streams:",S),U("Error loading streams: "+S.message,"error"))},[S]);const e=h=>{const u=new Date(h);u.setHours(0,0,0,0);const x=new Date(h);return x.setHours(23,59,59,999),{startTime:u.toISOString(),endTime:x.toISOString()}};I(()=>{p&&(De(p,T),i.setState({selectedStream:p,selectedDate:T}))},[p,T]);const{startTime:s,endTime:t}=e(T),{data:o,isLoading:l,error:f,refetch:v}=O(["timeline-segments",p,T],p?"/api/timeline/segments?stream=".concat(encodeURIComponent(p),"&start=").concat(encodeURIComponent(s),"&end=").concat(encodeURIComponent(t)):null,{timeout:3e4,retries:2,retryDelay:1e3},{enabled:!!p,onSuccess:h=>{console.log("TimelinePage: Timeline data received:",h);const u=h.segments||[];if(console.log("TimelinePage: Received ".concat(u.length," segments")),u.length===0){console.log("TimelinePage: No segments found"),b([]),i.setState({timelineSegments:[],currentSegmentIndex:-1,currentTime:null,isPlaying:!1}),U("No recordings found for the selected date","warning");return}console.log("TimelinePage: Setting segments"),b(u);const x=u[0].start_timestamp;i.setState({timelineSegments:u,currentSegmentIndex:0,currentTime:x,prevCurrentTime:x,isPlaying:!1});const D=document.querySelector("#video-player video");D&&(D.src="/api/recordings/play/".concat(u[0].id),D.load()),U("Loaded ".concat(u.length," recording segments"),"success")},onError:h=>{console.error("TimelinePage: Error loading timeline data:",h),U("Error loading timeline data: "+h.message,"error"),b([])}}),w=h=>{const u=h.target.value;console.log("TimelinePage: Stream changed to ".concat(u)),L(u)},M=h=>{const u=h.target.value;console.log("TimelinePage: Date changed to ".concat(u)),m(u)},C=()=>l?P(me||(me=_(["<",' message="Loading timeline data..." />'])),ke):d.length===0?P(de||(de=_(['\n        <div class="flex flex-col items-center justify-center py-12 text-center">\n          <svg class="w-16 h-16 text-gray-400 dark:text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>\n          </svg>\n          <p class="text-gray-600 dark:text-gray-400 text-lg">No recordings found for the selected date and stream</p>\n        </div>\n      ']))):P(ue||(ue=_(["\n      <!-- Video player -->\n      <"," />\n\n      <!-- Playback controls -->\n      <",' />\n\n        <!-- Timeline -->\n        <div\n            id="timeline-container"\n            class="relative w-full h-24 bg-gray-200 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg mb-6 overflow-hidden"\n            ref=',"\n        >\n          <"," />\n          <"," />\n          <",' />\n\n          <!-- Instructions for cursor -->\n          <div class="absolute bottom-1 right-2 text-xs text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 bg-opacity-75 dark:bg-opacity-75 px-2 py-1 rounded">\n            Drag the orange dial to navigate\n          </div>\n        </div>\n    '])),He,$e,k,_e,Pe,Me);return P(pe||(pe=_(['\n    <div class="timeline-page">\n      <div class="flex items-center mb-4">\n        <h1 class="text-2xl font-bold">Timeline Playback</h1>\n        <div class="ml-4 flex">\n          <a href="recordings.html" class="px-3 py-1 bg-gray-300 text-gray-700 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-400 dark:hover:bg-gray-600 rounded-l-md">Table View</a>\n          <a href="timeline.html" class="px-3 py-1 bg-blue-500 text-white rounded-r-md">Timeline View</a>\n        </div>\n      </div>\n\n      <!-- Stream selector and date picker -->\n      <div class="flex flex-wrap gap-4 mb-2">\n        <div class="stream-selector flex-grow">\n          <div class="flex justify-between items-center mb-2">\n            <label for="stream-selector">Stream</label>\n            <button\n              class="text-xs bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 px-2 py-1 rounded"\n              onClick=','\n            >\n              Reload Data\n            </button>\n          </div>\n          <select\n              id="stream-selector"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          >\n            <option value="" disabled>Select a stream ('," available)</option>\n            ",'\n          </select>\n        </div>\n\n        <div class="date-selector flex-grow">\n          <label for="timeline-date" class="block mb-2">Date</label>\n          <input\n              type="date"\n              id="timeline-date"\n              class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n              value=',"\n              onChange=",'\n          />\n        </div>\n      </div>\n\n      <!-- Auto-load message -->\n      <div class="mb-4 text-sm text-gray-500 dark:text-gray-400 italic">\n        ','\n      </div>\n\n      <!-- Current time display -->\n      <div class="flex justify-between items-center mb-2">\n        <div id="time-display" class="timeline-time-display bg-gray-200 dark:bg-gray-700 px-3 py-1 rounded font-mono text-base">00:00:00</div>\n      </div>\n\n      <!-- Debug info -->\n      <div class="mb-2 text-xs text-gray-500">\n        Debug - isLoading: ',",\n        Streams: ",",\n        Segments: ","\n      </div>\n\n      <!-- Content -->\n      ",'\n\n      <!-- Instructions -->\n      <div class="mt-6 p-4 bg-gray-200 dark:bg-gray-800 rounded">\n        <h3 class="text-lg font-semibold mb-2">How to use the timeline:</h3>\n        <ul class="list-disc pl-5">\n          <li>Select a stream and date to load recordings</li>\n          <li>Click on the timeline to seek to a specific time</li>\n          <li>Click on a segment (blue bar) to play that recording</li>\n          <li>Use the play/pause button to control playback</li>\n          <li>Use the zoom buttons to adjust the timeline scale</li>\n        </ul>\n      </div>\n    </div>\n  '])),()=>v(),p||"",w,H.length,H.map(h=>P(ge||(ge=_(["\n              <option key="," value=",">","</option>\n            "])),h.name,h.name,h.name)),T,M,l?"Loading...":"Recordings auto-load when stream or date changes",l?"true":"false",H.length,d.length,C())}var fe;function je(){const n=document.getElementById("main-content");n&&(n.innerHTML="",we(P(fe||(fe=_(["<"," client=",">\n      <"," />\n    <//>"])),xe,Te,Ie),n))}export{je as loadTimelineView};
//# sourceMappingURL=TimelineView-DRaNt70y.js.map
