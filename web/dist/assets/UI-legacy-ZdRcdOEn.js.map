{"version":3,"file":"UI-legacy-ZdRcdOEn.js","sources":["../../js/components/preact/UI.jsx","../../js/components/preact/SnapshotManager.jsx"],"sourcesContent":["/**\n * UI utility components for LightNVR\n * JSX version of UI components\n */\n\nimport { h, createContext } from 'preact';\nimport { useState, useEffect, useRef, useCallback } from 'preact/hooks';\nimport { createPortal } from 'preact/compat';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { useSnapshotManager } from './SnapshotManager.jsx';\n\n// Create contexts for modals\nexport const ModalContext = createContext({\n  showVideoModal: () => {},\n  showSnapshotPreview: () => {}\n});\n\n/**\n * DeleteConfirmationModal component for Preact\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {Function} props.onConfirm - Function to call when delete is confirmed\n * @param {string} props.mode - Delete mode ('selected' or 'all')\n * @param {number} props.count - Number of items selected (for 'selected' mode)\n * @returns {JSX.Element} DeleteConfirmationModal component\n */\nexport function DeleteConfirmationModal(props) {\n  const { isOpen, onClose, onConfirm, mode, count } = props;\n\n  if (!isOpen) return null;\n\n  // Determine title and message based on mode\n  let title = 'Confirm Delete';\n  let message = 'Are you sure you want to delete this item?';\n\n  if (mode === 'selected') {\n    title = 'Delete Selected Recordings';\n    message = `Are you sure you want to delete ${count} selected recording${count !== 1 ? 's' : ''}?`;\n  } else if (mode === 'all') {\n    title = 'Delete All Filtered Recordings';\n    message = 'Are you sure you want to delete all recordings matching the current filters? This action cannot be undone.';\n  }\n\n  // Handle escape key\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n      onKeyDown={handleKeyDown}\n    >\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 max-w-md mx-auto\">\n        <div class=\"mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">{title}</h3>\n        </div>\n\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\">{message}</p>\n\n        <div class=\"flex justify-end space-x-3\">\n          <button\n            class=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n            onClick={onConfirm}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * SnapshotPreviewModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.imageData - Image data URL\n * @param {string} props.streamName - Stream name\n * @returns {JSX.Element} SnapshotPreviewModal component\n */\nexport function SnapshotPreviewModal({ isOpen, onClose, imageData, streamName, onDownload }) {\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    // Handle escape key\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Animate in\n    if (isOpen && modalRef.current) {\n      setTimeout(() => {\n        const modalContent = modalRef.current.querySelector('.modal-content');\n        if (modalContent) {\n          modalContent.classList.remove('scale-95', 'opacity-0');\n          modalContent.classList.add('scale-100', 'opacity-100');\n        }\n      }, 10);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"snapshot-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className=\"modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out scale-95 opacity-0\" style={{ width: '90%' }}>\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"snapshot-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {streamName ? `Snapshot: ${streamName}` : 'Snapshot'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            âœ•\n          </button>\n        </div>\n        <div className=\"p-4 overflow-auto flex-grow\">\n          <img\n            id=\"snapshot-preview-image\"\n            className=\"max-w-full max-h-[70vh] mx-auto\"\n            src={imageData}\n            alt=\"Snapshot\"\n          />\n        </div>\n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-2\">\n          <button\n            id=\"snapshot-download-btn\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n            onClick={onDownload}\n          >\n            Download\n          </button>\n          <button\n            id=\"snapshot-close-btn\"\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * VideoModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.videoUrl - URL of the video to display\n * @param {string} props.title - Title for the video\n * @param {string} props.downloadUrl - Optional URL for downloading the video\n * @returns {JSX.Element} VideoModal component\n */\nexport function VideoModal({ isOpen, onClose, videoUrl, title, downloadUrl }) {\n  console.log('VideoModal rendered with props:', { isOpen, videoUrl, title });\n\n  const [detectionOverlayEnabled, setDetectionOverlayEnabled] = useState(false);\n  const [timeWindow, setTimeWindow] = useState(2);\n  const [detections, setDetections] = useState([]);\n  const [recordingData, setRecordingData] = useState(null);\n  const [detectionStatus, setDetectionStatus] = useState('No detections loaded');\n  const [currentSpeed, setCurrentSpeed] = useState(1.0);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Handle escape key and cleanup\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      console.log('VideoModal opened, setting up event listeners');\n      document.addEventListener('keydown', handleKeyDown);\n\n      // Reset video element when modal opens\n      if (videoRef.current) {\n        videoRef.current.load();\n      }\n    }\n\n    return () => {\n      console.log('VideoModal cleanup');\n      document.removeEventListener('keydown', handleKeyDown);\n\n      // Cleanup video element when component unmounts or modal closes\n      if (videoRef.current) {\n        // Pause and reset video src to stop any ongoing requests\n        try {\n          videoRef.current.pause();\n          videoRef.current.removeAttribute('src');\n          videoRef.current.load();\n        } catch (e) {\n          console.error('Error cleaning up video element:', e);\n        }\n      }\n    };\n  }, [isOpen, onClose]);\n\n  // Fetch recording data and detections\n  useEffect(() => {\n    if (!isOpen || !videoUrl) return;\n\n    // Extract recording ID from URL\n    const recordingIdMatch = videoUrl.match(/\\/play\\/(\\d+)/);\n    if (!recordingIdMatch || !recordingIdMatch[1]) return;\n\n    const recordingId = parseInt(recordingIdMatch[1], 10);\n\n    // Fetch recording data\n    const fetchRecordingData = async () => {\n      try {\n        const response = await fetch(`/api/recordings/${recordingId}`);\n        if (!response.ok) throw new Error('Failed to fetch recording data');\n\n        const data = await response.json();\n        setRecordingData(data);\n\n        // If we have recording data, fetch detections\n        if (data && data.stream && data.start_time && data.end_time) {\n          const startTime = Math.floor(new Date(data.start_time).getTime() / 1000);\n          const endTime = Math.floor(new Date(data.end_time).getTime() / 1000);\n\n          const detectionsResponse = await fetch(\n            `/api/detection/results/${data.stream}?start=${startTime}&end=${endTime}`\n          );\n\n          if (!detectionsResponse.ok) throw new Error('Failed to fetch detections');\n\n          const detectionsData = await detectionsResponse.json();\n          const fetchedDetections = detectionsData.detections || [];\n          setDetections(fetchedDetections);\n\n          if (fetchedDetections.length > 0) {\n            setDetectionStatus(`${fetchedDetections.length} detection${fetchedDetections.length !== 1 ? 's' : ''} available`);\n          } else {\n            setDetectionStatus('No detections found for this recording');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setDetectionStatus('Error loading detections');\n      }\n    };\n\n    fetchRecordingData();\n  }, [isOpen, videoUrl]);\n\n  // Draw detections on canvas\n  const drawDetections = useCallback(() => {\n    if (!detectionOverlayEnabled || !videoRef.current || !canvasRef.current || detections.length === 0) {\n      return;\n    }\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Get video dimensions\n    const videoWidth = video.videoWidth;\n    const videoHeight = video.videoHeight;\n\n    if (videoWidth === 0 || videoHeight === 0) {\n      // Video dimensions not available yet, try again later\n      requestAnimationFrame(drawDetections);\n      return;\n    }\n\n    // Set canvas dimensions to match video\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    // Get canvas context\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get current video time in seconds\n    const currentTime = video.currentTime;\n\n    // Calculate the timestamp for the current video position\n    if (!recordingData || !recordingData.start_time) {\n      return;\n    }\n\n    // Convert recording start time to seconds\n    const recordingStartTime = Math.floor(new Date(recordingData.start_time).getTime() / 1000);\n\n    // Calculate current timestamp in the video\n    const currentTimestamp = recordingStartTime + Math.floor(currentTime);\n\n    // Filter detections to only show those within the time window\n    const visibleDetections = detections.filter(detection => {\n      if (!detection.timestamp) return false;\n\n      // Check if detection is within the time window\n      return Math.abs(detection.timestamp - currentTimestamp) <= timeWindow;\n    });\n\n    // Update status with count of visible detections\n    if (visibleDetections.length > 0) {\n      setDetectionStatus(`Showing ${visibleDetections.length} detection${visibleDetections.length !== 1 ? 's' : ''} at current time`);\n    } else {\n      setDetectionStatus(`No detections at current time (${detections.length} total)`);\n    }\n\n    // Draw each visible detection\n    visibleDetections.forEach(detection => {\n      // Calculate coordinates based on relative positions\n      const x = detection.x * videoWidth;\n      const y = detection.y * videoHeight;\n      const width = detection.width * videoWidth;\n      const height = detection.height * videoHeight;\n\n      // Draw bounding box\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.8)';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, width, height);\n\n      // Draw label background\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      const labelText = `${detection.label} (${Math.round(detection.confidence * 100)}%)`;\n      const labelWidth = ctx.measureText(labelText).width + 10;\n      ctx.fillRect(x, y - 20, labelWidth, 20);\n\n      // Draw label text\n      ctx.fillStyle = 'white';\n      ctx.font = '12px Arial';\n      ctx.fillText(labelText, x + 5, y - 5);\n    });\n\n    // Request next frame if video is playing\n    if (!video.paused && !video.ended) {\n      requestAnimationFrame(drawDetections);\n    }\n  }, [detectionOverlayEnabled, detections, recordingData, timeWindow]);\n\n  // Set up video event listeners\n  useEffect(() => {\n    if (!isOpen || !videoRef.current) return;\n\n    const video = videoRef.current;\n\n    const handlePlay = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleSeeked = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleTimeUpdate = () => {\n      if (detectionOverlayEnabled) {\n        // Don't redraw on every timeupdate as it's too frequent\n        // Instead, redraw every 0.5 seconds\n        const currentTime = Math.floor(video.currentTime * 2) / 2;\n        if (video.lastDrawnTime !== currentTime) {\n          video.lastDrawnTime = currentTime;\n          drawDetections();\n        }\n      }\n    };\n\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('seeked', handleSeeked);\n    video.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('seeked', handleSeeked);\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [isOpen, detectionOverlayEnabled, drawDetections]);\n\n  // Handle video URL changes\n  useEffect(() => {\n    if (isOpen && videoUrl && videoRef.current) {\n      console.log('Video URL changed, loading new video');\n      videoRef.current.load();\n    }\n  }, [isOpen, videoUrl]);\n\n  // Update detection overlay when enabled/disabled\n  useEffect(() => {\n    if (detectionOverlayEnabled) {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'block';\n      }\n      drawDetections();\n    } else {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'none';\n      }\n    }\n  }, [detectionOverlayEnabled, drawDetections]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Handle speed change\n  const handleSpeedChange = (speed) => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = speed;\n      setCurrentSpeed(speed);\n    }\n  };\n\n  // Handle time window change\n  const handleTimeWindowChange = (e) => {\n    const newTimeWindow = parseInt(e.target.value, 10);\n    setTimeWindow(newTimeWindow);\n    if (detectionOverlayEnabled) {\n      drawDetections();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  // Add useEffect to handle modal animation and cleanup\n  useEffect(() => {\n    let animationTimeout;\n\n    if (isOpen && modalRef.current) {\n      // Animate in - small delay to ensure DOM is ready\n      animationTimeout = setTimeout(() => {\n        const modalContent = modalRef.current?.querySelector('.modal-content');\n        if (modalContent) {\n          modalContent.classList.remove('scale-95', 'opacity-0');\n          modalContent.classList.add('scale-100', 'opacity-100');\n          console.log('Modal animation applied');\n        }\n      }, 10);\n    }\n\n    // Cleanup function\n    return () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n      }\n    };\n  }, [isOpen]);\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"video-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className={`modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out ${isOpen ? 'scale-100 opacity-100' : 'scale-95 opacity-0'} w-full md:w-[90%]`}>\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"video-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {title || 'Video'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            âœ•\n          </button>\n        </div>\n\n        <div className=\"p-4 flex-grow\">\n          <div className=\"relative\">\n            <video\n              ref={videoRef}\n              className=\"w-full h-auto max-w-full object-contain mx-auto\"\n              controls\n              autoPlay\n              key={videoUrl} /* Add key to force re-render when URL changes */\n              onError={(e) => {\n                console.error('Video error:', e);\n                showStatusMessage('Error loading video. Please try again.', 'error');\n              }}\n              onLoadStart={() => console.log('Video load started')}\n              onLoadedData={() => console.log('Video data loaded')}\n            >\n              {/* Use source element instead of src attribute for better control */}\n              {videoUrl && <source src={videoUrl} type=\"video/mp4\" />}\n            </video>\n            <canvas\n              ref={canvasRef}\n              className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div id=\"recordings-controls\" className=\"mx-4 mb-4 p-4 border border-green-500 rounded-lg bg-white dark:bg-gray-700 shadow-md relative z-10\">\n          <h3 className=\"text-lg font-bold text-center mb-4 text-gray-800 dark:text-white\">\n            PLAYBACK CONTROLS\n          </h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-2\">\n            {/* Speed controls section */}\n            <div className=\"border-b pb-4 md:border-b-0 md:border-r md:pr-4 md:pb-0\">\n              <h4 className=\"font-bold text-center mb-3 text-gray-700 dark:text-gray-300\">\n                Playback Speed\n              </h4>\n\n              <div className=\"flex flex-wrap justify-center gap-2\">\n                {[0.25, 0.5, 1.0, 1.5, 2.0, 4.0].map(speed => (\n                  <button\n                    key={speed}\n                    className={`speed-btn px-3 py-2 rounded-full ${\n                      speed === currentSpeed\n                        ? 'bg-green-500 text-white'\n                        : 'bg-gray-200 hover:bg-gray-300'\n                    } text-sm font-medium transition-all focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50`}\n                    data-speed={speed}\n                    onClick={() => handleSpeedChange(speed)}\n                  >\n                    {speed === 1.0 ? '1Ã— (Normal)' : `${speed}Ã—`}\n                  </button>\n                ))}\n              </div>\n\n              <div id=\"current-speed-indicator\" className=\"mt-3 text-center font-medium text-green-600 dark:text-green-400 text-sm\">\n                Current Speed: {currentSpeed}Ã— {currentSpeed === 1.0 ? '(Normal)' : ''}\n              </div>\n            </div>\n\n            {/* Detection overlay section */}\n            <div className=\"pt-4 md:pt-0 md:pl-4\">\n              <h4 className=\"font-bold text-center mb-2 text-gray-700 dark:text-gray-300\">\n                Detection Overlays\n              </h4>\n\n              <div className=\"flex flex-col items-center gap-2\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"detection-overlay-checkbox\"\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                    checked={detectionOverlayEnabled}\n                    onChange={(e) => setDetectionOverlayEnabled(e.target.checked)}\n                    disabled={detections.length === 0}\n                  />\n                  <label\n                    htmlFor=\"detection-overlay-checkbox\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  >\n                    Show Detection Overlays\n                  </label>\n                </div>\n\n                <div className=\"flex flex-col w-full mt-2 mb-2\">\n                  <label\n                    htmlFor=\"detection-sensitivity-slider\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                  >\n                    Detection Sensitivity\n                  </label>\n\n                  <input\n                    type=\"range\"\n                    id=\"detection-sensitivity-slider\"\n                    className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                    min=\"1\"\n                    max=\"10\"\n                    step=\"1\"\n                    value={timeWindow}\n                    onChange={handleTimeWindowChange}\n                  />\n\n                  <div id=\"detection-sensitivity-value\" className=\"text-xs text-gray-600 dark:text-gray-400 text-center mb-1\">\n                    Time Window: {timeWindow} second{timeWindow !== 1 ? 's' : ''}\n                  </div>\n                </div>\n\n                <div id=\"detection-status-indicator\" className={`text-center text-sm ${\n                  detections.length > 0\n                    ? 'font-medium text-green-600 dark:text-green-400'\n                    : 'text-gray-600 dark:text-gray-400'\n                }`}>\n                  {detectionStatus}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Download button */}\n          {downloadUrl && (\n            <div className=\"flex justify-center mt-4 pt-2 border-t border-gray-200 dark:border-gray-700\">\n              <a\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors flex items-center text-sm\"\n                href={downloadUrl}\n                download={`video-${Date.now()}.mp4`}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                </svg>\n                Download Video\n              </a>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-2\"></div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * ModalProvider component\n * Provides modal context and renders modal components\n */\nexport function ModalProvider({ children }) {\n  const [snapshotModal, setSnapshotModal] = useState({\n    isOpen: false,\n    imageData: '',\n    streamName: '',\n  });\n\n  const [videoModal, setVideoModal] = useState({\n    isOpen: false,\n    videoUrl: '',\n    title: '',\n    downloadUrl: '',\n  });\n\n  // Show snapshot preview\n  const showSnapshotPreview = useCallback((imageData, streamName) => {\n    setSnapshotModal({\n      isOpen: true,\n      imageData,\n      streamName,\n    });\n  }, []);\n\n  // Show video modal\n  const showVideoModal = useCallback((videoUrl, title, downloadUrl) => {\n    console.log('ModalProvider.showVideoModal called with:', { videoUrl, title, downloadUrl });\n\n    // First reset the modal state completely\n    setVideoModal({\n      isOpen: false,\n      videoUrl: '',\n      title: '',\n      downloadUrl: ''\n    });\n\n    // Then set the new state after a small delay to ensure clean rendering\n    setTimeout(() => {\n      setVideoModal({\n        isOpen: true,\n        videoUrl,\n        title,\n        downloadUrl,\n      });\n      console.log('Video modal state updated with new content');\n    }, 50);\n  }, []);\n\n  // Use the snapshot manager hook for download functionality\n  const { downloadSnapshot } = useSnapshotManager();\n\n  // Handle snapshot download\n  const handleSnapshotDownload = useCallback(() => {\n    try {\n      const { imageData, streamName } = snapshotModal;\n\n      if (!imageData) {\n        console.error('No image data available for download');\n        showStatusMessage('Download failed: No image data available', 'error', 5000);\n        return;\n      }\n\n      // Use the downloadSnapshot function from the hook if available\n      if (downloadSnapshot) {\n        downloadSnapshot();\n        return;\n      }\n\n      // Fallback to the old implementation\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n      const link = document.createElement('a');\n      link.href = imageData;\n      link.download = fileName;\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        document.body.removeChild(link);\n      }, 100);\n\n      showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n    } catch (error) {\n      console.error('Error in snapshot download process:', error);\n      showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n    }\n  }, [snapshotModal, downloadSnapshot]);\n\n  // Close snapshot modal\n  const closeSnapshotModal = useCallback(() => {\n    setSnapshotModal(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  // Close video modal\n  const closeVideoModal = useCallback(() => {\n    console.log('Closing video modal');\n\n    // First just set isOpen to false to trigger the closing animation\n    setVideoModal(prev => ({ ...prev, isOpen: false }));\n\n    // Then completely reset the modal state after animation completes\n    setTimeout(() => {\n      setVideoModal({\n        isOpen: false,\n        videoUrl: '',\n        title: '',\n        downloadUrl: ''\n      });\n      console.log('Video modal state fully reset');\n    }, 300);\n  }, []);\n\n  // Create context value\n  const contextValue = {\n    showSnapshotPreview,\n    showVideoModal,\n  };\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      {children}\n\n      {/* Render modals */}\n      <SnapshotPreviewModal\n        isOpen={snapshotModal.isOpen}\n        onClose={closeSnapshotModal}\n        imageData={snapshotModal.imageData}\n        streamName={snapshotModal.streamName}\n        onDownload={handleSnapshotDownload}\n      />\n\n      <VideoModal\n        isOpen={videoModal.isOpen}\n        onClose={closeVideoModal}\n        videoUrl={videoModal.videoUrl}\n        title={videoModal.title}\n        downloadUrl={videoModal.downloadUrl}\n      />\n    </ModalContext.Provider>\n  );\n}\n\n// Export functions for backward compatibility\nexport function setupModals() {\n  console.warn('setupModals() is deprecated. Use <ModalProvider> component instead.');\n  // This function is kept for backward compatibility\n}\n\nexport function addModalStyles() {\n  console.warn('addModalStyles() is deprecated. Modal styles are now included in components.css');\n  // This function is kept for backward compatibility\n}\n\nexport function showVideoModal(videoUrl, title, downloadUrl) {\n  console.warn('Direct showVideoModal() is deprecated. Use ModalContext.showVideoModal instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showVideoModal) {\n    console.log('Using modal context to show video modal');\n    window.__modalContext.showVideoModal(videoUrl, title, downloadUrl);\n    return;\n  }\n\n  console.log('Falling back to direct modal rendering');\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    console.log('Creating modal root element');\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-modal-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  console.log('Dynamically importing preact to render modal');\n  import('preact').then(({ render, h }) => {\n    console.log('Rendering VideoModal component');\n    render(\n      h(VideoModal, {\n        isOpen: true,\n        onClose: () => {\n          console.log('Closing modal');\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        videoUrl,\n        title,\n        downloadUrl\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering video modal:', err);\n    showStatusMessage('Error showing video modal: ' + err.message, 'error');\n  });\n}\n\nexport function showSnapshotPreview(imageData, streamName) {\n  console.warn('Direct showSnapshotPreview() is deprecated. Use ModalContext.showSnapshotPreview instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showSnapshotPreview) {\n    window.__modalContext.showSnapshotPreview(imageData, streamName);\n    return;\n  }\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-snapshot-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  import('preact').then(({ render, h }) => {\n    const handleDownload = () => {\n      try {\n        // Import the snapshot manager hook\n        import('./SnapshotManager.jsx').then(({ useSnapshotManager }) => {\n          const { downloadSnapshot } = useSnapshotManager();\n          if (downloadSnapshot) {\n            downloadSnapshot();\n          } else {\n            // Fallback to the old implementation\n            const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n            const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n            const link = document.createElement('a');\n            link.href = imageData;\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n\n            // Clean up\n            setTimeout(() => {\n              document.body.removeChild(link);\n            }, 100);\n\n            showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n          }\n        }).catch(error => {\n          console.error('Error importing SnapshotManager:', error);\n          // Fallback to the old implementation\n          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n          const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n          const link = document.createElement('a');\n          link.href = imageData;\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n\n          // Clean up\n          setTimeout(() => {\n            document.body.removeChild(link);\n          }, 100);\n\n          showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n        });\n      } catch (error) {\n        console.error('Error downloading snapshot:', error);\n        showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n      }\n    };\n\n    render(\n      h(SnapshotPreviewModal, {\n        isOpen: true,\n        onClose: () => {\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        imageData,\n        streamName,\n        onDownload: handleDownload\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering snapshot modal:', err);\n    showStatusMessage('Error showing snapshot preview: ' + err.message, 'error');\n  });\n}\n","/**\n * Snapshot functionality for LiveView\n * React component for managing snapshots\n */\nimport { h } from 'preact';\nimport { useState, useCallback, useEffect } from 'preact/hooks';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { showSnapshotPreview } from './UI.jsx';\n\n/**\n * Custom hook for snapshot functionality\n * @returns {Object} Snapshot functions and state\n */\nexport function useSnapshotManager() {\n  const [snapshotData, setSnapshotData] = useState({\n    canvas: null,\n    fileName: null\n  });\n\n  /**\n   * Take a snapshot of a stream\n   * @param {string} streamId - ID of the stream\n   * @param {Event} event - Optional click event\n   */\n  const takeSnapshot = useCallback((streamId, event) => {\n    console.log(`Taking snapshot of stream with ID: ${streamId}`);\n\n    // Find the stream by ID or name\n    const streamElement = document.querySelector(`.snapshot-btn[data-id=\"${streamId}\"]`);\n    let streamName;\n\n    if (streamElement) {\n      // Get the stream name from the data attribute\n      streamName = streamElement.getAttribute('data-name');\n    } else if (event) {\n      // If we can't find by data-id, try to find from the event target\n      const clickedButton = event.currentTarget || event.target;\n      const videoCell = clickedButton ? clickedButton.closest('.video-cell') : null;\n\n      if (videoCell) {\n        streamName = videoCell.dataset.streamName;\n      }\n    }\n\n    if (!streamName) {\n      console.error('Stream name not found for ID:', streamId);\n      showStatusMessage('Cannot take snapshot: Stream not identified', 'error');\n      return;\n    }\n\n    // Find the video element\n    const videoElementId = `video-${streamName.replace(/\\s+/g, '-')}`;\n    const videoElement = document.getElementById(videoElementId);\n    if (!videoElement) {\n      console.error('Video element not found for stream:', streamName);\n      return;\n    }\n\n    // Create a canvas element to capture the frame\n    const canvas = document.createElement('canvas');\n    canvas.width = videoElement.videoWidth;\n    canvas.height = videoElement.videoHeight;\n\n    // Check if we have valid dimensions\n    if (canvas.width === 0 || canvas.height === 0) {\n      console.error('Invalid video dimensions:', canvas.width, canvas.height);\n      showStatusMessage('Cannot take snapshot: Video not loaded or has invalid dimensions');\n      return;\n    }\n\n    // Draw the current frame to the canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n    try {\n      // Generate a filename\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot-${streamName.replace(/\\s+/g, '-')}-${timestamp}.jpg`;\n\n      // Store the canvas and filename in state\n      setSnapshotData({\n        canvas,\n        fileName\n      });\n\n      // Show the standard preview\n      showSnapshotPreview(canvas.toDataURL('image/jpeg', 0.95), `Snapshot: ${streamName}`);\n\n      // Show success message\n      showStatusMessage('Snapshot taken successfully');\n    } catch (error) {\n      console.error('Error creating snapshot:', error);\n      showStatusMessage('Failed to create snapshot: ' + error.message);\n    }\n  }, []);\n\n  /**\n   * Download the snapshot as JPEG\n   */\n  const downloadSnapshot = useCallback(() => {\n    const { canvas, fileName } = snapshotData;\n\n    if (!canvas) {\n      console.error('No snapshot canvas available');\n      showStatusMessage('Download failed: No snapshot data available');\n      return;\n    }\n\n    // Convert canvas to blob and download\n    canvas.toBlob(function(blob) {\n      if (!blob) {\n        console.error('Failed to create blob from canvas');\n        showStatusMessage('Download failed: Unable to create image data');\n        return;\n      }\n\n      console.log('Created blob:', blob.size, 'bytes');\n\n      // Create object URL from blob\n      const blobUrl = URL.createObjectURL(blob);\n      console.log('Created blob URL:', blobUrl);\n\n      // Create download link\n      const link = document.createElement('a');\n      link.href = blobUrl;\n      link.download = fileName || 'snapshot.jpg';\n\n      // Add the link to the document\n      document.body.appendChild(link);\n      console.log('Added download link to document');\n\n      // Trigger click\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        if (document.body.contains(link)) {\n          document.body.removeChild(link);\n        }\n        URL.revokeObjectURL(blobUrl);\n        console.log('Cleaned up download resources');\n      }, 1000);\n\n      showStatusMessage('Download started');\n    }, 'image/jpeg', 0.95); // High quality JPEG\n  }, [snapshotData]);\n\n  return {\n    takeSnapshot,\n    downloadSnapshot,\n    hasSnapshot: !!snapshotData.canvas\n  };\n}\n\n/**\n * SnapshotManager component\n * @returns {JSX.Element} SnapshotManager component\n */\nexport function SnapshotManager() {\n  const { takeSnapshot, downloadSnapshot } = useSnapshotManager();\n\n  // Register the takeSnapshot function globally for backward compatibility\n  useEffect(() => {\n    window.takeSnapshot = takeSnapshot;\n\n    return () => {\n      // Clean up global function when component unmounts\n      delete window.takeSnapshot;\n    };\n  }, [takeSnapshot]);\n\n  // This component doesn't render anything visible\n  return null;\n}\n\n/**\n * SnapshotButton component\n * @param {Object} props Component props\n * @param {string} props.streamId Stream ID\n * @param {string} props.streamName Stream name\n * @param {Function} props.onSnapshot Optional custom snapshot handler\n * @returns {JSX.Element} SnapshotButton component\n */\nexport function SnapshotButton({ streamId, streamName, onSnapshot }) {\n  const { takeSnapshot } = useSnapshotManager();\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Use custom snapshot handler if provided, otherwise use default\n    if (typeof onSnapshot === 'function') {\n      onSnapshot(event);\n    } else {\n      takeSnapshot(streamId, event);\n    }\n  };\n\n  return (\n    <button\n      className=\"snapshot-btn\"\n      title=\"Take Snapshot\"\n      data-id={streamId}\n      data-name={streamName}\n      onClick={handleClick}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"white\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\n        <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\n      </svg>\n    </button>\n  );\n}\n\n/**\n * DownloadButton component\n * @param {Object} props Component props\n * @returns {JSX.Element} DownloadButton component\n */\nexport function DownloadButton() {\n  const { downloadSnapshot, hasSnapshot } = useSnapshotManager();\n\n  if (!hasSnapshot) return null;\n\n  return (\n    <button\n      className=\"download-btn px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n      onClick={downloadSnapshot}\n    >\n      Download\n    </button>\n  );\n}\n"],"names":["props","isOpen","onClose","onConfirm","mode","count","title","message","jsx","class","onClick","e","target","currentTarget","onKeyDown","key","children","jsxs","console","warn","videoUrl","downloadUrl","window","__modalContext","showVideoModal","log","document","getElementById","root","createElement","id","body","appendChild","modalContainer","__vitePreload","async","render","h","h2","module","import","meta","url","then","VideoModal","removeChild","catch","err","error","showStatusMessage","snapshotModal","setSnapshotModal","useState","imageData","streamName","videoModal","setVideoModal","showSnapshotPreview","useCallback","setTimeout","downloadSnapshot","useSnapshotManager","handleSnapshotDownload","fileName","Date","toISOString","replace","link","href","download","click","closeSnapshotModal","prev","closeVideoModal","contextValue","ModalContext","Provider","value","SnapshotPreviewModal","onDownload","snapshotData","setSnapshotData","canvas","takeSnapshot","streamId","event","streamElement","querySelector","getAttribute","clickedButton","videoCell","closest","dataset","videoElementId","videoElement","width","videoWidth","height","videoHeight","getContext","drawImage","timestamp","toDataURL","toBlob","blob","size","blobUrl","URL","createObjectURL","contains","revokeObjectURL","hasSnapshot","SnapshotManager","useEffect","SnapshotButton","onSnapshot","className","preventDefault","stopPropagation","xmlns","viewBox","fill","stroke","d","cx","cy","r","createContext","modalRef","useRef","handleKeyDown","addEventListener","current","modalContent","classList","remove","add","removeEventListener","createPortal","ref","style","src","alt","detectionOverlayEnabled","setDetectionOverlayEnabled","timeWindow","setTimeWindow","detections","setDetections","recordingData","setRecordingData","detectionStatus","setDetectionStatus","currentSpeed","setCurrentSpeed","videoRef","canvasRef","load","pause","removeAttribute","recordingIdMatch","match","recordingId","parseInt","response","fetch","ok","Error","data","json","stream","start_time","end_time","startTime","Math","floor","getTime","endTime","detectionsResponse","fetchedDetections","length","fetchRecordingData","drawDetections","video","requestAnimationFrame","ctx","clearRect","currentTime","currentTimestamp","visibleDetections","filter","detection","abs","forEach","x","y","strokeStyle","lineWidth","strokeRect","fillStyle","labelText","label","round","confidence","labelWidth","measureText","fillRect","font","fillText","paused","ended","handlePlay","handleSeeked","handleTimeUpdate","lastDrawnTime","display","animationTimeout","clearTimeout","controls","autoPlay","onError","onLoadStart","onLoadedData","type","map","speed","playbackRate","handleSpeedChange","checked","onChange","disabled","htmlFor","min","max","step","newTimeWindow","now","strokeLinecap","strokeLinejoin","strokeWidth","handleDownload","useSnapshotManager2","Promise","resolve","SnapshotManager$1"],"mappings":"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"}