const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./preact-app-C-A_h94V.js","./preact-app-BxuTjwGD.css"])))=>i.map(i=>d[i]);
var q=Object.freeze,pe=Object.defineProperty;var c=(e,t)=>q(pe(e,"raw",{value:q(t||e.slice())}));import{h as u,d as S,A as T,y as M,_ as ye,c as k}from"./preact-app-C-A_h94V.js";import{C as ve}from"./LoadingIndicator-Bt3tJ63v.js";import{f as _,e as N,c as we}from"./fetch-utils-GN-4zfXA.js";var O;function he({restartSystem:e,shutdownSystem:t,isRestarting:s,isShuttingDown:r}){return u(O||(O=c(['\n    <div class="page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">\n      <h2 class="text-xl font-bold">System</h2>\n      <div class="controls space-x-2">\n        <button \n          id="restart-btn" \n          class="px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=",'\n        >\n          Restart\n        </button>\n        <button \n          id="shutdown-btn" \n          class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed"\n          onClick=',"\n          disabled=","\n        >\n          Shutdown\n        </button>\n      </div>\n    </div>\n  "])),e,s||r,t,s||r)}var B;function $e({systemInfo:e,formatUptime:t}){var s,r,l,o;return u(B||(B=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">System Information</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Version:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Uptime:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Model:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">CPU Cores:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between items-center">\n          <span class="font-medium">CPU Usage:</span>\n          <div class="w-32 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n          <span>","</span>\n        </div>\n      </div>\n    </div>\n  "])),e.version||"Unknown",e.uptime?t(e.uptime):"Unknown",((s=e.cpu)==null?void 0:s.model)||"Unknown",((r=e.cpu)==null?void 0:r.cores)||"Unknown","width: ".concat(((l=e.cpu)==null?void 0:l.usage)||0,"%"),(o=e.cpu)!=null&&o.usage?"".concat(e.cpu.usage.toFixed(1),"%"):"Unknown")}var H;function xe({systemInfo:e,formatBytes:t}){var a,$,f,v,x,b,w,L,P,R,h,D;const s=((a=e.memory)==null?void 0:a.used)||0,r=(($=e.go2rtcMemory)==null?void 0:$.used)||0,l=((f=e.memory)==null?void 0:f.total)||0,o=s+r,i=l?(o/l*100).toFixed(1):0,m=o?(s/o*100).toFixed(1):0,n=o?(r/o*100).toFixed(1):0;return u(H||(H=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Memory & Storage</h3>\n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Process Memory:</span>\n            <div>\n              <span class="inline-block px-2 py-0.5 mr-1 text-xs rounded bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">\n                LightNVR: ','\n              </span>\n              <span class="inline-block px-2 py-0.5 text-xs rounded bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">\n                go2rtc: ','\n              </span>\n            </div>\n          </div>\n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total memory</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=','>\n              <div class="bg-blue-600 h-2.5" style=','></div>\n              <div class="bg-green-500 h-2.5" style=','></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Memory:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">LightNVR Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=','></div>\n          </div>\n        </div>\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">System Storage:</span>\n            <span>'," / ",'</span>\n          </div>\n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">\n            <div class="bg-blue-600 h-2.5 rounded-full" style=',"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),t(s),t(r),t(o),t(l),i,"width: ".concat(i,"%"),"width: ".concat(m,"%"),"width: ".concat(n,"%"),(v=e.systemMemory)!=null&&v.used?t(e.systemMemory.used):"0",(x=e.systemMemory)!=null&&x.total?t(e.systemMemory.total):"0","width: ".concat((b=e.systemMemory)!=null&&b.total?(e.systemMemory.used/e.systemMemory.total*100).toFixed(1):0,"%"),(w=e.disk)!=null&&w.used?t(e.disk.used):"0",(L=e.disk)!=null&&L.total?t(e.disk.total):"0","width: ".concat((P=e.disk)!=null&&P.total?(e.disk.used/e.disk.total*100).toFixed(1):0,"%"),(R=e.systemDisk)!=null&&R.used?t(e.systemDisk.used):"0",(h=e.systemDisk)!=null&&h.total?t(e.systemDisk.total):"0","width: ".concat((D=e.systemDisk)!=null&&D.total?(e.systemDisk.used/e.systemDisk.total*100).toFixed(1):0,"%"))}var G,K,Y,J,Z;function ke({systemInfo:e,formatBytes:t}){var m;if(!e.streamStorage||!Array.isArray(e.streamStorage)||e.streamStorage.length===0)return u(G||(G=c(['\n      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n        <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n        <div class="text-gray-500 dark:text-gray-400 text-center py-4">\n          No stream storage information available\n        </div>\n      </div>\n    '])));const s=e.streamStorage.reduce((n,a)=>n+a.size,0),r=((m=e.disk)==null?void 0:m.total)||0,l=r?(s/r*100).toFixed(1):0,o=e.streamStorage.map(n=>({name:n.name,size:n.size,count:n.count,slicePercent:s?(n.size/s*100).toFixed(1):0}));o.sort((n,a)=>a.size-n.size);const i=["bg-blue-600","bg-green-500","bg-yellow-500","bg-red-500","bg-purple-500","bg-pink-500","bg-indigo-500","bg-teal-500"];return u(Z||(Z=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Stream Storage</h3>\n      \n      <div class="space-y-4">\n        <div>\n          <div class="flex justify-between mb-1">\n            <span class="font-medium">Storage per Stream:</span>\n            <div class="flex flex-wrap justify-end gap-1">\n              ','\n            </div>\n          </div>\n          \n          <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-1">\n            <span>Combined: '," / ","</span>\n            <span>",'% of total storage</span>\n          </div>\n          \n          <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 overflow-hidden">\n            <div class="flex h-full" style=',">\n              ",'\n            </div>\n          </div>\n          \n          <div class="mt-4">\n            <h4 class="font-medium mb-2">Stream Details:</h4>\n            <div class="grid grid-cols-1 md:grid-cols-2 gap-2">\n              ',"\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "])),o.map((n,a)=>u(K||(K=c(['\n                <span class="inline-block px-2 py-0.5 text-xs rounded '," ",'">\n                  ',": ","\n                </span>\n              "])),i[a%i.length].replace("bg-","bg-opacity-20 bg-"),i[a%i.length].replace("bg-","text-"),n.name,t(n.size))),t(s),t(r),l,"width: ".concat(l,"%"),o.map((n,a)=>u(Y||(Y=c(['\n                <div class="',' h-2.5" style=',"></div>\n              "])),i[a%i.length],"width: ".concat(n.slicePercent,"%"))),o.map((n,a)=>u(J||(J=c(['\n                <a href="recordings.html?stream=','" \n                   class="flex items-center p-2 rounded bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors cursor-pointer">\n                  <div class="w-3 h-3 rounded-full mr-2 ','"></div>\n                  <div>\n                    <div class="font-medium">','</div>\n                    <div class="text-xs text-gray-500 dark:text-gray-400">\n                      '," (","%) â€¢ "," recordings\n                    </div>\n                  </div>\n                </a>\n              "])),encodeURIComponent(n.name),i[a%i.length],n.name,t(n.size),n.slicePercent,n.count)))}var Q,X,I;function Se({systemInfo:e}){var t,s;return u(I||(I=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Network Interfaces</h3>\n      <div class="space-y-2">\n        ',"\n      </div>\n    </div>\n  "])),(s=(t=e.network)==null?void 0:t.interfaces)!=null&&s.length?e.network.interfaces.map(r=>u(Q||(Q=c(["\n          <div key=",' class="mb-2 pb-2 border-b border-gray-100 dark:border-gray-700 last:border-0">\n            <div class="flex justify-between">\n              <span class="font-medium">',":</span>\n              <span>",'</span>\n            </div>\n            <div class="text-sm text-gray-500 dark:text-gray-400">\n              MAC: '," | ","\n            </div>\n          </div>\n        "])),r.name,r.name,r.address||"No IP",r.mac||"Unknown",r.up?"Up":"Down")):u(X||(X=c(['<div class="text-gray-500 dark:text-gray-400">No network interfaces found</div>']))))}var ee;function Le({systemInfo:e,formatBytes:t}){var s,r,l,o;return u(ee||(ee=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">\n      <h3 class="text-lg font-semibold mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">Streams & Recordings</h3>\n      <div class="space-y-2">\n        <div class="flex justify-between">\n          <span class="font-medium">Active Streams:</span>\n          <span>'," / ",'</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings:</span>\n          <span>','</span>\n        </div>\n        <div class="flex justify-between">\n          <span class="font-medium">Recordings Size:</span>\n          <span>',"</span>\n        </div>\n      </div>\n    </div>\n  "])),((s=e.streams)==null?void 0:s.active)||0,((r=e.streams)==null?void 0:r.total)||0,((l=e.recordings)==null?void 0:l.count)||0,(o=e.recordings)!=null&&o.size?t(e.recordings.size):"0")}var te,se,oe,re,ne,le;function Ce(e){if(e==null)return u(te||(te=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">UNKNOWN</span>'])));const t=String(e).toLowerCase().trim();if(t==="error"||t==="err")return u(se||(se=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">ERROR</span>'])));if(t==="warning"||t==="warn")return u(oe||(oe=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">WARN</span>'])));if(t==="info")return u(re||(re=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">INFO</span>'])));if(t==="debug"||t==="dbg")return u(ne||(ne=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">DEBUG</span>'])));{const s=String(e).toUpperCase();return u(le||(le=c(['<span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">',"</span>"])),s)}}var ie,ae,de;function Me({logs:e,logLevel:t,logCount:s,setLogLevel:r,setLogCount:l,loadLogs:o,clearLogs:i}){return u(de||(de=c(['\n    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 mb-4">\n      <div class="flex justify-between items-center mb-4 pb-2 border-b border-gray-200 dark:border-gray-700">\n        <h3 class="text-lg font-semibold">System Logs</h3>\n        <div class="flex space-x-2">\n          <select \n            id="log-level" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="error">Error</option>\n            <option value="warning">Warning</option>\n            <option value="info">Info</option>\n            <option value="debug">Debug</option>\n          </select>\n          <select \n            id="log-count" \n            class="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"\n            value=',"\n            onChange=",'\n          >\n            <option value="50">50 lines</option>\n            <option value="100">100 lines</option>\n            <option value="200">200 lines</option>\n            <option value="500">500 lines</option>\n          </select>\n          <button \n            id="refresh-logs-btn" \n            class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Refresh\n          </button>\n          <button \n            id="clear-logs-btn" \n            class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"\n            onClick=','\n          >\n            Clear Logs\n          </button>\n        </div>\n      </div>\n      <div class="logs-container bg-gray-100 dark:bg-gray-900 rounded p-4 overflow-auto max-h-96 font-mono text-sm">\n        ',"\n      </div>\n    </div>\n  "])),t,m=>{const n=m.target.value;console.log("LogsView: Log level changed from ".concat(t," to ").concat(n)),r(n)},s,m=>l(parseInt(m.target.value,10)),o,i,e.length===0?u(ie||(ie=c(['\n          <div class="text-gray-500 dark:text-gray-400">No logs found</div>\n        ']))):e.map((m,n)=>u(ae||(ae=c(["\n          <div key=",' class="log-entry mb-1 last:mb-0">\n            <span class="text-gray-500 dark:text-gray-400">','</span>\n            <span class="mx-2">',"</span>\n            <span class=",">","</span>\n          </div>\n        "])),n,m.timestamp,Ce(m.level),"log-message ".concat(m.level==="error"?"text-red-600 dark:text-red-400":""),m.message)))}function W(e,t=1){if(e===0)return"0 Bytes";const s=1024,r=t<0?0:t,l=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],o=Math.floor(Math.log(e)/Math.log(s));return parseFloat((e/Math.pow(s,o)).toFixed(r))+" "+l[o]}function Pe(e){const t=Math.floor(e/86400),s=Math.floor(e%86400/3600),r=Math.floor(e%3600/60),l=Math.floor(e%60);let o="";return t>0&&(o+="".concat(t,"d ")),(s>0||t>0)&&(o+="".concat(s,"h ")),(r>0||s>0||t>0)&&(o+="".concat(r,"m ")),o+="".concat(l,"s"),o}function j(e,t){if(String(t||"").toLowerCase()==="debug")return!0;let s=2,r=2;const l=String(e||"").toLowerCase(),o=String(t||"").toLowerCase();return l==="error"?s=0:l==="warning"||l==="warn"?s=1:l==="info"?s=2:l==="debug"&&(s=3),o==="error"?r=0:o==="warning"||o==="warn"?r=1:o==="info"?r=2:o==="debug"&&(r=3),s<=r}function Ue({logLevel:e,logCount:t,onLogsReceived:s}){const[r,l]=S(!1),o=T(null),i=T(null);M(()=>{const n=localStorage.getItem("lastLogTimestamp");n&&(console.log("Loaded last log timestamp from localStorage:",n),i.current=n)},[]);const m=()=>{if(!window.wsClient||!window.wsClient.isConnected()){console.log("WebSocket not connected, skipping log fetch");return}if(!document.getElementById("system-page")){console.log("Not on system page, skipping log fetch");return}console.log("Fetching logs via WebSocket with level: debug (to get all logs, will filter on frontend)");const n={level:"debug",count:t};i.current&&(n.last_timestamp=i.current),window.wsClient.getClientId&&(n.client_id=window.wsClient.getClientId()),console.log("Sending fetch request with payload:",n);try{window.wsClient.send("fetch","system/logs",n)?console.log("Fetch request sent successfully"):console.warn("Failed to send fetch request, will retry on next poll")}catch(a){console.error("Error sending fetch request:",a)}};return M(()=>{if(!window.wsClient){console.log("WebSocket client not available");return}const n=a=>{if(console.log("Received logs update via WebSocket:",a),!document.getElementById("system-page")){console.log("Not on system page, ignoring log update");return}if(a&&a.logs&&Array.isArray(a.logs)){const $=a.logs.map(f=>{const v={timestamp:f.timestamp||"Unknown",level:f.level||"info",message:f.message||""};return v.level&&(v.level=v.level.toLowerCase()),v.level==="warn"&&(v.level="warning"),v});a.latest_timestamp&&(i.current=a.latest_timestamp,localStorage.setItem("lastLogTimestamp",a.latest_timestamp),console.log("Updated and saved last log timestamp:",a.latest_timestamp)),$.length>0?(console.log("Received ".concat($.length," logs via WebSocket")),_("/api/system/logs?level=debug&count=100",{timeout:15e3,retries:1,retryDelay:1e3}).then(f=>{if(f.logs&&Array.isArray(f.logs)){const x=[...f.logs.map(b=>{const w={timestamp:b.timestamp||"Unknown",level:(b.level||"info").toLowerCase(),message:b.message||""};return w.level==="warn"&&(w.level="warning"),w})];$.forEach(b=>{x.some(L=>L.timestamp===b.timestamp&&L.message===b.message)||x.push(b)}),x.sort((b,w)=>new Date(w.timestamp)-new Date(b.timestamp)),s(x)}else s($)}).catch(f=>{console.error("Error fetching existing logs:",f),s($)})):console.log("No logs received via WebSocket")}};return console.log("Registering handler for system/logs via WebSocket (once on mount)"),window.wsClient.on("update","system/logs",n),()=>{console.log("Unregistering handler for system/logs via WebSocket (component unmounting)"),window.wsClient.off("update","system/logs"),o.current&&(clearInterval(o.current),o.current=null)}},[]),M(()=>{if(r&&!o.current){if(console.log("Starting log polling"),window.wsClient&&typeof window.wsClient.subscribe=="function"){console.log("Subscribing to system/logs via WebSocket for polling");const n={level:"debug",...i.current?{since:i.current}:{}};window.wsClient.subscribe("system/logs",n),console.log("Subscribed to system/logs with level: debug and last_timestamp: ".concat(i.current||"NULL"))}m(),console.log("Setting up polling interval for logs (every 5 seconds)"),o.current=setInterval(()=>{console.log("Polling interval triggered, fetching logs..."),m()},5e3)}else!r&&o.current&&(console.log("Stopping log polling"),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket"),window.wsClient.unsubscribe("system/logs")),clearInterval(o.current),o.current=null);return()=>{o.current&&(clearInterval(o.current),o.current=null),window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Unsubscribing from system/logs via WebSocket on cleanup"),window.wsClient.unsubscribe("system/logs"))}},[r,e]),M(()=>(console.log("LogsPoller: Setting up polling with log level ".concat(e)),l(!1),setTimeout(()=>{l(!0)},100),()=>{console.log("LogsPoller: Cleaning up on unmount"),l(!1)}),[e,t]),null}var ge;function Re(){const[e,t]=S({version:"",uptime:"",cpu:{model:"",cores:0,usage:0},memory:{total:0,used:0,free:0},go2rtcMemory:{total:0,used:0,free:0},systemMemory:{total:0,used:0,free:0},disk:{total:0,used:0,free:0},systemDisk:{total:0,used:0,free:0},network:{interfaces:[]},streams:{active:0,total:0},recordings:{count:0,size:0}}),[s,r]=S([]),[l,o]=S("debug"),i=T("debug"),m=g=>{console.log("SystemView: Setting log level from ".concat(l," to ").concat(g)),console.log("Current stack trace:",new Error().stack),o(g),i.current=g,console.log("SystemView: logLevelRef is now: ".concat(i.current)),setTimeout(()=>{console.log("SystemView: After setState, logLevel is now: ".concat(l)),console.log("SystemView: After setState, logLevelRef is now: ".concat(i.current))},0)},[n,a]=S(100),[$,f]=S(!1),[v,x]=S(!1),[b,w]=S(!0),[L,P]=S(!1),R=g=>{console.log("SystemView received new logs:",g.length);const d=i.current;console.log("Filtering ".concat(g.length," logs based on log level: ").concat(d));const p=g.filter(y=>{const C=j(y.level,d);return y.level==="debug"&&d==="debug"&&!C&&console.warn("Debug log filtered out despite debug level selected:",y),C});console.log("After filtering: ".concat(p.length," logs match the current log level")),r(p),setTimeout(()=>{const y=document.querySelector(".logs-container");y&&(y.scrollTop=y.scrollHeight)},100)},h=T(null);M(()=>(h.current=we(),D(),E(),console.log("System page loaded - no automatic polling for system info"),()=>{window.wsClient&&typeof window.wsClient.unsubscribe=="function"&&(console.log("Cleaning up any WebSocket subscriptions on unmount"),window.wsClient.unsubscribe("system/logs")),h.current&&h.current.abort()}),[]),M(()=>{if(console.log("SystemView: Log level changed to ".concat(l," or count changed to ").concat(n)),s.length===0)console.log("Initial logs load via HTTP API"),E();else{console.log("Filtering existing logs based on new log level");const g=i.current;console.log("Filtering existing logs using logLevelRef.current: ".concat(g)),r(d=>d.filter(p=>j(p.level,g)))}},[l,n]);const D=async()=>{var g;try{w(!0);const d=await _("/api/system/info",{signal:(g=h.current)==null?void 0:g.signal,timeout:15e3,retries:2,retryDelay:1e3});t(d),P(!0)}catch(d){d.message!=="Request was cancelled"&&(console.error("Error loading system info:",d),P(!1))}finally{w(!1)}},E=async()=>{var g;try{const d=i.current;console.log("Loading logs from API with level: debug (to get all logs, will filter on frontend)");const p=await _("/api/system/logs?level=debug&count=".concat(n),{signal:(g=h.current)==null?void 0:g.signal,timeout:2e4,retries:1,retryDelay:1e3});if(p.logs&&Array.isArray(p.logs))if(p.logs.length>0&&typeof p.logs[0]=="object"&&p.logs[0].level){let y=p.logs.filter(C=>j(C.level,d));console.log("Filtered ".concat(p.logs.length," logs to ").concat(y.length," based on log level ").concat(d)),r(y)}else{const y=p.logs.map(A=>{let z="Unknown",F="debug",V=A;const be=/\[(.*?)\]\s*\[(.*?)\]\s*(.*)/,U=A.match(be);return U&&U.length>=4&&(z=U[1],F=U[2].toLowerCase(),V=U[3],F==="warn"&&(F="warning")),{timestamp:z,level:F,message:V}});let C=y.filter(A=>j(A.level,d));console.log("Filtered ".concat(y.length," parsed logs to ").concat(C.length," based on log level ").concat(d)),r(C)}else r([])}catch(d){console.error("Error loading logs:",d),k("Error loading logs: "+d.message)}},ue=async()=>{var g;if(confirm("Are you sure you want to clear all logs?"))try{k("Clearing logs..."),await N("/api/system/logs/clear",{method:"POST",signal:(g=h.current)==null?void 0:g.signal,timeout:15e3,retries:1,retryDelay:1e3}),k("Logs cleared successfully"),E()}catch(d){console.error("Error clearing logs:",d),k("Error clearing logs: "+d.message)}},me=async()=>{var g;if(confirm("Are you sure you want to restart the system?"))try{f(!0),k("Restarting system..."),await N("/api/system/restart",{method:"POST",signal:(g=h.current)==null?void 0:g.signal,timeout:3e4,retries:0}),k("System is restarting. Please wait..."),setTimeout(()=>{window.location.reload()},1e4)}catch(d){console.error("Error restarting system:",d),k("Error restarting system: "+d.message),f(!1)}},fe=async()=>{var g;if(confirm("Are you sure you want to shut down the system?"))try{x(!0),k("Shutting down system..."),await N("/api/system/shutdown",{method:"POST",signal:(g=h.current)==null?void 0:g.signal,timeout:3e4,retries:0}),k("System is shutting down. You will need to manually restart it.")}catch(d){console.error("Error shutting down system:",d),k("Error shutting down system: "+d.message),x(!1)}};return M(()=>{!window.wsClient&&typeof WebSocketClient=="function"&&(console.log("Initializing WebSocket client for system page"),window.wsClient=new WebSocketClient)},[]),u(ge||(ge=c(['\n    <section id="system-page" class="page">\n      <'," \n        restartSystem="," \n        shutdownSystem="," \n        isRestarting="," \n        isShuttingDown="," \n      />\n      \n      <","\n        isLoading=","\n        hasData=",'\n        loadingMessage="Loading system information..."\n        emptyMessage="System information not available. Please try again later."\n      >\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," formatUptime="," />\n          <"," systemInfo="," formatBytes=",' />\n        </div>\n        \n        <div class="grid grid-cols-1 gap-4 mb-4">\n          <'," systemInfo="," formatBytes=",' />\n        </div>\n        \n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n          <'," systemInfo="," />\n          <"," systemInfo="," formatBytes="," />\n        </div>\n        \n        <"," \n          logs="," \n          logLevel="," \n          logCount="," \n          setLogLevel="," \n          setLogCount="," \n          loadLogs="," \n          clearLogs="," \n        />\n        \n        <","\n          logLevel=","\n          logCount=","\n          onLogsReceived=","\n        />\n      <//>\n    </section>\n  "])),he,me,fe,$,v,ve,b,L,$e,e,Pe,xe,e,W,ke,e,W,Se,e,Le,e,W,Me,s,l,n,m,a,E,ue,Ue,l,n,R)}var ce;function je(){const e=document.getElementById("main-content");e&&ye(async()=>{const{render:t}=await import("./preact-app-C-A_h94V.js").then(s=>s.p);return{render:t}},__vite__mapDeps([0,1]),import.meta.url).then(({render:t})=>{t(u(ce||(ce=c(["<"," />"])),Re),e),setTimeout(()=>{const s=new CustomEvent("refresh-system-info");window.dispatchEvent(s)},100)})}window.addEventListener("load",()=>{window.addEventListener("refresh-system-info",async()=>{try{(await N("/api/system/info",{timeout:15e3,retries:1,retryDelay:1e3})).ok&&console.log("System info refreshed")}catch(e){console.error("Error refreshing system info:",e)}})});export{Re as SystemView,je as loadSystemView};
//# sourceMappingURL=SystemView-D5VaG4gu.js.map
