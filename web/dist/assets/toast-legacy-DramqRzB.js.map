{"version":3,"file":"toast-legacy-DramqRzB.js","sources":["../../js/components/preact/toast.js"],"sourcesContent":["/**\n * LightNVR Toast Notification System\n * Simple, direct DOM-based toast notifications\n */\n\n/**\n * Create a toast directly in the DOM\n * @param {string} message - Message to display\n * @param {string} type - Toast type ('success', 'error', 'warning', 'info')\n * @param {number} duration - Duration in milliseconds\n */\nexport function createDirectToast(message, type = 'info', duration = 4000) {\n  console.log('Creating direct DOM toast:', message);\n  \n  // Get or create container\n  let container = document.getElementById('direct-toast-container');\n  if (!container) {\n    container = document.createElement('div');\n    container.id = 'direct-toast-container';\n    container.style.position = 'fixed';\n    container.style.top = '20px';\n    container.style.left = '50%';\n    container.style.transform = 'translateX(-50%)';\n    container.style.zIndex = '10000';\n    container.style.display = 'flex';\n    container.style.flexDirection = 'column';\n    container.style.alignItems = 'center';\n    document.body.appendChild(container);\n    console.log('Created direct toast container');\n  }\n  \n  // Create toast element\n  const toast = document.createElement('div');\n  toast.textContent = message;\n  toast.style.padding = '10px 15px';\n  toast.style.borderRadius = '4px';\n  toast.style.marginBottom = '10px';\n  toast.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';\n  toast.style.minWidth = '250px';\n  toast.style.textAlign = 'center';\n  toast.style.color = 'white';\n  \n  // Set color based on type\n  switch (type) {\n    case 'success':\n      toast.style.backgroundColor = '#10b981'; // green-500\n      break;\n    case 'error':\n      toast.style.backgroundColor = '#ef4444'; // red-500\n      break;\n    case 'warning':\n      toast.style.backgroundColor = '#f59e0b'; // yellow-500\n      break;\n    default:\n      toast.style.backgroundColor = '#3b82f6'; // blue-500\n      break;\n  }\n  \n  // Add to container\n  container.appendChild(toast);\n  console.log('Added toast to direct container');\n  \n  // Remove after specified duration\n  setTimeout(() => {\n    if (container.contains(toast)) {\n      container.removeChild(toast);\n      console.log('Removed direct toast');\n    }\n    \n    // Remove container if empty\n    if (container.children.length === 0) {\n      document.body.removeChild(container);\n      console.log('Removed direct toast container');\n    }\n  }, duration);\n}\n\n/**\n * Show a success toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showSuccessToast(message, duration = 4000) {\n  createDirectToast(message, 'success', duration);\n}\n\n/**\n * Show an error toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showErrorToast(message, duration = 4000) {\n  createDirectToast(message, 'error', duration);\n}\n\n/**\n * Show a warning toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showWarningToast(message, duration = 4000) {\n  createDirectToast(message, 'warning', duration);\n}\n\n/**\n * Show an info toast notification\n * @param {string} message - Message to display\n * @param {number} duration - Duration in milliseconds (default: 4000)\n */\nexport function showInfoToast(message, duration = 4000) {\n  createDirectToast(message, 'info', duration);\n}\n\n/**\n * Generic function to show a toast notification\n * @param {string} message - Message to display\n * @param {string} type - Toast type ('success', 'error', 'warning', 'info')\n * @param {number} duration - Duration in milliseconds\n */\nexport function showToast(message, type = 'info', duration = 4000) {\n  createDirectToast(message, type, duration);\n}\n\n/**\n * For backward compatibility with the old showStatusMessage function\n * @param {string} message - Message to display\n * @param {string} type - Message type ('success', 'error', 'warning', 'info')\n * @param {number} duration - Duration in milliseconds\n */\nexport function showStatusMessage(message, type = 'info', duration = 4000) {\n  // Map type strings to the new format\n  let toastType = 'info';\n  \n  if (type === 'success') {\n    toastType = 'success';\n  } else if (type === 'error') {\n    toastType = 'error';\n  } else if (type === 'warning') {\n    toastType = 'warning';\n  }\n  \n  createDirectToast(message, toastType, duration);\n}\n\n/**\n * Initialize the toast system\n * @param {boolean} showInitMessage - Whether to show an initialization message\n */\nexport function initToastContainer(showInitMessage = false) {\n  console.log('Initializing simple toast system...');\n  \n  // Only show initialization message if explicitly requested\n  if (showInitMessage) {\n    setTimeout(() => {\n      createDirectToast('Toast system initialized', 'info', 4000);\n    }, 500);\n  }\n}\n\n// Export for global use\nif (typeof window !== 'undefined') {\n  // Make toast functions available globally\n  window.showSuccessToast = showSuccessToast;\n  window.showErrorToast = showErrorToast;\n  window.showWarningToast = showWarningToast;\n  window.showInfoToast = showInfoToast;\n  window.showToast = showToast;\n  window.showStatusMessage = showStatusMessage;\n  window.createDirectToast = createDirectToast;\n  \n  // Log for debugging\n  console.log('Toast functions exported to window object');\n  \n  // Add a test function to the window object\n  window.testToast = (type = 'info') => {\n    const message = `Test ${type} toast at ${new Date().toLocaleTimeString()}`;\n    console.log(`Triggering test toast: ${message}`);\n    createDirectToast(message, type);\n    console.log(`Test toast triggered: ${message}`);\n    return 'Toast triggered';\n  };\n}\n"],"names":["createDirectToast","message","type","duration","console","log","container","document","getElementById","createElement","id","style","position","top","left","transform","zIndex","display","flexDirection","alignItems","body","appendChild","toast","textContent","padding","borderRadius","marginBottom","boxShadow","minWidth","textAlign","color","backgroundColor","setTimeout","contains","removeChild","children","length","showSuccessToast","showErrorToast","showWarningToast","showInfoToast","showToast","showStatusMessage","toastType","showInitMessage","window","testToast","Date","toLocaleTimeString"],"mappings":"yEAWO,SAASA,EAAkBC,EAASC,EAAO,OAAQC,EAAW,KACnEC,QAAQC,IAAI,6BAA8BJ,GAG1C,IAAIK,EAAYC,SAASC,eAAe,0BACnCF,IACHA,EAAYC,SAASE,cAAc,OACnCH,EAAUI,GAAK,yBACfJ,EAAUK,MAAMC,SAAW,QAC3BN,EAAUK,MAAME,IAAM,OACtBP,EAAUK,MAAMG,KAAO,MACvBR,EAAUK,MAAMI,UAAY,mBAC5BT,EAAUK,MAAMK,OAAS,QACzBV,EAAUK,MAAMM,QAAU,OAC1BX,EAAUK,MAAMO,cAAgB,SAChCZ,EAAUK,MAAMQ,WAAa,SAC7BZ,SAASa,KAAKC,YAAYf,GAC1BF,QAAQC,IAAI,mCAId,MAAMiB,EAAQf,SAASE,cAAc,OAWrC,OAVAa,EAAMC,YAActB,EACpBqB,EAAMX,MAAMa,QAAU,YACtBF,EAAMX,MAAMc,aAAe,MAC3BH,EAAMX,MAAMe,aAAe,OAC3BJ,EAAMX,MAAMgB,UAAY,4BACxBL,EAAMX,MAAMiB,SAAW,QACvBN,EAAMX,MAAMkB,UAAY,SACxBP,EAAMX,MAAMmB,MAAQ,QAGZ5B,GACN,IAAK,UACHoB,EAAMX,MAAMoB,gBAAkB,UAC9B,MACF,IAAK,QACHT,EAAMX,MAAMoB,gBAAkB,UAC9B,MACF,IAAK,UACHT,EAAMX,MAAMoB,gBAAkB,UAC9B,MACF,QACET,EAAMX,MAAMoB,gBAAkB,UAKlCzB,EAAUe,YAAYC,GACtBlB,QAAQC,IAAI,mCAGZ2B,YAAW,KACL1B,EAAU2B,SAASX,KACrBhB,EAAU4B,YAAYZ,GACtBlB,QAAQC,IAAI,yBAIoB,IAA9BC,EAAU6B,SAASC,SACrB7B,SAASa,KAAKc,YAAY5B,GAC1BF,QAAQC,IAAI,kCAClB,GACKF,EACL,CAOO,SAASkC,EAAiBpC,EAASE,EAAW,KACnDH,EAAkBC,EAAS,UAAWE,EACxC,CAOO,SAASmC,EAAerC,EAASE,EAAW,KACjDH,EAAkBC,EAAS,QAASE,EACtC,CAOO,SAASoC,EAAiBtC,EAASE,EAAW,KACnDH,EAAkBC,EAAS,UAAWE,EACxC,CAOO,SAASqC,EAAcvC,EAASE,EAAW,KAChDH,EAAkBC,EAAS,OAAQE,EACrC,CAQO,SAASsC,EAAUxC,EAASC,EAAO,OAAQC,EAAW,KAC3DH,EAAkBC,EAASC,EAAMC,EACnC,CAQO,SAASuC,EAAkBzC,EAASC,EAAO,OAAQC,EAAW,KAEnE,IAAIwC,EAAY,OAEH,YAATzC,EACFyC,EAAY,UACM,UAATzC,EACTyC,EAAY,QACM,YAATzC,IACTyC,EAAY,WAGd3C,EAAkBC,EAAS0C,EAAWxC,EACxC,2CAMO,SAA4ByC,GAAkB,GACnDxC,QAAQC,IAAI,uCAGRuC,GACFZ,YAAW,KACThC,EAAkB,2BAA4B,OAAQ,IAAK,GAC1D,IAEP,2GAGsB,oBAAX6C,SAETA,OAAOR,iBAAmBA,EAC1BQ,OAAOP,eAAiBA,EACxBO,OAAON,iBAAmBA,EAC1BM,OAAOL,cAAgBA,EACvBK,OAAOJ,UAAYA,EACnBI,OAAOH,kBAAoBA,EAC3BG,OAAO7C,kBAAoBA,EAG3BI,QAAQC,IAAI,6CAGZwC,OAAOC,UAAY,CAAC5C,EAAO,UACzB,MAAMD,EAAU,QAAQC,eAAiB,IAAI6C,MAAOC,uBAIpD,OAHA5C,QAAQC,IAAI,0BAA0BJ,KACtCD,EAAkBC,EAASC,GAC3BE,QAAQC,IAAI,yBAAyBJ,KAC9B,iBAAiB"}