import{u as z,d as p,A as R,y as C,a as J,b as G,q as K,c as s,E as X,e as Y,Q as Z,k as ee}from"./query-client-CTeJEwHK.js";/* empty css               */import{c as te,t as oe,W as re,s as ne,L as se}from"./WebRTCVideoCell-BwMQiWAO.js";import{s as ae,a as ie,b as ce,c as h,d as le,H as de,F as ue}from"./Footer-Cdt15UQl.js";function me(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}function ge(){const w=z({mutationFn:async e=>{const{streamName:t,...n}=e,o=localStorage.getItem("auth"),r=await fetch("/api/webrtc?src=".concat(encodeURIComponent(t)),{method:"POST",headers:{"Content-Type":"application/json",...o?{Authorization:"Basic "+o}:{}},body:JSON.stringify(n),signal:e.signal});if(!r.ok)throw new Error("Failed to send offer: ".concat(r.status," ").concat(r.statusText));const d=await r.text();try{return JSON.parse(d)}catch(u){throw console.error("Error parsing JSON for stream ".concat(t,":"),u),console.log("Raw response text: ".concat(d)),new Error("Failed to parse WebRTC answer: ".concat(u.message))}},onError:(e,t)=>{console.error("Error sending WebRTC offer for stream ".concat(t.streamName,":"),e)}}),[c,$]=p([]),[a,E]=p(()=>{const t=new URLSearchParams(window.location.search).get("layout");return t||sessionStorage.getItem("webrtc_layout")||"4"}),[i,v]=p(()=>{const t=new URLSearchParams(window.location.search).get("stream");return t||sessionStorage.getItem("webrtc_selected_stream")||""}),[k,M]=p(!1),[F,V]=p(!0),[l,x]=p(()=>{const t=new URLSearchParams(window.location.search).get("page");if(t)return Math.max(0,parseInt(t,10)-1);const n=sessionStorage.getItem("webrtc_current_page");return n?Math.max(0,parseInt(n,10)-1):0}),L=R(null),g=R({}),I=R({});C(()=>{ae(),ie(),ce();const e=()=>{console.log("Preserving URL parameters before page reload");const n=new URL(window.location);l>0?n.searchParams.set("page",l+1):n.searchParams.delete("page"),a!=="4"?n.searchParams.set("layout",a):n.searchParams.delete("layout"),a==="1"&&i?n.searchParams.set("stream",i):n.searchParams.delete("stream"),window.history.replaceState({},"",n),l>0?sessionStorage.setItem("webrtc_current_page",(l+1).toString()):sessionStorage.removeItem("webrtc_current_page"),a!=="4"?sessionStorage.setItem("webrtc_layout",a):sessionStorage.removeItem("webrtc_layout"),a==="1"&&i?sessionStorage.setItem("webrtc_selected_stream",i):sessionStorage.removeItem("webrtc_selected_stream")};window.addEventListener("beforeunload",e);const t=setInterval(()=>{Object.keys(g.current).forEach(n=>{const o=g.current[n];if(o&&(console.debug("WebRTC connection state for ".concat(n,": ").concat(o.connectionState,", ICE state: ").concat(o.iceConnectionState)),o.iceConnectionState==="failed"||o.iceConnectionState==="disconnected")){console.warn("WebRTC connection for ".concat(n," is in ").concat(o.iceConnectionState," state, will attempt reconnect")),S(n);const r=c.find(d=>d.name===n);r&&(console.log("Attempting to reconnect WebRTC for stream ".concat(n)),D(r))}})},3e4);return()=>{window.removeEventListener("beforeunload",e),clearInterval(t),q()}},[c,l,a,i]);const _=J(),{data:T,isLoading:P,error:W}=G("streams","/api/streams",{timeout:15e3,retries:2,retryDelay:1e3});C(()=>{V(P)},[P]),C(()=>{T&&Array.isArray(T)&&(async()=>{try{const t=await U(T);if(t.length>0){$(t);const o=new URLSearchParams(window.location.search).get("stream");o&&t.some(r=>r.name===o)?v(o):(!i||!t.some(r=>r.name===i))&&v(t[0].name)}else console.warn("No streams available for WebRTC view after filtering")}catch(t){console.error("Error processing streams:",t),h("Error processing streams: "+t.message)}})()},[T,i,_]);const N=R({layout:a,selectedStream:i,currentPage:l,streamsLength:c.length});C(()=>{const e=N.current;(e.layout!==a||e.selectedStream!==i||e.currentPage!==l||e.streamsLength!==c.length)&&(console.log("Layout, selectedStream, currentPage, or streams changed, updating video grid"),A(),N.current={layout:a,selectedStream:i,currentPage:l,streamsLength:c.length})},[a,i,c,l]),C(()=>{if(c.length===0)return;const e=setTimeout(()=>{console.log("Updating URL parameters");const t=new URL(window.location);l===0?t.searchParams.delete("page"):t.searchParams.set("page",l+1),a!=="4"?t.searchParams.set("layout",a):t.searchParams.delete("layout"),a==="1"&&i?t.searchParams.set("stream",i):t.searchParams.delete("stream"),window.history.replaceState({},"",t),l>0?sessionStorage.setItem("webrtc_current_page",(l+1).toString()):sessionStorage.removeItem("webrtc_current_page"),a!=="4"?sessionStorage.setItem("webrtc_layout",a):sessionStorage.removeItem("webrtc_layout"),a==="1"&&i?sessionStorage.setItem("webrtc_selected_stream",i):sessionStorage.removeItem("webrtc_selected_stream")},300);return()=>clearTimeout(e)},[l,a,i,c.length]);const U=async e=>{try{if(!e||!Array.isArray(e))return console.warn("No streams data provided to filter"),[];const t=e.map(async r=>{try{const d=r.id||r.name;return await _.fetchQuery({queryKey:["stream-details",d],queryFn:async()=>{const b=await fetch("/api/streams/".concat(encodeURIComponent(d)));if(!b.ok)throw new Error("Failed to load details for stream ".concat(r.name));return b.json()},staleTime:3e4})}catch(d){return console.error("Error loading details for stream ".concat(r.name,":"),d),r}}),n=await Promise.all(t);console.log("Loaded detailed streams for WebRTC view:",n);const o=n.filter(r=>r.is_deleted?(console.log("Stream ".concat(r.name," is soft deleted, filtering out")),!1):r.enabled?r.streaming_enabled?!0:(console.log("Stream ".concat(r.name," is not configured for streaming, filtering out")),!1):(console.log("Stream ".concat(r.name," is inactive, filtering out")),!1));return console.log("Filtered streams for WebRTC view:",o),o||[]}catch(t){return console.error("Error filtering streams for WebRTC view:",t),h("Error processing streams: "+t.message),[]}},y=()=>{switch(a){case"1":return 1;case"2":return 2;case"4":return 4;case"6":return 6;case"9":return 9;case"16":return 16;default:return 4}},j=()=>{let e=c;if(a==="1"&&i)e=c.filter(t=>t.name===i);else{const t=y(),n=Math.ceil(c.length/t);if(l>=n&&n>0)return[];const o=l*t,r=Math.min(o+t,c.length);e=c.slice(o,r)}return e},A=()=>{if(!L.current)return;let e=j();if(e.length===0&&c.length>0){const o=y(),r=Math.ceil(c.length/o);if(l>=r){x(Math.max(0,r-1));return}}const t=e.map(o=>o.name);console.log("Updating video grid for page ".concat(l+1,", showing streams:"),t);const n=Object.keys(g.current).filter(o=>!t.includes(o));n.length>0&&(console.log("Cleaning up ".concat(n.length," WebRTC connections that are no longer visible:"),n),n.forEach(o=>{S(o)}))},D=(e,t,n,o={})=>{if(!e||!t){console.error("Cannot initialize WebRTC player: missing stream or video element");return}g.current[e.name]&&(console.log("WebRTC connection for stream ".concat(e.name," already exists, cleaning up first")),S(e.name)),console.log("Initializing WebRTC player for stream ".concat(e.name));const r=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}],iceTransportPolicy:"all",bundlePolicy:"balanced",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});g.current[e.name]=r,r.ontrack=f=>{console.log("Track received for stream ".concat(e.name,":"),f),f.track.kind==="video"&&(t.srcObject=f.streams[0],t.onloadeddata=()=>{console.log("Video data loaded for stream ".concat(e.name)),o.onLoadedData&&o.onLoadedData()},t.onplaying=()=>{console.log("Video playing for stream ".concat(e.name)),o.onPlaying&&o.onPlaying(),e.detection_based_recording&&e.detection_model&&n?(console.log("Starting detection polling for stream ".concat(e.name," now that video is playing")),ne(e.name,n,t,I.current)):console.log("Detection not enabled for stream ".concat(e.name))},t.onerror=Q=>{console.error("Video error for stream ".concat(e.name,":"),Q),o.onError&&o.onError("Video playback error")})},r.onicecandidate=f=>{f.candidate&&console.log("ICE candidate for stream ".concat(e.name,":"),f.candidate)},r.oniceconnectionstatechange=()=>{console.log("ICE connection state for stream ".concat(e.name,":"),r.iceConnectionState),r.iceConnectionState==="failed"?(console.warn("ICE failed for stream ".concat(e.name)),o.onError&&o.onError("WebRTC ICE connection failed")):r.iceConnectionState==="disconnected"&&console.warn("ICE disconnected for stream ".concat(e.name))},r.onconnectionstatechange=()=>{console.log("Connection state changed for stream ".concat(e.name,":"),r.connectionState),r.connectionState==="failed"&&(console.warn("Connection failed for stream ".concat(e.name)),o.onError&&o.onError("WebRTC connection failed"))},r.addTransceiver("video",{direction:"recvonly"}),r.addTransceiver("audio",{direction:"recvonly"});const d={offerToReceiveAudio:!0,offerToReceiveVideo:!0},u=setTimeout(()=>{console.warn("WebRTC setup timed out for stream ".concat(e.name)),o.onError&&o.onError("WebRTC setup timed out"),g.current[e.name]&&S(e.name)},3e4),b=setTimeout(()=>{g.current[e.name]&&(!t.srcObject||t.readyState<2)&&(console.warn("Video playback timed out for stream ".concat(e.name)),o.onError&&o.onError("Video playback timed out"))},2e4),m=()=>g.current[e.name]===r;r.createOffer(d).then(f=>{if(!m())throw new Error("Connection was cleaned up during offer creation");return console.log("Created offer for stream ".concat(e.name)),r.setLocalDescription(f)}).then(()=>{if(!m())throw new Error("Connection was cleaned up after setting local description");return console.log("Set local description for stream ".concat(e.name)),O(e.name,r.localDescription)}).then(f=>{if(!m())throw new Error("Connection was cleaned up after receiving answer");return console.log("Received answer for stream ".concat(e.name)),r.setRemoteDescription(new RTCSessionDescription(f))}).then(()=>{if(!m())throw new Error("Connection was cleaned up after setting remote description");console.log("Set remote description for stream ".concat(e.name)),clearTimeout(u),clearTimeout(b)}).catch(f=>{clearTimeout(u),clearTimeout(b),m()?(console.error("Error setting up WebRTC for stream ".concat(e.name,":"),f),o.onError&&o.onError(f.message)):console.log("WebRTC setup for stream ".concat(e.name," was cancelled: ").concat(f.message))}),t.addEventListener("playing",()=>{clearTimeout(b)},{once:!0})},O=K(async(e,t)=>{try{const n={type:t.type,sdp:t.sdp};console.log("Sending formatted offer for stream ".concat(e));const o=new AbortController,r=o.signal;if(g.current[e])g.current[e].abortController=o;else return console.log("Connection for stream ".concat(e," no longer exists, aborting offer")),o.abort(),Promise.reject(new Error("Connection no longer exists"));const d=await w.mutateAsync({...n,streamName:e,signal:r});return g.current[e]?d:(console.log("Connection for stream ".concat(e," was cleaned up during offer, rejecting result")),Promise.reject(new Error("Connection was cleaned up during offer")))}catch(n){if(n.name==="AbortError")return console.log("WebRTC offer request for stream ".concat(e," was aborted")),Promise.reject(new Error("Request aborted"));throw console.error("Error sending offer for stream ".concat(e,":"),n),n}},[w]),S=e=>{if(console.log("Cleaning up WebRTC player for stream ".concat(e)),g.current[e]){const t=g.current[e];if(t.abortController){console.log("Aborting pending WebRTC requests for stream ".concat(e));try{t.abortController.abort()}catch(n){console.error("Error aborting WebRTC request for stream ".concat(e,":"),n)}}t.onicecandidate&&(t.onicecandidate=null),t.oniceconnectionstatechange&&(t.oniceconnectionstatechange=null),t.onconnectionstatechange&&(t.onconnectionstatechange=null),t.ontrack&&(t.ontrack=null),t.close(),delete g.current[e],console.log("Closed WebRTC connection for stream ".concat(e))}te(e,I.current)},q=()=>{console.log("Stopping all WebRTC streams"),Object.keys(g.current).forEach(e=>{S(e)}),console.log("All WebRTC streams stopped")},B=(e,t)=>{t&&(t.preventDefault(),t.stopPropagation()),console.log("Taking snapshot of stream with ID: ".concat(e));let n=e;const o=c.find(m=>m.id===e||m.name===e);if(o&&(n=o.name),!n){console.error("Stream name not found for snapshot"),h("Cannot take snapshot: Stream not identified");return}const r="video-".concat(n.replace(/\s+/g,"-")),d=document.getElementById(r);if(!d){console.error("Video element not found for stream:",n),h("Cannot take snapshot: Video element not found");return}const u=document.createElement("canvas");if(u.width=d.videoWidth,u.height=d.videoHeight,u.style.pointerEvents="none",u.width===0||u.height===0){console.error("Invalid video dimensions:",u.width,u.height),h("Cannot take snapshot: Video not loaded or has invalid dimensions");return}u.getContext("2d").drawImage(d,0,0,u.width,u.height);try{window.__snapshotCanvas=u;const m=new Date().toISOString().replace(/[:.]/g,"-"),f="snapshot-".concat(n.replace(/\s+/g,"-"),"-").concat(m,".jpg");window.__snapshotFileName=f,le(u.toDataURL("image/jpeg",.95),"Snapshot: ".concat(n)),h("Snapshot taken successfully")}catch(m){console.error("Error creating snapshot:",m),h("Failed to create snapshot: "+m.message)}},H=(e,t)=>{if(t&&(t.preventDefault(),t.stopPropagation()),!e){console.error("Stream name not provided for fullscreen toggle");return}console.log("Toggling fullscreen for stream: ".concat(e));const n="video-".concat(e.replace(/\s+/g,"-")),o=document.getElementById(n),r=o?o.closest(".video-cell"):null;if(!r){console.error("Stream not found:",e);return}document.fullscreenElement?(console.log("Exiting fullscreen mode"),document.exitFullscreen()):(console.log("Entering fullscreen mode for video cell"),r.requestFullscreen().catch(d=>{console.error("Error attempting to enable fullscreen: ".concat(d.message)),h("Could not enable fullscreen mode: ".concat(d.message))}))};return s("section",{id:"live-page",className:"page ".concat(k?"fullscreen-mode":""),children:[s("div",{className:"page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow",children:[s("div",{className:"flex items-center space-x-2",children:[s("h2",{className:"text-xl font-bold mr-4",children:"Live View"}),s("div",{className:"flex space-x-2",children:s("button",{id:"hls-toggle-btn",className:"px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800",onClick:()=>window.location.href="/hls.html",children:"HLS View"})})]}),s("div",{className:"controls flex items-center space-x-2",children:[s("div",{className:"flex items-center",children:[s("label",{for:"layout-selector",className:"mr-2",children:"Layout:"}),s("select",{id:"layout-selector",className:"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600",value:a,onChange:e=>{const t=e.target.value;E(t),x(0)},children:[s("option",{value:"1",children:"1 Stream"}),s("option",{value:"2",children:"2 Streams"}),s("option",{value:"4",selected:!0,children:"4 Streams"}),s("option",{value:"6",children:"6 Streams"}),s("option",{value:"9",children:"9 Streams"}),s("option",{value:"16",children:"16 Streams"})]})]}),a==="1"&&s("div",{className:"flex items-center",children:[s("label",{for:"stream-selector",className:"mr-2",children:"Stream:"}),s("select",{id:"stream-selector",className:"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600",value:i,onChange:e=>{const t=e.target.value;v(t)},children:c.map(e=>s("option",{value:e.name,children:e.name},e.name))})]}),s("button",{id:"fullscreen-btn",className:"p-2 rounded-full bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none",onClick:()=>oe(k,M),title:"Toggle Fullscreen",children:s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",children:s("path",{d:"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"})})})]})]}),s("div",{className:"flex flex-col space-y-4",children:[s("div",{id:"video-grid",className:"video-container layout-".concat(a),ref:L,children:P?s("div",{className:"flex justify-center items-center col-span-full row-span-full h-64 w-full",children:s("div",{className:"flex flex-col items-center justify-center py-8",children:[s("div",{className:"inline-block animate-spin rounded-full border-4 border-gray-300 dark:border-gray-600 border-t-blue-600 dark:border-t-blue-500 w-16 h-16"}),s("p",{className:"mt-4 text-gray-700 dark:text-gray-300",children:"Loading streams..."})]})}):F&&!P?s("div",{className:"flex justify-center items-center col-span-full row-span-full h-64 w-full",children:s("div",{className:"flex flex-col items-center justify-center py-8",children:[s("div",{className:"inline-block animate-spin rounded-full border-4 border-gray-300 dark:border-gray-600 border-t-blue-600 dark:border-t-blue-500 w-16 h-16"}),s("p",{className:"mt-4 text-gray-700 dark:text-gray-300",children:"Loading streams..."})]})}):W?s("div",{className:"placeholder flex flex-col justify-center items-center col-span-full row-span-full bg-white dark:bg-gray-800 rounded-lg shadow-md text-center p-8",children:[s("p",{className:"mb-6 text-gray-600 dark:text-gray-300 text-lg",children:["Error loading streams: ",W.message]}),s("button",{onClick:()=>window.location.reload(),className:"btn-primary px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors",children:"Retry"})]}):c.length===0?s("div",{className:"placeholder flex flex-col justify-center items-center col-span-full row-span-full bg-white dark:bg-gray-800 rounded-lg shadow-md text-center p-8",children:[s("p",{className:"mb-6 text-gray-600 dark:text-gray-300 text-lg",children:"No streams configured"}),s("a",{href:"streams.html",className:"btn-primary px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors",children:"Configure Streams"})]}):j().map(e=>s(re,{stream:e,onTakeSnapshot:B,onToggleFullscreen:H,webrtcConnections:g,detectionIntervals:I,initializeWebRTCPlayer:D,cleanupWebRTCPlayer:S},e.name))}),a!=="1"&&c.length>y()?s("div",{className:"pagination-controls flex justify-center items-center space-x-4 mt-4",children:[s("button",{className:"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",onClick:()=>{console.log("Changing to previous page"),x(Math.max(0,l-1));const e=new URL(window.location),t=l-1;t>0?(e.searchParams.set("page",t+1),sessionStorage.setItem("webrtc_current_page",(t+1).toString())):(e.searchParams.delete("page"),sessionStorage.removeItem("webrtc_current_page")),window.history.replaceState({},"",e)},disabled:l===0,children:"Previous"}),s("span",{className:"text-gray-700 dark:text-gray-300",children:["Page ",l+1," of ",Math.ceil(c.length/y())]}),s("button",{className:"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",onClick:()=>{console.log("Changing to next page");const e=Math.min(Math.ceil(c.length/y())-1,l+1);x(e);const t=new URL(window.location);t.searchParams.set("page",e+1),sessionStorage.setItem("webrtc_current_page",(e+1).toString()),window.history.replaceState({},"",t)},disabled:l>=Math.ceil(c.length/y())-1,children:"Next"})]}):null]})]})}function fe(){const[w,c]=p(!1),[$,a]=p(!0);return C(()=>{async function E(){try{const i=await fetch("/api/settings");if(!i.ok){console.error("Failed to fetch settings:",i.status,i.statusText),a(!1);return}(await i.json()).webrtc_disabled?(console.log("WebRTC is disabled, using HLS view"),c(!0)):(console.log("WebRTC is enabled, using WebRTC view"),c(!1))}catch(i){console.error("Error checking WebRTC status:",i)}finally{a(!1)}}E()},[]),$?s("div",{className:"loading",children:"Loading..."}):s(ee,{children:[s(de,{}),w?s(se,{isWebRTCDisabled:!0}):s(ge,{}),s(ue,{})]})}document.addEventListener("DOMContentLoaded",()=>{const w=document.getElementById("main-content");w&&X(s(Z,{client:Y,children:s(fe,{})}),w)});export{me as __vite_legacy_guard};
//# sourceMappingURL=index-DY9Gf1KI.js.map
