System.register([],(function(e,t){"use strict";return{execute:function(){async function t(e,t={}){const{timeout:o=3e4,retries:r=1,retryDelay:n=1e3,signal:c,...s}=t;console.log(`enhancedFetch: ${s.method||"GET"} ${e}`),console.debug("enhancedFetch options:",{timeout:o,retries:r,retryDelay:n,...s});const a=new AbortController;let l;o&&(l=setTimeout((()=>{console.warn(`enhancedFetch: Timeout reached for ${e}, aborting request`),a.abort()}),o));const i=c?function(...e){const t=new AbortController,o=()=>{t.abort(),e.forEach((e=>{e.removeEventListener("abort",o)}))};return e.forEach((e=>{e.aborted?o():e.addEventListener("abort",o)})),t.signal}(c,a.signal):a.signal,h={...s,signal:i};let u,f=0;for(;f<=r;)try{console.debug(`enhancedFetch: Attempt ${f+1}/${r+1} for ${e}`);const t=await fetch(e,h);if(l&&clearTimeout(l),console.log(`enhancedFetch response: ${t.status} ${t.statusText} for ${e}`),!t.ok)throw new Error(`HTTP error ${t.status}: ${t.statusText}`);return t}catch(d){if(u=d,l&&clearTimeout(l),console.error(`enhancedFetch error (attempt ${f+1}/${r+1}):`,d),"AbortError"===d.name)throw c&&c.aborted?(console.warn(`enhancedFetch: Request was cancelled by external signal for ${e}`),new Error("Request was cancelled")):(console.warn(`enhancedFetch: Request timed out for ${e}`),new Error("Request timed out"));if(f>=r){console.error(`enhancedFetch: All ${r+1} attempts failed for ${e}`);break}if(console.log(`enhancedFetch: Waiting ${n}ms before retry ${f+1} for ${e}`),await new Promise((e=>setTimeout(e,n))),o){a.abort();const e=new AbortController;l=setTimeout((()=>{e.abort()}),o)}f++}throw u}e({c:function(){const e=new AbortController;return{signal:e.signal,abort:()=>e.abort(),isAborted:()=>e.signal.aborted}},e:t,f:async function(e,o={}){console.log(`fetchJSON: ${o.method||"GET"} ${e}`);try{const r=await t(e,o);console.log(`fetchJSON: Parsing JSON response from ${e}`);const n=await r.json();return console.log(`fetchJSON: Successfully parsed JSON from ${e}`),n}catch(r){throw console.error(`fetchJSON: Error fetching or parsing JSON from ${e}:`,r),r}}})}}}));
//# sourceMappingURL=fetch-utils-legacy-DOz1-Xee.js.map
