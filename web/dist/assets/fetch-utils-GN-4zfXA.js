async function $(e,n={}){const{timeout:t=3e4,retries:o=1,retryDelay:i=1e3,signal:c,...h}=n;console.log("enhancedFetch: ".concat(h.method||"GET"," ").concat(e)),console.debug("enhancedFetch options:",{timeout:t,retries:o,retryDelay:i,...h});const l=new AbortController;let a;t&&(a=setTimeout(()=>{console.warn("enhancedFetch: Timeout reached for ".concat(e,", aborting request")),l.abort()},t));const m=c?w(c,l.signal):l.signal,b={...h,signal:m};let d,s=0;for(;s<=o;)try{console.debug("enhancedFetch: Attempt ".concat(s+1,"/").concat(o+1," for ").concat(e));const r=await fetch(e,b);if(a&&clearTimeout(a),console.log("enhancedFetch response: ".concat(r.status," ").concat(r.statusText," for ").concat(e)),!r.ok)throw new Error("HTTP error ".concat(r.status,": ").concat(r.statusText));return r}catch(r){if(d=r,a&&clearTimeout(a),console.error("enhancedFetch error (attempt ".concat(s+1,"/").concat(o+1,"):"),r),r.name==="AbortError")throw c&&c.aborted?(console.warn("enhancedFetch: Request was cancelled by external signal for ".concat(e)),new Error("Request was cancelled")):(console.warn("enhancedFetch: Request timed out for ".concat(e)),new Error("Request timed out"));if(s>=o){console.error("enhancedFetch: All ".concat(o+1," attempts failed for ").concat(e));break}if(console.log("enhancedFetch: Waiting ".concat(i,"ms before retry ").concat(s+1," for ").concat(e)),await new Promise(f=>setTimeout(f,i)),t){l.abort();const f=new AbortController;a=setTimeout(()=>{f.abort()},t)}s++}throw d}function w(...e){const n=new AbortController,t=()=>{n.abort(),e.forEach(o=>{o.removeEventListener("abort",t)})};return e.forEach(o=>{o.aborted?t():o.addEventListener("abort",t)}),n.signal}function g(){const e=new AbortController;return{signal:e.signal,abort:()=>e.abort(),isAborted:()=>e.signal.aborted}}async function u(e,n={}){console.log("fetchJSON: ".concat(n.method||"GET"," ").concat(e));try{const t=await $(e,n);console.log("fetchJSON: Parsing JSON response from ".concat(e));const o=await t.json();return console.log("fetchJSON: Successfully parsed JSON from ".concat(e)),o}catch(t){throw console.error("fetchJSON: Error fetching or parsing JSON from ".concat(e,":"),t),t}}export{g as c,$ as e,u as f};
//# sourceMappingURL=fetch-utils-GN-4zfXA.js.map
