{"version":3,"file":"UI-legacy-BurBBZkY.js","sources":["../../js/components/preact/UI.jsx"],"sourcesContent":["/**\n * UI utility components for LightNVR\n * JSX version of UI components\n */\n\nimport { h, createContext } from 'preact';\nimport { useState, useEffect, useRef, useCallback } from 'preact/hooks';\nimport { createPortal } from 'preact/compat';\nimport { showStatusMessage } from './ToastContainer.jsx';\nimport { useSnapshotManager } from './SnapshotManager.jsx';\n\n// Create contexts for modals\nexport const ModalContext = createContext({\n  showVideoModal: () => {},\n  showSnapshotPreview: () => {}\n});\n\n/**\n * DeleteConfirmationModal component for Preact\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {Function} props.onConfirm - Function to call when delete is confirmed\n * @param {string} props.mode - Delete mode ('selected' or 'all')\n * @param {number} props.count - Number of items selected (for 'selected' mode)\n * @returns {JSX.Element} DeleteConfirmationModal component\n */\nexport function DeleteConfirmationModal(props) {\n  const { isOpen, onClose, onConfirm, mode, count } = props;\n\n  if (!isOpen) return null;\n\n  // Determine title and message based on mode\n  let title = 'Confirm Delete';\n  let message = 'Are you sure you want to delete this item?';\n\n  if (mode === 'selected') {\n    title = 'Delete Selected Recordings';\n    message = `Are you sure you want to delete ${count} selected recording${count !== 1 ? 's' : ''}?`;\n  } else if (mode === 'all') {\n    title = 'Delete All Filtered Recordings';\n    message = 'Are you sure you want to delete all recordings matching the current filters? This action cannot be undone.';\n  }\n\n  // Handle escape key\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n      onKeyDown={handleKeyDown}\n    >\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 max-w-md mx-auto\">\n        <div class=\"mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">{title}</h3>\n        </div>\n\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\">{message}</p>\n\n        <div class=\"flex justify-end space-x-3\">\n          <button\n            class=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n            onClick={onConfirm}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * SnapshotPreviewModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.imageData - Image data URL\n * @param {string} props.streamName - Stream name\n * @returns {JSX.Element} SnapshotPreviewModal component\n */\nexport function SnapshotPreviewModal({ isOpen, onClose, imageData, streamName, onDownload }) {\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    // Handle escape key\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Animate in\n    if (isOpen && modalRef.current) {\n      setTimeout(() => {\n        const modalContent = modalRef.current.querySelector('.modal-content');\n        if (modalContent) {\n          modalContent.classList.remove('scale-95', 'opacity-0');\n          modalContent.classList.add('scale-100', 'opacity-100');\n        }\n      }, 10);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"snapshot-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className=\"modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out scale-95 opacity-0\" style={{ width: '90%' }}>\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"snapshot-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {streamName ? `Snapshot: ${streamName}` : 'Snapshot'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            âœ•\n          </button>\n        </div>\n        <div className=\"p-4 overflow-auto flex-grow\">\n          <img\n            id=\"snapshot-preview-image\"\n            className=\"max-w-full max-h-[70vh] mx-auto\"\n            src={imageData}\n            alt=\"Snapshot\"\n          />\n        </div>\n        <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-2\">\n          <button\n            id=\"snapshot-download-btn\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n            onClick={onDownload}\n          >\n            Download\n          </button>\n          <button\n            id=\"snapshot-close-btn\"\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * VideoModal component\n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is open\n * @param {Function} props.onClose - Function to call when the modal is closed\n * @param {string} props.videoUrl - URL of the video to display\n * @param {string} props.title - Title for the video\n * @param {string} props.downloadUrl - Optional URL for downloading the video\n * @returns {JSX.Element} VideoModal component\n */\nexport function VideoModal({ isOpen, onClose, videoUrl, title, downloadUrl }) {\n  const [detectionOverlayEnabled, setDetectionOverlayEnabled] = useState(false);\n  const [timeWindow, setTimeWindow] = useState(2);\n  const [detections, setDetections] = useState([]);\n  const [recordingData, setRecordingData] = useState(null);\n  const [detectionStatus, setDetectionStatus] = useState('No detections loaded');\n  const [currentSpeed, setCurrentSpeed] = useState(1.0);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Handle escape key\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // Fetch recording data and detections\n  useEffect(() => {\n    if (!isOpen || !videoUrl) return;\n\n    // Extract recording ID from URL\n    const recordingIdMatch = videoUrl.match(/\\/play\\/(\\d+)/);\n    if (!recordingIdMatch || !recordingIdMatch[1]) return;\n\n    const recordingId = parseInt(recordingIdMatch[1], 10);\n\n    // Fetch recording data\n    const fetchRecordingData = async () => {\n      try {\n        const response = await fetch(`/api/recordings/${recordingId}`);\n        if (!response.ok) throw new Error('Failed to fetch recording data');\n\n        const data = await response.json();\n        setRecordingData(data);\n\n        // If we have recording data, fetch detections\n        if (data && data.stream && data.start_time && data.end_time) {\n          const startTime = Math.floor(new Date(data.start_time).getTime() / 1000);\n          const endTime = Math.floor(new Date(data.end_time).getTime() / 1000);\n\n          const detectionsResponse = await fetch(\n            `/api/detection/results/${data.stream}?start=${startTime}&end=${endTime}`\n          );\n\n          if (!detectionsResponse.ok) throw new Error('Failed to fetch detections');\n\n          const detectionsData = await detectionsResponse.json();\n          const fetchedDetections = detectionsData.detections || [];\n          setDetections(fetchedDetections);\n\n          if (fetchedDetections.length > 0) {\n            setDetectionStatus(`${fetchedDetections.length} detection${fetchedDetections.length !== 1 ? 's' : ''} available`);\n          } else {\n            setDetectionStatus('No detections found for this recording');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setDetectionStatus('Error loading detections');\n      }\n    };\n\n    fetchRecordingData();\n  }, [isOpen, videoUrl]);\n\n  // Draw detections on canvas\n  const drawDetections = useCallback(() => {\n    if (!detectionOverlayEnabled || !videoRef.current || !canvasRef.current || detections.length === 0) {\n      return;\n    }\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Get video dimensions\n    const videoWidth = video.videoWidth;\n    const videoHeight = video.videoHeight;\n\n    if (videoWidth === 0 || videoHeight === 0) {\n      // Video dimensions not available yet, try again later\n      requestAnimationFrame(drawDetections);\n      return;\n    }\n\n    // Set canvas dimensions to match video\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    // Get canvas context\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Get current video time in seconds\n    const currentTime = video.currentTime;\n\n    // Calculate the timestamp for the current video position\n    if (!recordingData || !recordingData.start_time) {\n      return;\n    }\n\n    // Convert recording start time to seconds\n    const recordingStartTime = Math.floor(new Date(recordingData.start_time).getTime() / 1000);\n\n    // Calculate current timestamp in the video\n    const currentTimestamp = recordingStartTime + Math.floor(currentTime);\n\n    // Filter detections to only show those within the time window\n    const visibleDetections = detections.filter(detection => {\n      if (!detection.timestamp) return false;\n\n      // Check if detection is within the time window\n      return Math.abs(detection.timestamp - currentTimestamp) <= timeWindow;\n    });\n\n    // Update status with count of visible detections\n    if (visibleDetections.length > 0) {\n      setDetectionStatus(`Showing ${visibleDetections.length} detection${visibleDetections.length !== 1 ? 's' : ''} at current time`);\n    } else {\n      setDetectionStatus(`No detections at current time (${detections.length} total)`);\n    }\n\n    // Draw each visible detection\n    visibleDetections.forEach(detection => {\n      // Calculate coordinates based on relative positions\n      const x = detection.x * videoWidth;\n      const y = detection.y * videoHeight;\n      const width = detection.width * videoWidth;\n      const height = detection.height * videoHeight;\n\n      // Draw bounding box\n      ctx.strokeStyle = 'rgba(0, 255, 0, 0.8)';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, width, height);\n\n      // Draw label background\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      const labelText = `${detection.label} (${Math.round(detection.confidence * 100)}%)`;\n      const labelWidth = ctx.measureText(labelText).width + 10;\n      ctx.fillRect(x, y - 20, labelWidth, 20);\n\n      // Draw label text\n      ctx.fillStyle = 'white';\n      ctx.font = '12px Arial';\n      ctx.fillText(labelText, x + 5, y - 5);\n    });\n\n    // Request next frame if video is playing\n    if (!video.paused && !video.ended) {\n      requestAnimationFrame(drawDetections);\n    }\n  }, [detectionOverlayEnabled, detections, recordingData, timeWindow]);\n\n  // Set up video event listeners\n  useEffect(() => {\n    if (!isOpen || !videoRef.current) return;\n\n    const video = videoRef.current;\n\n    const handlePlay = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleSeeked = () => {\n      if (detectionOverlayEnabled) {\n        drawDetections();\n      }\n    };\n\n    const handleTimeUpdate = () => {\n      if (detectionOverlayEnabled) {\n        // Don't redraw on every timeupdate as it's too frequent\n        // Instead, redraw every 0.5 seconds\n        const currentTime = Math.floor(video.currentTime * 2) / 2;\n        if (video.lastDrawnTime !== currentTime) {\n          video.lastDrawnTime = currentTime;\n          drawDetections();\n        }\n      }\n    };\n\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('seeked', handleSeeked);\n    video.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('seeked', handleSeeked);\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [isOpen, detectionOverlayEnabled, drawDetections]);\n\n  // Update detection overlay when enabled/disabled\n  useEffect(() => {\n    if (detectionOverlayEnabled) {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'block';\n      }\n      drawDetections();\n    } else {\n      if (canvasRef.current) {\n        canvasRef.current.style.display = 'none';\n      }\n    }\n  }, [detectionOverlayEnabled, drawDetections]);\n\n  // Handle background click\n  const handleBackgroundClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Handle speed change\n  const handleSpeedChange = (speed) => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = speed;\n      setCurrentSpeed(speed);\n    }\n  };\n\n  // Handle time window change\n  const handleTimeWindowChange = (e) => {\n    const newTimeWindow = parseInt(e.target.value, 10);\n    setTimeWindow(newTimeWindow);\n    if (detectionOverlayEnabled) {\n      drawDetections();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      ref={modalRef}\n      id=\"video-preview-modal\"\n      className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n      onClick={handleBackgroundClick}\n    >\n      <div className=\"modal-content bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl max-h-[90vh] flex flex-col transform transition-all duration-300 ease-out scale-95 opacity-0 w-full md:w-[90%]\">\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\">\n          <h3 id=\"video-preview-title\" className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            {title || 'Video'}\n          </h3>\n          <button\n            className=\"close text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            onClick={onClose}\n          >\n            âœ•\n          </button>\n        </div>\n\n        <div className=\"p-4 flex-grow\">\n          <div className=\"relative\">\n            <video\n              ref={videoRef}\n              className=\"w-full h-auto max-w-full object-contain mx-auto\"\n              src={videoUrl}\n              controls\n              autoPlay\n            />\n            <canvas\n              ref={canvasRef}\n              className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        <div id=\"recordings-controls\" className=\"mx-4 mb-4 p-4 border border-green-500 rounded-lg bg-white dark:bg-gray-700 shadow-md relative z-10\">\n          <h3 className=\"text-lg font-bold text-center mb-4 text-gray-800 dark:text-white\">\n            PLAYBACK CONTROLS\n          </h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-2\">\n            {/* Speed controls section */}\n            <div className=\"border-b pb-4 md:border-b-0 md:border-r md:pr-4 md:pb-0\">\n              <h4 className=\"font-bold text-center mb-3 text-gray-700 dark:text-gray-300\">\n                Playback Speed\n              </h4>\n\n              <div className=\"flex flex-wrap justify-center gap-2\">\n                {[0.25, 0.5, 1.0, 1.5, 2.0, 4.0].map(speed => (\n                  <button\n                    key={speed}\n                    className={`speed-btn px-3 py-2 rounded-full ${\n                      speed === currentSpeed\n                        ? 'bg-green-500 text-white'\n                        : 'bg-gray-200 hover:bg-gray-300'\n                    } text-sm font-medium transition-all focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50`}\n                    data-speed={speed}\n                    onClick={() => handleSpeedChange(speed)}\n                  >\n                    {speed === 1.0 ? '1Ã— (Normal)' : `${speed}Ã—`}\n                  </button>\n                ))}\n              </div>\n\n              <div id=\"current-speed-indicator\" className=\"mt-3 text-center font-medium text-green-600 dark:text-green-400 text-sm\">\n                Current Speed: {currentSpeed}Ã— {currentSpeed === 1.0 ? '(Normal)' : ''}\n              </div>\n            </div>\n\n            {/* Detection overlay section */}\n            <div className=\"pt-4 md:pt-0 md:pl-4\">\n              <h4 className=\"font-bold text-center mb-2 text-gray-700 dark:text-gray-300\">\n                Detection Overlays\n              </h4>\n\n              <div className=\"flex flex-col items-center gap-2\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"detection-overlay-checkbox\"\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                    checked={detectionOverlayEnabled}\n                    onChange={(e) => setDetectionOverlayEnabled(e.target.checked)}\n                    disabled={detections.length === 0}\n                  />\n                  <label\n                    htmlFor=\"detection-overlay-checkbox\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  >\n                    Show Detection Overlays\n                  </label>\n                </div>\n\n                <div className=\"flex flex-col w-full mt-2 mb-2\">\n                  <label\n                    htmlFor=\"detection-sensitivity-slider\"\n                    className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                  >\n                    Detection Sensitivity\n                  </label>\n\n                  <input\n                    type=\"range\"\n                    id=\"detection-sensitivity-slider\"\n                    className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                    min=\"1\"\n                    max=\"10\"\n                    step=\"1\"\n                    value={timeWindow}\n                    onChange={handleTimeWindowChange}\n                  />\n\n                  <div id=\"detection-sensitivity-value\" className=\"text-xs text-gray-600 dark:text-gray-400 text-center mb-1\">\n                    Time Window: {timeWindow} second{timeWindow !== 1 ? 's' : ''}\n                  </div>\n                </div>\n\n                <div id=\"detection-status-indicator\" className={`text-center text-sm ${\n                  detections.length > 0\n                    ? 'font-medium text-green-600 dark:text-green-400'\n                    : 'text-gray-600 dark:text-gray-400'\n                }`}>\n                  {detectionStatus}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Download button */}\n          {downloadUrl && (\n            <div className=\"flex justify-center mt-4 pt-2 border-t border-gray-200 dark:border-gray-700\">\n              <a\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors flex items-center text-sm\"\n                href={downloadUrl}\n                download={`video-${Date.now()}.mp4`}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                </svg>\n                Download Video\n              </a>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-2\"></div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n\n/**\n * ModalProvider component\n * Provides modal context and renders modal components\n */\nexport function ModalProvider({ children }) {\n  const [snapshotModal, setSnapshotModal] = useState({\n    isOpen: false,\n    imageData: '',\n    streamName: '',\n  });\n\n  const [videoModal, setVideoModal] = useState({\n    isOpen: false,\n    videoUrl: '',\n    title: '',\n    downloadUrl: '',\n  });\n\n  // Show snapshot preview\n  const showSnapshotPreview = useCallback((imageData, streamName) => {\n    setSnapshotModal({\n      isOpen: true,\n      imageData,\n      streamName,\n    });\n  }, []);\n\n  // Show video modal\n  const showVideoModal = useCallback((videoUrl, title, downloadUrl) => {\n    setVideoModal({\n      isOpen: true,\n      videoUrl,\n      title,\n      downloadUrl,\n    });\n  }, []);\n\n  // Use the snapshot manager hook for download functionality\n  const { downloadSnapshot } = useSnapshotManager();\n\n  // Handle snapshot download\n  const handleSnapshotDownload = useCallback(() => {\n    try {\n      const { imageData, streamName } = snapshotModal;\n\n      if (!imageData) {\n        console.error('No image data available for download');\n        showStatusMessage('Download failed: No image data available', 'error', 5000);\n        return;\n      }\n\n      // Use the downloadSnapshot function from the hook if available\n      if (downloadSnapshot) {\n        downloadSnapshot();\n        return;\n      }\n\n      // Fallback to the old implementation\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n      const link = document.createElement('a');\n      link.href = imageData;\n      link.download = fileName;\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      setTimeout(() => {\n        document.body.removeChild(link);\n      }, 100);\n\n      showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n    } catch (error) {\n      console.error('Error in snapshot download process:', error);\n      showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n    }\n  }, [snapshotModal, downloadSnapshot]);\n\n  // Close snapshot modal\n  const closeSnapshotModal = useCallback(() => {\n    setSnapshotModal(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  // Close video modal\n  const closeVideoModal = useCallback(() => {\n    setVideoModal(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  // Create context value\n  const contextValue = {\n    showSnapshotPreview,\n    showVideoModal,\n  };\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      {children}\n\n      {/* Render modals */}\n      <SnapshotPreviewModal\n        isOpen={snapshotModal.isOpen}\n        onClose={closeSnapshotModal}\n        imageData={snapshotModal.imageData}\n        streamName={snapshotModal.streamName}\n        onDownload={handleSnapshotDownload}\n      />\n\n      <VideoModal\n        isOpen={videoModal.isOpen}\n        onClose={closeVideoModal}\n        videoUrl={videoModal.videoUrl}\n        title={videoModal.title}\n        downloadUrl={videoModal.downloadUrl}\n      />\n    </ModalContext.Provider>\n  );\n}\n\n// Export functions for backward compatibility\nexport function setupModals() {\n  console.warn('setupModals() is deprecated. Use <ModalProvider> component instead.');\n  // This function is kept for backward compatibility\n}\n\nexport function addModalStyles() {\n  console.warn('addModalStyles() is deprecated. Modal styles are now included in components.css');\n  // This function is kept for backward compatibility\n}\n\nexport function showVideoModal(videoUrl, title, downloadUrl) {\n  console.warn('Direct showVideoModal() is deprecated. Use ModalContext.showVideoModal instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showVideoModal) {\n    window.__modalContext.showVideoModal(videoUrl, title, downloadUrl);\n    return;\n  }\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-modal-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  import('preact').then(({ render, h }) => {\n    render(\n      h(VideoModal, {\n        isOpen: true,\n        onClose: () => {\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        videoUrl,\n        title,\n        downloadUrl\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering video modal:', err);\n    showStatusMessage('Error showing video modal: ' + err.message, 'error');\n  });\n}\n\nexport function showSnapshotPreview(imageData, streamName) {\n  console.warn('Direct showSnapshotPreview() is deprecated. Use ModalContext.showSnapshotPreview instead.');\n\n  // Get the modal context from the global variable if available\n  if (window.__modalContext && window.__modalContext.showSnapshotPreview) {\n    window.__modalContext.showSnapshotPreview(imageData, streamName);\n    return;\n  }\n\n  // Fallback to creating a modal directly\n  const modalRoot = document.getElementById('modal-root');\n  if (!modalRoot) {\n    const root = document.createElement('div');\n    root.id = 'modal-root';\n    document.body.appendChild(root);\n  }\n\n  // Create a temporary div to render the modal\n  const modalContainer = document.createElement('div');\n  modalContainer.id = 'temp-snapshot-container';\n  document.body.appendChild(modalContainer);\n\n  // Import preact to render the modal\n  import('preact').then(({ render, h }) => {\n    const handleDownload = () => {\n      try {\n        // Import the snapshot manager hook\n        import('./SnapshotManager.jsx').then(({ useSnapshotManager }) => {\n          const { downloadSnapshot } = useSnapshotManager();\n          if (downloadSnapshot) {\n            downloadSnapshot();\n          } else {\n            // Fallback to the old implementation\n            const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n            const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n            const link = document.createElement('a');\n            link.href = imageData;\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n\n            // Clean up\n            setTimeout(() => {\n              document.body.removeChild(link);\n            }, 100);\n\n            showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n          }\n        }).catch(error => {\n          console.error('Error importing SnapshotManager:', error);\n          // Fallback to the old implementation\n          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n          const fileName = `snapshot_${streamName}_${timestamp}.jpg`;\n\n          const link = document.createElement('a');\n          link.href = imageData;\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n\n          // Clean up\n          setTimeout(() => {\n            document.body.removeChild(link);\n          }, 100);\n\n          showStatusMessage('Snapshot downloaded successfully', 'success', 3000);\n        });\n      } catch (error) {\n        console.error('Error downloading snapshot:', error);\n        showStatusMessage('Download failed: ' + error.message, 'error', 5000);\n      }\n    };\n\n    render(\n      h(SnapshotPreviewModal, {\n        isOpen: true,\n        onClose: () => {\n          render(null, modalContainer);\n          document.body.removeChild(modalContainer);\n        },\n        imageData,\n        streamName,\n        onDownload: handleDownload\n      }),\n      modalContainer\n    );\n  }).catch(err => {\n    console.error('Error rendering snapshot modal:', err);\n    showStatusMessage('Error showing snapshot preview: ' + err.message, 'error');\n  });\n}\n"],"names":["props","isOpen","onClose","onConfirm","mode","count","title","message","jsx","class","onClick","e","target","currentTarget","onKeyDown","key","children","jsxs","console","warn","videoUrl","downloadUrl","window","__modalContext","showVideoModal","document","getElementById","root","createElement","id","body","appendChild","modalContainer","__vitePreload","async","render","h","h2","module","import","meta","url","then","VideoModal","removeChild","catch","err","error","showStatusMessage","imageData","streamName","showSnapshotPreview","SnapshotPreviewModal","onDownload","handleDownload","useSnapshotManager","useSnapshotManager2","downloadSnapshot","timestamp","Date","toISOString","replace","fileName","link","href","download","click","setTimeout","modalRef","useRef","useEffect","handleKeyDown","addEventListener","current","modalContent","querySelector","classList","remove","add","removeEventListener","createPortal","ref","className","style","width","src","alt","detectionOverlayEnabled","setDetectionOverlayEnabled","useState","timeWindow","setTimeWindow","detections","setDetections","recordingData","setRecordingData","detectionStatus","setDetectionStatus","currentSpeed","setCurrentSpeed","videoRef","canvasRef","recordingIdMatch","match","recordingId","parseInt","response","fetch","ok","Error","data","json","stream","start_time","end_time","startTime","Math","floor","getTime","endTime","detectionsResponse","fetchedDetections","length","fetchRecordingData","drawDetections","useCallback","video","canvas","videoWidth","videoHeight","requestAnimationFrame","height","ctx","getContext","clearRect","currentTime","currentTimestamp","visibleDetections","filter","detection","abs","forEach","x","y","strokeStyle","lineWidth","strokeRect","fillStyle","labelText","label","round","confidence","labelWidth","measureText","fillRect","font","fillText","paused","ended","handlePlay","handleSeeked","handleTimeUpdate","lastDrawnTime","display","controls","autoPlay","map","speed","playbackRate","handleSpeedChange","type","checked","onChange","disabled","htmlFor","min","max","step","value","newTimeWindow","now","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","createContext"],"mappings":"oMA2BO,SAAiCA,GACtC,MAAMC,OAAEA,EAAQC,QAAAA,EAAAC,UAASA,EAAWC,KAAAA,EAAAC,MAAMA,GAAUL,EAEhD,IAACC,EAAe,OAAA,KAGpB,IAAIK,EAAQ,iBACRC,EAAU,6CAyBZ,MAvBW,aAATH,GACME,EAAA,6BACRC,EAAU,mCAAmCF,uBAAqC,IAAVA,EAAc,IAAM,OAC1E,QAATD,IACDE,EAAA,iCACEC,EAAA,8GAkBVC,EAAC,MAAA,CACCC,MAAM,6EACNC,QAT2BC,IACzBA,EAAEC,SAAWD,EAAEE,eACTX,GAAA,EAQRY,UAjBmBH,IACP,WAAVA,EAAEI,KACIb,GAAA,EAiBRc,SAAAC,EAAC,MAAI,CAAAR,MAAM,sEACTO,SAAA,CAACR,EAAA,MAAA,CAAIC,MAAM,OACTO,SAAAR,EAAC,MAAGC,MAAM,sDAAuDO,eAGlER,EAAA,IAAA,CAAEC,MAAM,wCAAyCO,SAAQT,IAE1DU,EAAC,MAAI,CAAAR,MAAM,6BACTO,SAAA,CAAAR,EAAC,SAAA,CACCC,MAAM,6IACNC,QAASR,EACVc,SAAA,WAGDR,EAAC,SAAA,CACCC,MAAM,6EACNC,QAASP,EACVa,SAAA,kBAOX,IAsnBO,WACLE,QAAQC,KAAK,kFAEf,IAEgB,SAAeC,EAAUd,EAAOe,GAI9C,GAHAH,QAAQC,KAAK,mFAGTG,OAAOC,gBAAkBD,OAAOC,eAAeC,eAEjD,YADAF,OAAOC,eAAeC,eAAeJ,EAAUd,EAAOe,GAMxD,IADkBI,SAASC,eAAe,cAC1B,CACR,MAAAC,EAAOF,SAASG,cAAc,OACpCD,EAAKE,GAAK,aACDJ,SAAAK,KAAKC,YAAYJ,EAAI,CAI1B,MAAAK,EAAiBP,SAASG,cAAc,OAC9CI,EAAeH,GAAK,uBACXJ,SAAAK,KAAKC,YAAYC,GAGnBC,GAAAC,UAAA,MAAAC,OAAAA,EAAAC,EAAAC,SAAAC,EAAAC,OAAA,oDAAQ,MAAA,CAAAJ,SAAAC,EAAAC,EAAA,QAAA,EAAAC,EAAAE,KAAAC,KAAEC,MAAK,EAAGP,SAAQC,EAAAA,MAC/BD,EACEC,EAAEO,EAAY,CACZ1C,QAAQ,EACRC,QAASA,KACPiC,EAAO,KAAMH,GACJP,SAAAK,KAAKc,YAAYZ,EAAc,EAE1CZ,WACAd,QACAe,gBAEFW,EACF,IACCa,OAAaC,IACN5B,QAAA6B,MAAM,+BAAgCD,GAC5BE,EAAA,8BAAgCF,EAAIvC,QAAS,QAAO,GAE1E,IAEgB,SAAoB0C,EAAWC,GAI7C,GAHAhC,QAAQC,KAAK,6FAGTG,OAAOC,gBAAkBD,OAAOC,eAAe4B,oBAEjD,YADO7B,OAAAC,eAAe4B,oBAAoBF,EAAWC,GAMvD,IADkBzB,SAASC,eAAe,cAC1B,CACR,MAAAC,EAAOF,SAASG,cAAc,OACpCD,EAAKE,GAAK,aACDJ,SAAAK,KAAKC,YAAYJ,EAAI,CAI1B,MAAAK,EAAiBP,SAASG,cAAc,OAC9CI,EAAeH,GAAK,0BACXJ,SAAAK,KAAKC,YAAYC,GAGnBC,GAAAC,UAAA,MAAAC,OAAAA,EAAAC,EAAAC,SAAAC,EAAAC,OAAA,oDAAQ,MAAA,CAAAJ,SAAAC,EAAAC,EAAA,QAAA,EAAAC,EAAAE,KAAAC,KAAEC,MAAK,EAAGP,SAAQC,EAAAA,MAmD/BD,EACEC,EAAEgB,EAAsB,CACtBnD,QAAQ,EACRC,QAASA,KACPiC,EAAO,KAAMH,GACJP,SAAAK,KAAKc,YAAYZ,EAAc,EAE1CiB,YACAC,aACAG,WA3DmBC,KACjB,IAEFrB,GAAAC,UAAA,MAAAqB,mBAAAC,SAAAlB,SAAO,wCAAyB,MAAA,CAAAiB,mBAAAC,EAAA,QAAA,EAAAlB,EAAAE,KAAAC,KAAAC,MAAK,EAAGa,mBAAAA,MAChC,MAAAE,iBAAEA,GAAqBF,IAC7B,GAAIE,EACeA,QACZ,CAEC,MAAAC,GAAA,IAAgBC,MAAOC,cAAcC,QAAQ,QAAS,KACtDC,EAAW,YAAYZ,KAAcQ,QAErCK,EAAOtC,SAASG,cAAc,KACpCmC,EAAKC,KAAOf,EACZc,EAAKE,SAAWH,EACPrC,SAAAK,KAAKC,YAAYgC,GAC1BA,EAAKG,QAGLC,YAAW,KACA1C,SAAAK,KAAKc,YAAYmB,EAAI,GAC7B,KAEef,EAAA,mCAAoC,UAAW,IAAI,KAEtEH,OAAeE,IACR7B,QAAA6B,MAAM,mCAAoCA,GAE5C,MAAAW,GAAA,IAAgBC,MAAOC,cAAcC,QAAQ,QAAS,KACtDC,EAAW,YAAYZ,KAAcQ,QAErCK,EAAOtC,SAASG,cAAc,KACpCmC,EAAKC,KAAOf,EACZc,EAAKE,SAAWH,EACPrC,SAAAK,KAAKC,YAAYgC,GAC1BA,EAAKG,QAGLC,YAAW,KACA1C,SAAAK,KAAKc,YAAYmB,EAAI,GAC7B,KAEef,EAAA,mCAAoC,UAAW,IAAI,UAEhED,GACC7B,QAAA6B,MAAM,8BAA+BA,GAC7CC,EAAkB,oBAAsBD,EAAMxC,QAAS,QAAS,IAAI,KAetEyB,EACF,IACCa,OAAaC,IACN5B,QAAA6B,MAAM,kCAAmCD,GAC/BE,EAAA,mCAAqCF,EAAIvC,QAAS,QAAO,GAE/E,IAhJO,WACLW,QAAQC,KAAK,sEAEf,+RAzmBO,SAASiC,GAAqBnD,OAAEA,EAAAC,QAAQA,YAAS+C,EAAWC,WAAAA,EAAAG,WAAYA,IACvE,MAAAe,EAAWC,EAAO,MAmCpB,OAjCJC,GAAU,KAEF,MAAAC,EAAiB5D,IACP,WAAVA,EAAEI,KAAoBd,GAChBC,GAAA,EAiBZ,OAbSuB,SAAA+C,iBAAiB,UAAWD,GAGjCtE,GAAUmE,EAASK,SACrBN,YAAW,KACT,MAAMO,EAAeN,EAASK,QAAQE,cAAc,kBAChDD,IACWA,EAAAE,UAAUC,OAAO,WAAY,aAC7BH,EAAAE,UAAUE,IAAI,YAAa,eAAa,GAEtD,IAGE,KACIrD,SAAAsD,oBAAoB,UAAWR,EAAa,CACvD,GACC,CAACtE,EAAQC,IASPD,EAEE+E,EACLxE,EAAC,MAAA,CACCyE,IAAKb,EACLvC,GAAG,yBACHqD,UAAU,6EACVxE,QAb2BC,IACzBA,EAAEC,SAAWD,EAAEE,eACTX,GAAA,EAaRc,SAAAC,EAAC,OAAIiE,UAAU,sKAAsKC,MAAO,CAAEC,MAAO,OACnMpE,SAAA,CAACC,EAAA,MAAA,CAAIiE,UAAU,sFACblE,SAAA,CAACR,EAAA,KAAA,CAAGqB,GAAG,yBAAyBqD,UAAU,sDACvClE,SAAakC,EAAA,aAAaA,IAAe,aAE5C1C,EAAC,SAAA,CACC0E,UAAU,sFACVxE,QAASR,EACVc,SAAA,SAIHR,EAAC,MAAI,CAAA0E,UAAU,8BACblE,SAAAR,EAAC,MAAA,CACCqB,GAAG,yBACHqD,UAAU,kCACVG,IAAKpC,EACLqC,IAAI,eAGRrE,EAAC,MAAI,CAAAiE,UAAU,+EACblE,SAAA,CAAAR,EAAC,SAAA,CACCqB,GAAG,wBACHqD,UAAU,+EACVxE,QAAS2C,EACVrC,SAAA,aAGDR,EAAC,SAAA,CACCqB,GAAG,qBACHqD,UAAU,6IACVxE,QAASR,EACVc,SAAA,kBAMPS,SAASK,MA/CS,IAiDtB,CAYO,SAASa,GAAW1C,OAAEA,EAAAC,QAAQA,WAASkB,EAAUd,MAAAA,EAAAe,YAAOA,IAC7D,MAAOkE,EAAyBC,GAA8BC,GAAS,IAChEC,EAAYC,GAAiBF,EAAS,IACtCG,EAAYC,GAAiBJ,EAAS,KACtCK,EAAeC,GAAoBN,EAAS,OAC5CO,EAAiBC,GAAsBR,EAAS,yBAChDS,EAAcC,GAAmBV,EAAS,GAE3CW,EAAW/B,EAAO,MAClBgC,EAAYhC,EAAO,MACnBD,EAAWC,EAAO,MAGxBC,GAAU,KACF,MAAAC,EAAiB5D,IACP,WAAVA,EAAEI,KAAoBd,GAChBC,GAAA,EAKZ,OADSuB,SAAA+C,iBAAiB,UAAWD,GAC9B,KACI9C,SAAAsD,oBAAoB,UAAWR,EAAa,CACvD,GACC,CAACtE,EAAQC,IAGZoE,GAAU,KACJ,IAACrE,IAAWmB,EAAU,OAGpB,MAAAkF,EAAmBlF,EAASmF,MAAM,iBACxC,IAAKD,IAAqBA,EAAiB,GAAI,OAE/C,MAAME,EAAcC,SAASH,EAAiB,GAAI,IAGvBpE,WACrB,IACF,MAAMwE,QAAiBC,MAAM,mBAAmBH,KAChD,IAAKE,EAASE,GAAU,MAAA,IAAIC,MAAM,kCAE5B,MAAAC,QAAaJ,EAASK,OAI5B,GAHAhB,EAAiBe,GAGbA,GAAQA,EAAKE,QAAUF,EAAKG,YAAcH,EAAKI,SAAU,CACrD,MAAAC,EAAYC,KAAKC,MAAM,IAAI1D,KAAKmD,EAAKG,YAAYK,UAAY,KAC7DC,EAAUH,KAAKC,MAAM,IAAI1D,KAAKmD,EAAKI,UAAUI,UAAY,KAEzDE,QAA2Bb,MAC/B,0BAA0BG,EAAKE,gBAAgBG,SAAiBI,KAGlE,IAAKC,EAAmBZ,GAAU,MAAA,IAAIC,MAAM,8BAEtC,MACAY,SADuBD,EAAmBT,QACPnB,YAAc,GACvDC,EAAc4B,GAEVA,EAAkBC,OAAS,EACVzB,EAAA,GAAGwB,EAAkBC,mBAAgD,IAA7BD,EAAkBC,OAAe,IAAM,gBAElGzB,EAAmB,yCACrB,QAEKlD,GACC7B,QAAA6B,MAAM,uBAAwBA,GACtCkD,EAAmB,2BAA0B,GAI9B0B,EAAA,GAClB,CAAC1H,EAAQmB,IAGN,MAAAwG,EAAiBC,GAAY,KAC7B,IAACtC,IAA4Ba,EAAS3B,UAAY4B,EAAU5B,SAAiC,IAAtBmB,EAAW8B,OACpF,OAGF,MAAMI,EAAQ1B,EAAS3B,QACjBsD,EAAS1B,EAAU5B,QAGnBuD,EAAaF,EAAME,WACnBC,EAAcH,EAAMG,YAEtB,GAAe,IAAfD,GAAoC,IAAhBC,EAGtB,YADAC,sBAAsBN,GAKxBG,EAAO3C,MAAQ4C,EACfD,EAAOI,OAASF,EAGV,MAAAG,EAAML,EAAOM,WAAW,MAC9BD,EAAIE,UAAU,EAAG,EAAGP,EAAO3C,MAAO2C,EAAOI,QAGzC,MAAMI,EAAcT,EAAMS,YAG1B,IAAKzC,IAAkBA,EAAcmB,WACnC,OAII,MAGAuB,EAHqBpB,KAAKC,MAAM,IAAI1D,KAAKmC,EAAcmB,YAAYK,UAAY,KAGvCF,KAAKC,MAAMkB,GAGnDE,EAAoB7C,EAAW8C,QAAoBC,KAClDA,EAAUjF,WAGR0D,KAAKwB,IAAID,EAAUjF,UAAY8E,IAAqB9C,IAIzD+C,EAAkBf,OAAS,EACVzB,EAAA,WAAWwC,EAAkBf,mBAAgD,IAA7Be,EAAkBf,OAAe,IAAM,sBAEvFzB,EAAA,kCAAkCL,EAAW8B,iBAIlEe,EAAkBI,SAAqBF,IAE/B,MAAAG,EAAIH,EAAUG,EAAId,EAClBe,EAAIJ,EAAUI,EAAId,EAClB7C,EAAQuD,EAAUvD,MAAQ4C,EAC1BG,EAASQ,EAAUR,OAASF,EAGlCG,EAAIY,YAAc,uBAClBZ,EAAIa,UAAY,EAChBb,EAAIc,WAAWJ,EAAGC,EAAG3D,EAAO+C,GAG5BC,EAAIe,UAAY,qBACV,MAAAC,EAAY,GAAGT,EAAUU,UAAUjC,KAAKkC,MAA6B,IAAvBX,EAAUY,gBACxDC,EAAapB,EAAIqB,YAAYL,GAAWhE,MAAQ,GACtDgD,EAAIsB,SAASZ,EAAGC,EAAI,GAAIS,EAAY,IAGpCpB,EAAIe,UAAY,QAChBf,EAAIuB,KAAO,aACXvB,EAAIwB,SAASR,EAAWN,EAAI,EAAGC,EAAI,EAAC,IAIjCjB,EAAM+B,QAAW/B,EAAMgC,OAC1B5B,sBAAsBN,EAAc,GAErC,CAACrC,EAAyBK,EAAYE,EAAeJ,IAiFpD,OA9EJpB,GAAU,KACR,IAAKrE,IAAWmG,EAAS3B,QAAS,OAElC,MAAMqD,EAAQ1B,EAAS3B,QAEjBsF,EAAaA,KACbxE,GACaqC,GAAA,EAIboC,EAAeA,KACfzE,GACaqC,GAAA,EAIbqC,EAAmBA,KACvB,GAAI1E,EAAyB,CAG3B,MAAMgD,EAAcnB,KAAKC,MAA0B,EAApBS,EAAMS,aAAmB,EACpDT,EAAMoC,gBAAkB3B,IAC1BT,EAAMoC,cAAgB3B,EACPX,IACjB,GAQJ,OAJME,EAAAtD,iBAAiB,OAAQuF,GACzBjC,EAAAtD,iBAAiB,SAAUwF,GAC3BlC,EAAAtD,iBAAiB,aAAcyF,GAE9B,KACCnC,EAAA/C,oBAAoB,OAAQgF,GAC5BjC,EAAA/C,oBAAoB,SAAUiF,GAC9BlC,EAAA/C,oBAAoB,aAAckF,EAAgB,CAC1D,GACC,CAAChK,EAAQsF,EAAyBqC,IAGrCtD,GAAU,KACJiB,GACEc,EAAU5B,UACF4B,EAAA5B,QAAQU,MAAMgF,QAAU,SAErBvC,KAEXvB,EAAU5B,UACF4B,EAAA5B,QAAQU,MAAMgF,QAAU,OACpC,GAED,CAAC5E,EAAyBqC,IA0BxB3H,EAEE+E,EACLxE,EAAC,MAAA,CACCyE,IAAKb,EACLvC,GAAG,sBACHqD,UAAU,6EACVxE,QA9B2BC,IACzBA,EAAEC,SAAWD,EAAEE,eACTX,GAAA,EA8BRc,SAAAC,EAAC,MAAI,CAAAiE,UAAU,wLACblE,SAAA,CAACC,EAAA,MAAA,CAAIiE,UAAU,sFACblE,SAAA,CAAAR,EAAC,MAAGqB,GAAG,sBAAsBqD,UAAU,sDACpClE,YAAS,UAEZR,EAAC,SAAA,CACC0E,UAAU,sFACVxE,QAASR,EACVc,SAAA,WAKF,MAAI,CAAAkE,UAAU,gBACblE,SAACC,EAAA,MAAA,CAAIiE,UAAU,WACblE,SAAA,CAAAR,EAAC,QAAA,CACCyE,IAAKmB,EACLlB,UAAU,kDACVG,IAAKjE,EACLgJ,UAAQ,EACRC,UAAQ,IAEV7J,EAAC,SAAA,CACCyE,IAAKoB,EACLnB,UAAU,0DACVC,MAAO,CAAEgF,QAAS,eAKvBlJ,EAAA,MAAA,CAAIY,GAAG,sBAAsBqD,UAAU,qGACtClE,SAAA,CAACR,EAAA,KAAA,CAAG0E,UAAU,mEAAmElE,SAEjF,sBAEAC,EAAC,MAAI,CAAAiE,UAAU,6CAEblE,SAAA,CAACC,EAAA,MAAA,CAAIiE,UAAU,0DACblE,SAAA,CAACR,EAAA,KAAA,CAAG0E,UAAU,8DAA8DlE,SAE5E,mBAECR,EAAA,MAAA,CAAI0E,UAAU,sCACZlE,SAAC,CAAA,IAAM,GAAK,EAAK,IAAK,EAAK,GAAKsJ,KAC/BC,GAAA/J,EAAC,SAAA,CAEC0E,UAAW,oCACTqF,IAAUrE,EACN,0BACA,gJAEN,aAAYqE,EACZ7J,QAASA,IA7EA6J,KACrBnE,EAAS3B,UACX2B,EAAS3B,QAAQ+F,aAAeD,EAChCpE,EAAgBoE,GAAK,EA0EQE,CAAkBF,GAEhCvJ,SAAU,IAAAuJ,EAAM,cAAgB,GAAGA,MAT/BA,OAcVtJ,EAAA,MAAA,CAAIY,GAAG,0BAA0BqD,UAAU,0EAA0ElE,SAAA,CAAA,kBACpGkF,EAAa,KAAoB,IAAjBA,EAAuB,WAAa,SAKxEjF,EAAC,MAAI,CAAAiE,UAAU,uBACblE,SAAA,CAACR,EAAA,KAAA,CAAG0E,UAAU,8DAA8DlE,SAE5E,uBAEAC,EAAC,MAAI,CAAAiE,UAAU,mCACblE,SAAA,CAACC,EAAA,MAAA,CAAIiE,UAAU,+BACblE,SAAA,CAAAR,EAAC,QAAA,CACCkK,KAAK,WACL7I,GAAG,6BACHqD,UAAU,sNACVyF,QAASpF,EACTqF,SAAWjK,GAAM6E,EAA2B7E,EAAEC,OAAO+J,SACrDE,SAAgC,IAAtBjF,EAAW8B,SAEvBlH,EAAC,QAAA,CACCsK,QAAQ,6BACR5F,UAAU,uDACXlE,SAAA,+BAKHC,EAAC,MAAI,CAAAiE,UAAU,iCACblE,SAAA,CAAAR,EAAC,QAAA,CACCsK,QAAQ,+BACR5F,UAAU,4DACXlE,SAAA,0BAIDR,EAAC,QAAA,CACCkK,KAAK,QACL7I,GAAG,+BACHqD,UAAU,oFACV6F,IAAI,IACJC,IAAI,KACJC,KAAK,IACLC,MAAOxF,EACPkF,SAzHcjK,IAC9B,MAAMwK,EAAgB1E,SAAS9F,EAAEC,OAAOsK,MAAO,IAC/CvF,EAAcwF,GACV5F,GACaqC,GAAA,IAwHF3G,EAAA,MAAA,CAAIY,GAAG,8BAA8BqD,UAAU,4DAA4DlE,SAAA,CAAA,gBAC5F0E,EAAW,UAAuB,IAAfA,EAAmB,IAAM,SAI7DlF,EAAA,MAAA,CAAIqB,GAAG,6BAA6BqD,UAAW,wBAC9CU,EAAW8B,OAAS,EAChB,iDACA,oCAEH1G,SACHgF,aAML3E,GACCb,EAAC,MAAI,CAAA0E,UAAU,8EACblE,SAAAC,EAAC,IAAA,CACCiE,UAAU,yGACVlB,KAAM3C,EACN4C,SAAU,SAASN,KAAKyH,YAExBpK,SAAA,CAACR,EAAA,MAAA,CAAI6K,MAAM,6BAA6BnG,UAAU,eAAeoG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eACtGxK,SAACR,EAAA,OAAA,CAAKiL,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,qEACjE,yBAOdpL,EAAC,MAAI,CAAA0E,UAAU,aAGnBzD,SAASK,MAxJS,IA0JtB,CAnkB4B+J,EAAc,CACxCrK,eAAgBA,OAChB2B,oBAAqBA"}