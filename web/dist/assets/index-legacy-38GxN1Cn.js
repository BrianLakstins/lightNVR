System.register(["./query-client-legacy-BsQz_eUz.js","./layout-legacy-DIeLkdgZ.js","./LiveView-legacy-BLdhrtOF.js","./UI-legacy-NBPkm0hC.js","./SnapshotManager-legacy-BEbReu8i.js","./Footer-legacy-BqmI5SpZ.js"],(function(e,r){"use strict";var o,t,n,a,s,l,i,c,d,m,g,u,f,p,h,b,y,w,v,x,C,S,T,$,k,R;return{setters:[e=>{o=e.d,t=e.A,n=e.y,a=e.u,s=e.a,l=e.b,i=e.c,c=e.s,d=e.q,m=e.E,g=e.e,u=e.Q,f=e.T,p=e.k},null,e=>{h=e.s,b=e.u,y=e.c,w=e.F,v=e.L},e=>{x=e.s,C=e.a},e=>{S=e.SnapshotButton,T=e.useSnapshotManager,$=e.SnapshotManager},e=>{k=e.H,R=e.F}],execute:function(){if("undefined"!=typeof document){const e=document.createElement("style");e.textContent="\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n",document.head.appendChild(e)}function e({stream:e,onTakeSnapshot:r,onToggleFullscreen:s,webrtcConnections:l,detectionIntervals:i,initializeWebRTCPlayer:c,cleanupWebRTCPlayer:d}){const[m,g]=o(!0),[u,f]=o(null),p=t(null),b=t(null),y=t(null);return n((()=>{if(!e)return;if(console.log(`WebRTCVideoCell: Initializing player for stream ${e.name}`),l.current[e.name])return console.log(`WebRTCVideoCell: Stream ${e.name} already has a connection, skipping initialization`),void g(!1);console.log(`WebRTCVideoCell: Will initialize stream ${e.name} after a short delay`);const r=setTimeout((()=>{p.current&&b.current&&(console.log(`WebRTCVideoCell: Now initializing stream ${e.name}`),c(e,p.current,b.current,{onLoadedData:()=>{console.log(`Video data loaded for stream ${e.name}`),g(!1)},onPlaying:()=>{console.log(`Video playing for stream ${e.name}`),g(!1),e.detection_based_recording&&e.detection_model&&b.current&&(console.log(`Starting detection polling for stream ${e.name}`),h(e.name,b.current,p.current,i))},onError:r=>{console.error(`Video error for stream ${e.name}:`,r),f(r||"Video playback error"),g(!1)}}))}),100);return()=>{clearTimeout(r),e&&(console.log(`WebRTCVideoCell: Cleaning up player for stream ${e.name}`),d(e.name))}}),[e.name]),a("div",{className:"video-cell","data-stream-name":e.name,"data-stream-id":e.id||e.name,ref:y,style:{position:"relative"},children:[a("video",{id:`video-${e.name.replace(/\s+/g,"-")}`,className:"video-element",ref:p,playsInline:!0,autoPlay:!0,muted:!0,style:{pointerEvents:"none",width:"100%",height:"100%",objectFit:"contain"}}),a("canvas",{id:`canvas-${e.name.replace(/\s+/g,"-")}`,className:"detection-overlay",ref:b,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",pointerEvents:"none",zIndex:5}}),a("div",{className:"stream-name-overlay",style:{position:"absolute",top:"10px",left:"10px",padding:"5px 10px",backgroundColor:"rgba(0, 0, 0, 0.5)",color:"white",borderRadius:"4px",fontSize:"14px",zIndex:15,pointerEvents:"none"},children:e.name}),a("div",{className:"stream-controls",style:{position:"absolute",bottom:"10px",right:"10px",display:"flex",gap:"10px",zIndex:30,backgroundColor:"rgba(0, 0, 0, 0.5)",padding:"5px",borderRadius:"4px",pointerEvents:"auto"},children:[a("div",{style:{backgroundColor:"transparent",padding:"5px",borderRadius:"4px",position:"relative",zIndex:30},onMouseOver:e=>e.currentTarget.style.backgroundColor="rgba(255, 255, 255, 0.2)",onMouseOut:e=>e.currentTarget.style.backgroundColor="transparent",children:a(S,{streamId:e.id||e.name,streamName:e.name})}),a("button",{className:"fullscreen-btn",title:"Toggle Fullscreen","data-id":e.id||e.name,"data-name":e.name,onClick:r=>s(e.name,r),style:{backgroundColor:"transparent",border:"none",padding:"5px",borderRadius:"4px",color:"white",cursor:"pointer",position:"relative",zIndex:30},onMouseOver:e=>e.currentTarget.style.backgroundColor="rgba(255, 255, 255, 0.2)",onMouseOut:e=>e.currentTarget.style.backgroundColor="transparent",children:a("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"white","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",children:a("path",{d:"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"})})})]}),m&&a("div",{className:"loading-indicator",style:{position:"absolute",top:0,left:0,right:0,bottom:0,width:"100%",height:"100%",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",backgroundColor:"rgba(0, 0, 0, 0.7)",color:"white",zIndex:20,pointerEvents:"none",textAlign:"center"},children:a("div",{className:"loading-content",style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",padding:"20px",borderRadius:"8px",backgroundColor:"rgba(0, 0, 0, 0.5)"},children:[a("div",{className:"spinner",style:{width:"40px",height:"40px",border:"4px solid rgba(255, 255, 255, 0.3)",borderRadius:"50%",borderTop:"4px solid white",animation:"spin 1s linear infinite",marginBottom:"15px"}}),a("p",{style:{fontSize:"14px",fontWeight:"bold"},children:"Connecting..."})]})}),u&&a("div",{className:"error-indicator",style:{position:"absolute",top:0,left:0,right:0,bottom:0,width:"100%",height:"100%",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",backgroundColor:"rgba(0, 0, 0, 0.7)",color:"white",zIndex:20,pointerEvents:"auto",textAlign:"center"},children:a("div",{className:"error-content",style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",width:"80%",maxWidth:"300px",padding:"20px",borderRadius:"8px",backgroundColor:"rgba(0, 0, 0, 0.5)"},children:[a("div",{className:"error-icon",style:{fontSize:"28px",marginBottom:"15px",fontWeight:"bold",width:"40px",height:"40px",lineHeight:"40px",borderRadius:"50%",backgroundColor:"rgba(220, 38, 38, 0.8)",textAlign:"center"},children:"!"}),a("p",{style:{marginBottom:"20px",textAlign:"center",width:"100%",fontSize:"14px",lineHeight:"1.4"},children:u}),a("button",{className:"retry-button",onClick:()=>{e&&(console.log(`Retrying connection for stream ${e.name}`),g(!0),f(null),d(e.name),setTimeout((()=>{p.current&&b.current&&(console.log(`Reinitializing WebRTC player for stream ${e.name}`),c(e,p.current,b.current,{onLoadedData:()=>{console.log(`Video data loaded for stream ${e.name}`),g(!1)},onPlaying:()=>{console.log(`Video playing for stream ${e.name}`),g(!1)},onError:r=>{console.error(`Video error for stream ${e.name}:`,r),console.log(`Trying one more time for stream ${e.name} with a longer delay`),setTimeout((()=>{p.current&&b.current&&c(e,p.current,b.current,{onLoadedData:()=>{console.log(`Video data loaded for stream ${e.name} on second attempt`),g(!1)},onPlaying:()=>{console.log(`Video playing for stream ${e.name} on second attempt`),g(!1)},onError:r=>{console.error(`Video error for stream ${e.name} on second attempt:`,r),f(r||"Video playback error"),g(!1)}})}),1e3)}}))}),200))},style:{padding:"8px 20px",backgroundColor:"#2563eb",color:"white",borderRadius:"4px",border:"none",cursor:"pointer",fontWeight:"bold",fontSize:"14px",boxShadow:"0 2px 4px rgba(0, 0, 0, 0.2)",transition:"background-color 0.2s ease"},onMouseOver:e=>e.currentTarget.style.backgroundColor="#1d4ed8",onMouseOut:e=>e.currentTarget.style.backgroundColor="#2563eb",children:"Retry"})]})})]})}function r(){const{takeSnapshot:r}=T(),{isFullscreen:m,setIsFullscreen:g,toggleFullscreen:u}=b(),f=s({mutationFn:async e=>{const{streamName:r,...o}=e,t=localStorage.getItem("auth"),n=await fetch(`/api/webrtc?src=${encodeURIComponent(r)}`,{method:"POST",headers:{"Content-Type":"application/json",...t?{Authorization:"Basic "+t}:{}},body:JSON.stringify(o),signal:e.signal});if(!n.ok)throw new Error(`Failed to send offer: ${n.status} ${n.statusText}`);const a=await n.text();try{return JSON.parse(a)}catch(s){throw console.error(`Error parsing JSON for stream ${r}:`,s),console.log(`Raw response text: ${a}`),new Error(`Failed to parse WebRTC answer: ${s.message}`)}},onError:(e,r)=>{console.error(`Error sending WebRTC offer for stream ${r.streamName}:`,e)}}),[p,v]=o([]),[S,k]=o((()=>{const e=new URLSearchParams(window.location.search).get("layout");return e||(sessionStorage.getItem("webrtc_layout")||"4")})),[R,E]=o((()=>{const e=new URLSearchParams(window.location.search).get("stream");return e||(sessionStorage.getItem("webrtc_selected_stream")||"")})),[N,I]=o(!0),[P,W]=o((()=>{const e=new URLSearchParams(window.location.search).get("page");if(e)return Math.max(0,parseInt(e,10)-1);const r=sessionStorage.getItem("webrtc_current_page");return r?Math.max(0,parseInt(r,10)-1):0})),_=t(null),L=t({}),j=t({});n((()=>{x(),C();const e=()=>{console.log("Preserving URL parameters before page reload");const e=new URL(window.location);P>0?e.searchParams.set("page",P+1):e.searchParams.delete("page"),"4"!==S?e.searchParams.set("layout",S):e.searchParams.delete("layout"),"1"===S&&R?e.searchParams.set("stream",R):e.searchParams.delete("stream"),window.history.replaceState({},"",e),P>0?sessionStorage.setItem("webrtc_current_page",(P+1).toString()):sessionStorage.removeItem("webrtc_current_page"),"4"!==S?sessionStorage.setItem("webrtc_layout",S):sessionStorage.removeItem("webrtc_layout"),"1"===S&&R?sessionStorage.setItem("webrtc_selected_stream",R):sessionStorage.removeItem("webrtc_selected_stream")};window.addEventListener("beforeunload",e);const r=setInterval((()=>{Object.keys(L.current).forEach((e=>{const r=L.current[e];if(r&&(console.debug(`WebRTC connection state for ${e}: ${r.connectionState}, ICE state: ${r.iceConnectionState}`),"failed"===r.iceConnectionState||"disconnected"===r.iceConnectionState)){console.warn(`WebRTC connection for ${e} is in ${r.iceConnectionState} state, will attempt reconnect`),J(e);const o=p.find((r=>r.name===e));o&&(console.log(`Attempting to reconnect WebRTC for stream ${e}`),B(o))}}))}),3e4);return()=>{window.removeEventListener("beforeunload",e),clearInterval(r),Q()}}),[p,P,S,R]);const V=l(),{data:M,isLoading:z,error:F}=i("streams","/api/streams",{timeout:15e3,retries:2,retryDelay:1e3});n((()=>{I(z)}),[z]),n((()=>{M&&Array.isArray(M)&&(async()=>{try{const e=await A(M);if(e.length>0){v(e);const r=new URLSearchParams(window.location.search).get("stream");r&&e.some((e=>e.name===r))?E(r):R&&e.some((e=>e.name===R))||E(e[0].name)}else console.warn("No streams available for WebRTC view after filtering")}catch(e){console.error("Error processing streams:",e),c("Error processing streams: "+e.message)}})()}),[M,R,V]);const D=t({layout:S,selectedStream:R,currentPage:P,streamsLength:p.length});n((()=>{const e=D.current;e.layout===S&&e.selectedStream===R&&e.currentPage===P&&e.streamsLength===p.length||(console.log("Layout, selectedStream, currentPage, or streams changed, updating video grid"),q(),D.current={layout:S,selectedStream:R,currentPage:P,streamsLength:p.length})}),[S,R,p,P]),n((()=>{if(0===p.length)return;const e=setTimeout((()=>{console.log("Updating URL parameters");const e=new URL(window.location);0===P?e.searchParams.delete("page"):e.searchParams.set("page",P+1),"4"!==S?e.searchParams.set("layout",S):e.searchParams.delete("layout"),"1"===S&&R?e.searchParams.set("stream",R):e.searchParams.delete("stream"),window.history.replaceState({},"",e),P>0?sessionStorage.setItem("webrtc_current_page",(P+1).toString()):sessionStorage.removeItem("webrtc_current_page"),"4"!==S?sessionStorage.setItem("webrtc_layout",S):sessionStorage.removeItem("webrtc_layout"),"1"===S&&R?sessionStorage.setItem("webrtc_selected_stream",R):sessionStorage.removeItem("webrtc_selected_stream")}),300);return()=>clearTimeout(e)}),[P,S,R,p.length]);const A=async e=>{try{if(!e||!Array.isArray(e))return console.warn("No streams data provided to filter"),[];const r=e.map((async e=>{try{const r=e.id||e.name;return await V.fetchQuery({queryKey:["stream-details",r],queryFn:async()=>{const o=await fetch(`/api/streams/${encodeURIComponent(r)}`);if(!o.ok)throw new Error(`Failed to load details for stream ${e.name}`);return o.json()},staleTime:3e4})}catch(r){return console.error(`Error loading details for stream ${e.name}:`,r),e}})),o=await Promise.all(r);console.log("Loaded detailed streams for WebRTC view:",o);const t=o.filter((e=>e.is_deleted?(console.log(`Stream ${e.name} is soft deleted, filtering out`),!1):e.enabled?!!e.streaming_enabled||(console.log(`Stream ${e.name} is not configured for streaming, filtering out`),!1):(console.log(`Stream ${e.name} is inactive, filtering out`),!1)));return console.log("Filtered streams for WebRTC view:",t),t||[]}catch(r){return console.error("Error filtering streams for WebRTC view:",r),c("Error processing streams: "+r.message),[]}},O=()=>{switch(S){case"1":return 1;case"2":return 2;case"4":default:return 4;case"6":return 6;case"9":return 9;case"16":return 16}},U=()=>{let e=p;if("1"===S&&R)e=p.filter((e=>e.name===R));else{const r=O(),o=Math.ceil(p.length/r);if(P>=o&&o>0)return[];const t=P*r,n=Math.min(t+r,p.length);e=p.slice(t,n)}return e},q=()=>{if(!_.current)return;let e=U();if(0===e.length&&p.length>0){const e=O(),r=Math.ceil(p.length/e);if(P>=r)return void W(Math.max(0,r-1))}const r=e.map((e=>e.name));console.log(`Updating video grid for page ${P+1}, showing streams:`,r);const o=Object.keys(L.current).filter((e=>!r.includes(e)));o.length>0&&(console.log(`Cleaning up ${o.length} WebRTC connections that are no longer visible:`,o),o.forEach((e=>{J(e)})))},B=(e,r,o,t={})=>{if(!e||!r)return void console.error("Cannot initialize WebRTC player: missing stream or video element");L.current[e.name]&&(console.log(`WebRTC connection for stream ${e.name} already exists, cleaning up first`),J(e.name)),console.log(`Initializing WebRTC player for stream ${e.name}`);const n=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}],iceTransportPolicy:"all",bundlePolicy:"balanced",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});L.current[e.name]=n,n.ontrack=n=>{console.log(`Track received for stream ${e.name}:`,n),"video"===n.track.kind&&(r.srcObject=n.streams[0],r.onloadeddata=()=>{console.log(`Video data loaded for stream ${e.name}`),t.onLoadedData&&t.onLoadedData()},r.onplaying=()=>{console.log(`Video playing for stream ${e.name}`),t.onPlaying&&t.onPlaying(),e.detection_based_recording&&e.detection_model&&o?(console.log(`Starting detection polling for stream ${e.name} now that video is playing`),h(e.name,o,r,j.current)):console.log(`Detection not enabled for stream ${e.name}`)},r.onerror=r=>{console.error(`Video error for stream ${e.name}:`,r),t.onError&&t.onError("Video playback error")})},n.onicecandidate=r=>{r.candidate&&console.log(`ICE candidate for stream ${e.name}:`,r.candidate)},n.oniceconnectionstatechange=()=>{console.log(`ICE connection state for stream ${e.name}:`,n.iceConnectionState),"failed"===n.iceConnectionState?(console.warn(`ICE failed for stream ${e.name}`),t.onError&&t.onError("WebRTC ICE connection failed")):"disconnected"===n.iceConnectionState&&console.warn(`ICE disconnected for stream ${e.name}`)},n.onconnectionstatechange=()=>{console.log(`Connection state changed for stream ${e.name}:`,n.connectionState),"failed"===n.connectionState&&(console.warn(`Connection failed for stream ${e.name}`),t.onError&&t.onError("WebRTC connection failed"))},n.addTransceiver("video",{direction:"recvonly"}),n.addTransceiver("audio",{direction:"recvonly"});const a=setTimeout((()=>{console.warn(`WebRTC setup timed out for stream ${e.name}`),t.onError&&t.onError("WebRTC setup timed out"),L.current[e.name]&&J(e.name)}),3e4),s=setTimeout((()=>{L.current[e.name]&&(!r.srcObject||r.readyState<2)&&(console.warn(`Video playback timed out for stream ${e.name}`),t.onError&&t.onError("Video playback timed out"))}),2e4),l=()=>L.current[e.name]===n;n.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0}).then((r=>{if(!l())throw new Error("Connection was cleaned up during offer creation");return console.log(`Created offer for stream ${e.name}`),n.setLocalDescription(r)})).then((()=>{if(!l())throw new Error("Connection was cleaned up after setting local description");return console.log(`Set local description for stream ${e.name}`),H(e.name,n.localDescription)})).then((r=>{if(!l())throw new Error("Connection was cleaned up after receiving answer");return console.log(`Received answer for stream ${e.name}`),n.setRemoteDescription(new RTCSessionDescription(r))})).then((()=>{if(!l())throw new Error("Connection was cleaned up after setting remote description");console.log(`Set remote description for stream ${e.name}`),clearTimeout(a),clearTimeout(s)})).catch((r=>{clearTimeout(a),clearTimeout(s),l()?(console.error(`Error setting up WebRTC for stream ${e.name}:`,r),t.onError&&t.onError(r.message)):console.log(`WebRTC setup for stream ${e.name} was cancelled: ${r.message}`)})),r.addEventListener("playing",(()=>{clearTimeout(s)}),{once:!0})},H=d((async(e,r)=>{try{const o={type:r.type,sdp:r.sdp};console.log(`Sending formatted offer for stream ${e}`);const t=new AbortController,n=t.signal;if(!L.current[e])return console.log(`Connection for stream ${e} no longer exists, aborting offer`),t.abort(),Promise.reject(new Error("Connection no longer exists"));L.current[e].abortController=t;const a=await f.mutateAsync({...o,streamName:e,signal:n});return L.current[e]?a:(console.log(`Connection for stream ${e} was cleaned up during offer, rejecting result`),Promise.reject(new Error("Connection was cleaned up during offer")))}catch(o){if("AbortError"===o.name)return console.log(`WebRTC offer request for stream ${e} was aborted`),Promise.reject(new Error("Request aborted"));throw console.error(`Error sending offer for stream ${e}:`,o),o}}),[f]),J=e=>{if(console.log(`Cleaning up WebRTC player for stream ${e}`),L.current[e]){const o=L.current[e];if(o.abortController){console.log(`Aborting pending WebRTC requests for stream ${e}`);try{o.abortController.abort()}catch(r){console.error(`Error aborting WebRTC request for stream ${e}:`,r)}}o.onicecandidate&&(o.onicecandidate=null),o.oniceconnectionstatechange&&(o.oniceconnectionstatechange=null),o.onconnectionstatechange&&(o.onconnectionstatechange=null),o.ontrack&&(o.ontrack=null),o.close(),delete L.current[e],console.log(`Closed WebRTC connection for stream ${e}`)}y(e,j.current)},Q=()=>{console.log("Stopping all WebRTC streams"),Object.keys(L.current).forEach((e=>{J(e)})),console.log("All WebRTC streams stopped")},K=(e,r)=>{if(r&&(r.preventDefault(),r.stopPropagation()),!e)return void console.error("Stream name not provided for fullscreen toggle");console.log(`Toggling fullscreen for stream: ${e}`);const o=`video-${e.replace(/\s+/g,"-")}`,t=document.getElementById(o),n=t?t.closest(".video-cell"):null;n?document.fullscreenElement?(console.log("Exiting fullscreen mode"),document.exitFullscreen()):(console.log("Entering fullscreen mode for video cell"),n.requestFullscreen().catch((e=>{console.error(`Error attempting to enable fullscreen: ${e.message}`),c(`Could not enable fullscreen mode: ${e.message}`)}))):console.error("Stream not found:",e)};return a("section",{id:"live-page",className:"page "+(m?"fullscreen-mode":""),children:[a($,{}),a(w,{isFullscreen:m,setIsFullscreen:g,targetId:"live-page"}),a("div",{className:"page-header flex justify-between items-center mb-4 p-4 bg-white dark:bg-gray-800 rounded-lg shadow",children:[a("div",{className:"flex items-center space-x-2",children:[a("h2",{className:"text-xl font-bold mr-4",children:"Live View"}),a("div",{className:"flex space-x-2",children:a("button",{id:"hls-toggle-btn",className:"px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800",onClick:()=>window.location.href="/hls.html",children:"HLS View"})})]}),a("div",{className:"controls flex items-center space-x-2",children:[a("div",{className:"flex items-center",children:[a("label",{for:"layout-selector",className:"mr-2",children:"Layout:"}),a("select",{id:"layout-selector",className:"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600",value:S,onChange:e=>{const r=e.target.value;k(r),W(0)},children:[a("option",{value:"1",children:"1 Stream"}),a("option",{value:"2",children:"2 Streams"}),a("option",{value:"4",selected:!0,children:"4 Streams"}),a("option",{value:"6",children:"6 Streams"}),a("option",{value:"9",children:"9 Streams"}),a("option",{value:"16",children:"16 Streams"})]})]}),"1"===S&&a("div",{className:"flex items-center",children:[a("label",{for:"stream-selector",className:"mr-2",children:"Stream:"}),a("select",{id:"stream-selector",className:"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600",value:R,onChange:e=>{const r=e.target.value;E(r)},children:p.map((e=>a("option",{value:e.name,children:e.name},e.name)))})]}),a("button",{id:"fullscreen-btn",className:"p-2 rounded-full bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none",onClick:()=>u(),title:"Toggle Fullscreen",children:a("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",children:a("path",{d:"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"})})})]})]}),a("div",{className:"flex flex-col space-y-4",children:[a("div",{id:"video-grid",className:`video-container layout-${S}`,ref:_,children:z||N&&!z?a("div",{className:"flex justify-center items-center col-span-full row-span-full h-64 w-full",children:a("div",{className:"flex flex-col items-center justify-center py-8",children:[a("div",{className:"inline-block animate-spin rounded-full border-4 border-gray-300 dark:border-gray-600 border-t-blue-600 dark:border-t-blue-500 w-16 h-16"}),a("p",{className:"mt-4 text-gray-700 dark:text-gray-300",children:"Loading streams..."})]})}):F?a("div",{className:"placeholder flex flex-col justify-center items-center col-span-full row-span-full bg-white dark:bg-gray-800 rounded-lg shadow-md text-center p-8",children:[a("p",{className:"mb-6 text-gray-600 dark:text-gray-300 text-lg",children:["Error loading streams: ",F.message]}),a("button",{onClick:()=>window.location.reload(),className:"btn-primary px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors",children:"Retry"})]}):0===p.length?a("div",{className:"placeholder flex flex-col justify-center items-center col-span-full row-span-full bg-white dark:bg-gray-800 rounded-lg shadow-md text-center p-8",children:[a("p",{className:"mb-6 text-gray-600 dark:text-gray-300 text-lg",children:"No streams configured"}),a("a",{href:"streams.html",className:"btn-primary px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors",children:"Configure Streams"})]}):U().map((o=>a(e,{stream:o,onTakeSnapshot:r,onToggleFullscreen:K,webrtcConnections:L,detectionIntervals:j,initializeWebRTCPlayer:B,cleanupWebRTCPlayer:J},o.name)))}),"1"!==S&&p.length>O()?a("div",{className:"pagination-controls flex justify-center items-center space-x-4 mt-4",children:[a("button",{className:"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",onClick:()=>{console.log("Changing to previous page"),W(Math.max(0,P-1));const e=new URL(window.location),r=P-1;r>0?(e.searchParams.set("page",r+1),sessionStorage.setItem("webrtc_current_page",(r+1).toString())):(e.searchParams.delete("page"),sessionStorage.removeItem("webrtc_current_page")),window.history.replaceState({},"",e)},disabled:0===P,children:"Previous"}),a("span",{className:"text-gray-700 dark:text-gray-300",children:["Page ",P+1," of ",Math.ceil(p.length/O())]}),a("button",{className:"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed",onClick:()=>{console.log("Changing to next page");const e=Math.min(Math.ceil(p.length/O())-1,P+1);W(e);const r=new URL(window.location);r.searchParams.set("page",e+1),sessionStorage.setItem("webrtc_current_page",(e+1).toString()),window.history.replaceState({},"",r)},disabled:P>=Math.ceil(p.length/O())-1,children:"Next"})]}):null]})]})}function E(){const[e,t]=o(!1),[s,l]=o(!0);return n((()=>{!async function(){try{const e=await fetch("/api/settings");if(!e.ok)return console.error("Failed to fetch settings:",e.status,e.statusText),void l(!1);(await e.json()).webrtc_disabled?(console.log("WebRTC is disabled, using HLS view"),t(!0)):(console.log("WebRTC is enabled, using WebRTC view"),t(!1))}catch(e){console.error("Error checking WebRTC status:",e)}finally{l(!1)}}()}),[]),s?a("div",{className:"loading",children:"Loading..."}):a(p,{children:[a(k,{}),a(f,{}),e?a(v,{isWebRTCDisabled:!0}):a(r,{}),a(R,{})]})}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("main-content");e&&m(a(u,{client:g,children:a(E,{})}),e)}))}}}));
//# sourceMappingURL=index-legacy-38GxN1Cn.js.map
